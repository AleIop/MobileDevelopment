{"ast":null,"code":"import * as firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBXCX1Bb5S3OeJSmPsGr9B2J6iS9LVs2pQ\",\n  authDomain: \"mobut-project.firebaseapp.com\",\n  databaseURL: \"https://mobut-project.firebaseio.com\",\n  projectId: \"mobut-project\",\n  storageBucket: \"mobut-project.appspot.com\",\n  messagingSenderId: \"685766846531\",\n  appId: \"1:685766846531:web:39b5f7b9d38e6c22fdccf6\"\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig); // Listener for the players in the lobby\n\nlet lobbyListener;\n\nfunction addPlayerToLobby(player_object) {\n  let player_id = player_object.playerId; // player_name.replace(/\\s/g, '_');\n\n  return firebase.firestore().collection('lobby').doc(player_id).set({\n    playerName: player_object.playerName,\n    playerId: player_object.playerId,\n    imgURL: player_object.imgURL,\n    email: player_object.email,\n    ready: false\n  }).catch(function (error) {\n    console.error('Error adding a player to the lobby', error);\n  });\n}\n\nfunction stopListeningToLobby() {\n  if (lobbyListener !== undefined) {\n    lobbyListener();\n  }\n}\n\nfunction ListenToPlayersInLobby(callback) {\n  lobbyListener = firebase.firestore().collection(\"lobby\").onSnapshot(function (querySnapshot) {\n    var playersInLobby = [];\n    querySnapshot.forEach(function (doc) {\n      playersInLobby.push(doc.data());\n    });\n    callback(playersInLobby);\n  }, function onError(error) {\n    console.error(\"Error listening to lobby: \", error);\n  });\n}\n\nfunction ListenToPlayersInGame(callback) {\n  lobbyListener = firebase.firestore().collection(\"games\").onSnapshot(function (querySnapshot) {\n    var playersInGame = [];\n    querySnapshot.forEach(function (doc) {\n      playersInGame.push(doc.data());\n    });\n    callback(playersInGame);\n  }, function onError(error) {\n    console.error(\"Error listening to lobby: \", error);\n  });\n}\n\nasync function getPlayersInLobby() {\n  var playersInLobby = [];\n  await firebase.firestore().collection(\"lobby\").get().then(querySnapshot => {\n    querySnapshot.forEach(function (doc) {\n      playersInLobby.push(doc.data());\n    });\n  });\n  console.log('Players', playersInLobby);\n  return playersInLobby;\n}\n\nfunction getPlayersInGame(game_id) {\n  return firebase.firestore().collection(\"games\").doc(game_id).get();\n}\n\nfunction removePlayerFromLobby(player_object) {\n  let player_id = player_object.playerId;\n  firebase.firestore().collection(\"lobby\").doc(player_id).delete().then(function () {\n    console.log(\"Player succesfully removed!\");\n  }).catch(function (error) {\n    console.error(\"Error removing lobby: \", error);\n  });\n}\n\nfunction removePlayerFromGame(player_object) {\n  let player_id = player_object.playerId;\n  firebase.firestore().collection(\"games\").doc(player_id).delete().then(function () {\n    console.log(\"Player succesfully removed!\");\n  }).catch(function (error) {\n    console.error(\"Error removing lobby: \", error);\n  });\n}\n\nfunction removePlayersInLobby(playersInLobby) {\n  playersInLobby.forEach(function (player) {\n    removePlayerFromLobby(player.playerId);\n  });\n}\n\nfunction addPlayerToNewGame(player_object, callback) {\n  let player_id = player_object.playerId;\n  firebase.firestore().collection('games').doc(player_id).set({\n    playerName: player_object.playerName,\n    playerId: player_object.playerId,\n    imgURL: player_object.imgURL,\n    email: player_object.email,\n    ready: false\n  }).then(function (docRef) {\n    removePlayerFromLobby(player_object);\n    callback();\n  }).catch(function (error) {\n    console.error('Error adding players to new game', error);\n  });\n}\n\nfunction removeAllPlayersInGame(playersInLobby) {\n  playersInLobby.forEach(function (player) {\n    removePlayerFromGame(player.playerId);\n  });\n}\n\nfunction addPlayersToNewGame(playersInLobby) {\n  firebase.firestore().collection('games').add({\n    players: playersInLobby\n  }).then(function (docRef) {\n    console.log(\"Successfully added players to newly created game with ID: \", docRef.id);\n    return playersInLobby;\n  }).catch(function (error) {\n    console.error('Error adding players to new game', error);\n  });\n}\n\nfunction createNewGame() {\n  return getPlayersInLobby().then(function (lobby) {\n    console.log('lobby :', lobby);\n    var playersInLobby = [];\n    lobby.forEach(function (doc) {\n      playersInLobby.push(doc.data());\n    });\n    console.log(\"players in lobby:\", playersInLobby);\n    return playersInLobby;\n  }).then(addPlayersToNewGame).then(removePlayersInLobby).catch(function (error) {\n    console.error(\"Error creating a new game:\", error);\n  });\n}\n\nfunction setPlayerReadyStatus(player_id, status) {\n  firebase.firestore().collection('lobby').doc(player_id).update({\n    ready: status\n  }).catch(error => {\n    console.error('Error setting the player ready status', error);\n  });\n}\n\nfunction createFakeLobby() {\n  addPlayerToLobby(\"DJ COW\", 'https://vignette.wikia.nocookie.net/pewdiepieminecraft/images/0/06/MushCow2.jpeg/revision/latest?cb=20190803151753');\n  addPlayerToLobby(\"Bengt\", 'https://vignette.wikia.nocookie.net/pewdiepieminecraft/images/e/e7/4C2C755B-FB01-4351-886E-077F5B03CF16.jpeg/revision/latest?cb=20190811175416');\n  addPlayerToLobby(\"Sven\", 'https://vignette.wikia.nocookie.net/pewdiepieminecraft/images/d/dd/Sven.png/revision/latest?cb=20191130204116');\n  addPlayerToLobby(\"Sven's BF\", 'https://vignette.wikia.nocookie.net/pewdiepieminecraft/images/b/ba/SvenYellow.jpeg/revision/latest?cb=20190814205003');\n  addPlayerToLobby(\"Water Sheep\", 'https://vignette.wikia.nocookie.net/pewdiepieminecraft/images/d/db/Water_Sheep%27s_Return.png/revision/latest?cb=20191129235246');\n  addPlayerToLobby(\"Ulla Britta\", 'https://vignette.wikia.nocookie.net/pewdiepieminecraft/images/6/6d/BCBBA22C-0452-4B35-8C67-52F8345D734F.jpeg/revision/latest?cb=20190805181119');\n  addPlayerToLobby(\"Flip Flop\", 'https://vignette.wikia.nocookie.net/pewdiepieminecraft/images/c/c7/Flip_Flop.jpeg/revision/latest?cb=20190922230718');\n} // TODO: any functions to handle the end of a game?\n\n\nexport { addPlayerToNewGame, createNewGame, ListenToPlayersInGame, addPlayerToLobby, createFakeLobby, removePlayerFromLobby, ListenToPlayersInLobby, getPlayersInLobby, setPlayerReadyStatus, stopListeningToLobby, removePlayerFromGame };","map":{"version":3,"sources":["/Users/Alessandro/Documents/GitHub/mobut-project/src/components/firebase-database.component.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","lobbyListener","addPlayerToLobby","player_object","player_id","playerId","firestore","collection","doc","set","playerName","imgURL","email","ready","catch","error","console","stopListeningToLobby","undefined","ListenToPlayersInLobby","callback","onSnapshot","querySnapshot","playersInLobby","forEach","push","data","onError","ListenToPlayersInGame","playersInGame","getPlayersInLobby","get","then","log","getPlayersInGame","game_id","removePlayerFromLobby","delete","removePlayerFromGame","removePlayersInLobby","player","addPlayerToNewGame","docRef","removeAllPlayersInGame","addPlayersToNewGame","add","players","id","createNewGame","lobby","setPlayerReadyStatus","status","update","createFakeLobby"],"mappings":"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","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBXCX1Bb5S3OeJSmPsGr9B2J6iS9LVs2pQ\",\n    authDomain: \"mobut-project.firebaseapp.com\",\n    databaseURL: \"https://mobut-project.firebaseio.com\",\n    projectId: \"mobut-project\",\n    storageBucket: \"mobut-project.appspot.com\",\n    messagingSenderId: \"685766846531\",\n    appId: \"1:685766846531:web:39b5f7b9d38e6c22fdccf6\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n// Listener for the players in the lobby\nlet lobbyListener;\n\n\n\nfunction addPlayerToLobby(player_object) {\n    let player_id = player_object.playerId;\n    // player_name.replace(/\\s/g, '_');\n    return firebase.firestore().collection('lobby').doc(player_id).set({\n        playerName: player_object.playerName,\n        playerId: player_object.playerId,\n        imgURL: player_object.imgURL,\n        email: player_object.email,\n        ready: false\n    })\n        .catch(function (error) {\n            console.error('Error adding a player to the lobby', error);\n        });\n}\n\nfunction stopListeningToLobby() {\n    if (lobbyListener !== undefined) {\n        lobbyListener();\n    }\n}\n\nfunction ListenToPlayersInLobby(callback) {\n    lobbyListener = firebase.firestore().collection(\"lobby\").onSnapshot(function (querySnapshot) {\n        var playersInLobby = [];\n        querySnapshot.forEach(function (doc) {\n            playersInLobby.push(doc.data());\n        });\n        callback(playersInLobby);\n    }, function onError(error) {\n        console.error(\"Error listening to lobby: \", error);\n    });\n}\n\nfunction ListenToPlayersInGame(callback) {\n    lobbyListener = firebase.firestore().collection(\"games\").onSnapshot(function (querySnapshot) {\n        var playersInGame = [];\n        querySnapshot.forEach(function (doc) {\n            playersInGame.push(doc.data());\n        });\n        callback(playersInGame);\n    }, function onError(error) {\n        console.error(\"Error listening to lobby: \", error);\n    });\n}\n\nasync function getPlayersInLobby() {\n    var playersInLobby = [];\n    await firebase.firestore().collection(\"lobby\").get().then(querySnapshot => {\n        querySnapshot.forEach(function (doc) {\n            playersInLobby.push(doc.data());\n        });\n    });\n    console.log('Players', playersInLobby);\n    return playersInLobby;\n}\n\nfunction getPlayersInGame(game_id) {\n    return firebase.firestore().collection(\"games\").doc(game_id).get();\n}\n\nfunction removePlayerFromLobby(player_object) {\n    let player_id = player_object.playerId;\n    firebase.firestore().collection(\"lobby\").doc(player_id).delete().then(function () {\n        console.log(\"Player succesfully removed!\");\n    }).catch(function (error) {\n        console.error(\"Error removing lobby: \", error);\n    });\n}\n\nfunction removePlayerFromGame(player_object) {\n    let player_id = player_object.playerId;\n    firebase.firestore().collection(\"games\").doc(player_id).delete().then(function () {\n        console.log(\"Player succesfully removed!\");\n    }).catch(function (error) {\n        console.error(\"Error removing lobby: \", error);\n    });\n}\n\n\nfunction removePlayersInLobby(playersInLobby) {\n    playersInLobby.forEach(function (player) {\n        removePlayerFromLobby(player.playerId);\n    });\n}\n\nfunction addPlayerToNewGame(player_object, callback) {\n    let player_id = player_object.playerId;\n    firebase.firestore().collection('games').doc(player_id).set({\n        playerName: player_object.playerName,\n        playerId: player_object.playerId,\n        imgURL: player_object.imgURL,\n        email: player_object.email,\n        ready: false\n    })\n        .then(function (docRef) {\n            removePlayerFromLobby(player_object);\n            callback();\n        })\n        .catch(function (error) {\n            console.error('Error adding players to new game', error);\n        });\n}\n\nfunction removeAllPlayersInGame(playersInLobby) {\n    playersInLobby.forEach(function (player) {\n        removePlayerFromGame(player.playerId);\n    });\n}\n\nfunction addPlayersToNewGame(playersInLobby) {\n    firebase.firestore().collection('games').add({\n        players: playersInLobby\n    })\n        .then(function (docRef) {\n            console.log(\"Successfully added players to newly created game with ID: \", docRef.id);\n            return playersInLobby;\n        })\n        .catch(function (error) {\n            console.error('Error adding players to new game', error);\n        });\n}\n\nfunction createNewGame() {\n    return getPlayersInLobby()\n        .then(function (lobby) {\n            console.log('lobby :', lobby);\n            var playersInLobby = [];\n            lobby.forEach(function (doc) {\n                playersInLobby.push(doc.data());\n            });\n            console.log(\"players in lobby:\", playersInLobby);\n            return playersInLobby;\n        })\n        .then(addPlayersToNewGame)\n        .then(removePlayersInLobby)\n        .catch(function (error) {\n            console.error(\"Error creating a new game:\", error);\n        });\n\n}\n\nfunction setPlayerReadyStatus(player_id, status) {\n    firebase.firestore()\n        .collection('lobby')\n        .doc(player_id)\n        .update({\n            ready: status\n        })\n        .catch((error) => {\n            console.error('Error setting the player ready status', error);\n        });\n\n}\n\nfunction createFakeLobby() {\n    addPlayerToLobby(\"DJ COW\", 'https://vignette.wikia.nocookie.net/pewdiepieminecraft/images/0/06/MushCow2.jpeg/revision/latest?cb=20190803151753');\n    addPlayerToLobby(\"Bengt\", 'https://vignette.wikia.nocookie.net/pewdiepieminecraft/images/e/e7/4C2C755B-FB01-4351-886E-077F5B03CF16.jpeg/revision/latest?cb=20190811175416');\n    addPlayerToLobby(\"Sven\", 'https://vignette.wikia.nocookie.net/pewdiepieminecraft/images/d/dd/Sven.png/revision/latest?cb=20191130204116');\n    addPlayerToLobby(\"Sven's BF\", 'https://vignette.wikia.nocookie.net/pewdiepieminecraft/images/b/ba/SvenYellow.jpeg/revision/latest?cb=20190814205003');\n    addPlayerToLobby(\"Water Sheep\", 'https://vignette.wikia.nocookie.net/pewdiepieminecraft/images/d/db/Water_Sheep%27s_Return.png/revision/latest?cb=20191129235246');\n    addPlayerToLobby(\"Ulla Britta\", 'https://vignette.wikia.nocookie.net/pewdiepieminecraft/images/6/6d/BCBBA22C-0452-4B35-8C67-52F8345D734F.jpeg/revision/latest?cb=20190805181119');\n    addPlayerToLobby(\"Flip Flop\", 'https://vignette.wikia.nocookie.net/pewdiepieminecraft/images/c/c7/Flip_Flop.jpeg/revision/latest?cb=20190922230718');\n}\n\n// TODO: any functions to handle the end of a game?\n\nexport {\n    addPlayerToNewGame,\n    createNewGame,\n    ListenToPlayersInGame,\n    addPlayerToLobby,\n    createFakeLobby,\n    removePlayerFromLobby,\n    ListenToPlayersInLobby,\n    getPlayersInLobby,\n    setPlayerReadyStatus,\n    stopListeningToLobby,\n    removePlayerFromGame\n};\n"]},"metadata":{},"sourceType":"module"}