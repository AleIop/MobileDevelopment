{"ast":null,"code":"var _jsxFileName = \"/Users/Alessandro/Documents/GitHub/mobut-project/src/components/Lobby.js\";\nimport React, { Component } from 'react';\nimport './Lobby.css';\nimport Player from './Player.js';\nimport { Page as OnsPage } from 'react-onsenui';\nimport LobbyToolbar from './LobbyToolbar';\n\nclass Lobby extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: 0,\n      ready: false,\n      name: '',\n      imgURL: '',\n      allPlayers: []\n    };\n\n    this.displayToast = message => {\n      this.props.updateToastMessage(message);\n\n      if (!this.props.debounceToast) {\n        this.props.openToast();\n      }\n    };\n\n    this.toggleReady = () => {\n      this.countDown = 30;\n      const readyState = !this.state.ready;\n      const id = this.state.id;\n      this.setState({\n        ready: readyState\n      });\n\n      if (readyState) {\n        this.props.addPlayerToLobbyFunc(this.props.user);\n        this.displayToast(\"You joined the current game session\");\n      } else {\n        this.props.removePlayerFromLobbyFunc(this.props.user);\n        this.displayToast(\"You exited the current game session\");\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      id: this.props.user.playerId,\n      imgURL: this.props.user.imgURL,\n      name: this.props.user.playerName,\n      ready: this.props.user.ready,\n      allPlayers: this.props.allPlayers\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.lobbyPropsUpdate !== this.props.lobbyPropsUpdate) {\n      this.setState({\n        id: this.props.user.playerId,\n        imgURL: this.props.user.imgURL,\n        name: this.props.user.playerName,\n        ready: this.props.user.ready,\n        allPlayers: this.props.allPlayers\n      });\n      console.log('this.state.allPlayers :>> ', this.state.allPlayers);\n\n      if (this.state.allPlayers.length >= 2) {\n        console.log('4 players or more');\n        let interval = setInterval(() => {\n          this.displayToast(this.countDown);\n          this.countDown = this.countDown - 5;\n\n          if (this.countDown <= 0) {\n            clearInterval(this);\n            this.displayToast(\"countDown expired\");\n          }\n        }, 5000);\n      }\n    }\n  }\n\n  render() {\n    const allPlayers = this.state.allPlayers;\n    return /*#__PURE__*/React.createElement(OnsPage, {\n      className: 'lobby-component',\n      renderToolbar: () => {\n        return /*#__PURE__*/React.createElement(LobbyToolbar, {\n          title: 'Lobby',\n          user: this.props.user,\n          signOut: this.props.signOut,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }\n        });\n      },\n      style: {\n        backgroundColor: 'red',\n        backgroundSize: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 60,\n        marginBottom: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }), allPlayers.map(player => {\n      return /*#__PURE__*/React.createElement(Player, {\n        className: \"player-item\",\n        key: player.playerId,\n        id: player.playerId,\n        style: {\n          marginTop: 20\n        },\n        player: player,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }\n      });\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: `lobby-btn ${this.state.ready ? `lobby-exit-btn` : `lobby-join-btn`}`,\n      onClick: this.toggleReady,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default Lobby;","map":{"version":3,"sources":["/Users/Alessandro/Documents/GitHub/mobut-project/src/components/Lobby.js"],"names":["React","Component","Player","Page","OnsPage","LobbyToolbar","Lobby","state","id","ready","name","imgURL","allPlayers","displayToast","message","props","updateToastMessage","debounceToast","openToast","toggleReady","countDown","readyState","setState","addPlayerToLobbyFunc","user","removePlayerFromLobbyFunc","componentDidMount","playerId","playerName","componentDidUpdate","prevProps","lobbyPropsUpdate","console","log","length","interval","setInterval","clearInterval","render","signOut","backgroundColor","backgroundSize","marginTop","marginBottom","map","player"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,IAAI,IAAIC,OAAjB,QAAgC,eAAhC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAGA,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAAA;AAAA;AAAA,SAI1BM,KAJ0B,GAIlB;AACJC,MAAAA,EAAE,EAAE,CADA;AAEJC,MAAAA,KAAK,EAAE,KAFH;AAGJC,MAAAA,IAAI,EAAE,EAHF;AAIJC,MAAAA,MAAM,EAAE,EAJJ;AAKJC,MAAAA,UAAU,EAAE;AALR,KAJkB;;AAAA,SAsD1BC,YAtD0B,GAsDVC,OAAD,IAAa;AACxB,WAAKC,KAAL,CAAWC,kBAAX,CAA8BF,OAA9B;;AACA,UAAI,CAAE,KAAKC,KAAL,CAAWE,aAAjB,EAAiC;AAC7B,aAAKF,KAAL,CAAWG,SAAX;AACH;AACJ,KA3DyB;;AAAA,SA6D1BC,WA7D0B,GA6DZ,MAAM;AAChB,WAAKC,SAAL,GAAiB,EAAjB;AAEA,YAAMC,UAAU,GAAG,CAAE,KAAKd,KAAL,CAAWE,KAAhC;AACA,YAAMD,EAAE,GAAG,KAAKD,KAAL,CAAWC,EAAtB;AACA,WAAKc,QAAL,CAAc;AAAEb,QAAAA,KAAK,EAAEY;AAAT,OAAd;;AACA,UAAIA,UAAJ,EAAgB;AACZ,aAAKN,KAAL,CAAWQ,oBAAX,CAAgC,KAAKR,KAAL,CAAWS,IAA3C;AACA,aAAKX,YAAL,CAAkB,qCAAlB;AACH,OAHD,MAGO;AACH,aAAKE,KAAL,CAAWU,yBAAX,CAAqC,KAAKV,KAAL,CAAWS,IAAhD;AACA,aAAKX,YAAL,CAAkB,qCAAlB;AACH;AACJ,KA1EyB;AAAA;;AAW1Ba,EAAAA,iBAAiB,GAAG;AAChB,SAAKJ,QAAL,CAAc;AACVd,MAAAA,EAAE,EAAE,KAAKO,KAAL,CAAWS,IAAX,CAAgBG,QADV;AAEVhB,MAAAA,MAAM,EAAE,KAAKI,KAAL,CAAWS,IAAX,CAAgBb,MAFd;AAGVD,MAAAA,IAAI,EAAE,KAAKK,KAAL,CAAWS,IAAX,CAAgBI,UAHZ;AAIVnB,MAAAA,KAAK,EAAE,KAAKM,KAAL,CAAWS,IAAX,CAAgBf,KAJb;AAKVG,MAAAA,UAAU,EAAE,KAAKG,KAAL,CAAWH;AALb,KAAd;AAQH;;AAEDiB,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAE1B,QAAIA,SAAS,CAACC,gBAAV,KAA+B,KAAKhB,KAAL,CAAWgB,gBAA9C,EAAgE;AAC5D,WAAKT,QAAL,CAAc;AACVd,QAAAA,EAAE,EAAE,KAAKO,KAAL,CAAWS,IAAX,CAAgBG,QADV;AAEVhB,QAAAA,MAAM,EAAE,KAAKI,KAAL,CAAWS,IAAX,CAAgBb,MAFd;AAGVD,QAAAA,IAAI,EAAE,KAAKK,KAAL,CAAWS,IAAX,CAAgBI,UAHZ;AAIVnB,QAAAA,KAAK,EAAE,KAAKM,KAAL,CAAWS,IAAX,CAAgBf,KAJb;AAKVG,QAAAA,UAAU,EAAE,KAAKG,KAAL,CAAWH;AALb,OAAd;AAQAoB,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0C,KAAK1B,KAAL,CAAWK,UAArD;;AACA,UAAI,KAAKL,KAAL,CAAWK,UAAX,CAAsBsB,MAAtB,IAAgC,CAApC,EAAuC;AAEnCF,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAIA,YAAIE,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC7B,eAAKvB,YAAL,CAAkB,KAAKO,SAAvB;AACA,eAAKA,SAAL,GAAiB,KAAKA,SAAL,GAAiB,CAAlC;;AACA,cAAI,KAAKA,SAAL,IAAkB,CAAtB,EAAyB;AACrBiB,YAAAA,aAAa,CAAC,IAAD,CAAb;AACA,iBAAKxB,YAAL,CAAkB,mBAAlB;AACH;AACJ,SAPyB,EAOvB,IAPuB,CAA1B;AAUH;AACJ;AACJ;;AAwBDyB,EAAAA,MAAM,GAAG;AACL,UAAM1B,UAAU,GAAG,KAAKL,KAAL,CAAWK,UAA9B;AACA,wBACI,oBAAC,OAAD;AACI,MAAA,SAAS,EAAE,iBADf;AAEI,MAAA,aAAa,EAAE,MAAM;AACjB,4BACI,oBAAC,YAAD;AACI,UAAA,KAAK,EAAE,OADX;AAEI,UAAA,IAAI,EAAE,KAAKG,KAAL,CAAWS,IAFrB;AAGI,UAAA,OAAO,EAAE,KAAKT,KAAL,CAAWwB,OAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,OATL;AAUI,MAAA,KAAK,EAAE;AACHC,QAAAA,eAAe,EAAE,KADd;AAEHC,QAAAA,cAAc,EAAE;AAFb,OAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA2BI;AACI,MAAA,KAAK,EAAE;AACHC,QAAAA,SAAS,EAAE,EADR;AAEHC,QAAAA,YAAY,EAAE;AAFX,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BJ,EAkCK/B,UAAU,CAACgC,GAAX,CAAgBC,MAAD,IAAY;AAExB,0BACI,oBAAC,MAAD;AACI,QAAA,SAAS,EAAC,aADd;AAEI,QAAA,GAAG,EAAEA,MAAM,CAAClB,QAFhB;AAGI,QAAA,EAAE,EAAEkB,MAAM,CAAClB,QAHf;AAII,QAAA,KAAK,EAAE;AACHe,UAAAA,SAAS,EAAE;AADR,SAJX;AAQI,QAAA,MAAM,EAAEG,MARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAUH,KAZA,CAlCL,eA+CI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,SAAS,EAAG,aAAa,KAAKtC,KAAL,CAAWE,KAAZ,GAAsB,gBAAtB,GAAyC,gBAAgB,EADrF;AAEI,MAAA,OAAO,EAAE,KAAKU,WAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CA/CJ,CADJ;AAwDH;;AAtIyB;;AAyI9B,eAAeb,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Lobby.css';\nimport Player from './Player.js';\nimport { Page as OnsPage } from 'react-onsenui';\nimport LobbyToolbar from './LobbyToolbar'\n\n\nclass Lobby extends Component {\n\n    countDown;\n\n    state = {\n        id: 0,\n        ready: false,\n        name: '',\n        imgURL: '',\n        allPlayers: [],\n    };\n    componentDidMount() {\n        this.setState({\n            id: this.props.user.playerId,\n            imgURL: this.props.user.imgURL,\n            name: this.props.user.playerName,\n            ready: this.props.user.ready,\n            allPlayers: this.props.allPlayers\n        })\n\n    }\n\n    componentDidUpdate(prevProps) {\n\n        if (prevProps.lobbyPropsUpdate !== this.props.lobbyPropsUpdate) {\n            this.setState({\n                id: this.props.user.playerId,\n                imgURL: this.props.user.imgURL,\n                name: this.props.user.playerName,\n                ready: this.props.user.ready,\n                allPlayers: this.props.allPlayers\n            })\n\n            console.log('this.state.allPlayers :>> ', this.state.allPlayers);\n            if (this.state.allPlayers.length >= 2) {\n\n                console.log('4 players or more');\n\n\n\n                let interval = setInterval(() => {\n                    this.displayToast(this.countDown);\n                    this.countDown = this.countDown - 5;\n                    if (this.countDown <= 0) {\n                        clearInterval(this);\n                        this.displayToast(\"countDown expired\")\n                    }\n                }, 5000);\n\n\n            }\n        }\n    }\n\n    displayToast = (message) => {\n        this.props.updateToastMessage(message);\n        if (!(this.props.debounceToast)) {\n            this.props.openToast();\n        }\n    };\n\n    toggleReady = () => {\n        this.countDown = 30;\n\n        const readyState = !(this.state.ready);\n        const id = this.state.id;\n        this.setState({ ready: readyState });\n        if (readyState) {\n            this.props.addPlayerToLobbyFunc(this.props.user);\n            this.displayToast(\"You joined the current game session\");\n        } else {\n            this.props.removePlayerFromLobbyFunc(this.props.user);\n            this.displayToast(\"You exited the current game session\");\n        }\n    };\n\n    render() {\n        const allPlayers = this.state.allPlayers;\n        return (\n            <OnsPage\n                className={'lobby-component'}\n                renderToolbar={() => {\n                    return (\n                        <LobbyToolbar\n                            title={'Lobby'}\n                            user={this.props.user}\n                            signOut={this.props.signOut}\n                        />)\n                }}\n                style={{\n                    backgroundColor: 'red',\n                    backgroundSize: 0,\n\n                }}\n            >\n                {/* <Player\n                    className=\"player-item\"\n                    key={this.state.playerId}\n                    style={{\n                        marginTop: (this.state.ready) ? 80 : 0,\n                        marginBottom: (this.state.ready) ? 20 : 60\n                    }}\n                    ready={this.state.ready}\n                    player={this.props.user}\n                /> */}\n\n                <div\n                    style={{\n                        marginTop: 60,\n                        marginBottom: 20\n                    }}>\n\n                </div>\n                {allPlayers.map((player) => {\n\n                    return (\n                        <Player\n                            className=\"player-item\"\n                            key={player.playerId}\n                            id={player.playerId}\n                            style={{\n                                marginTop: 20,\n\n                            }}\n                            player={player} />)\n                })}\n                <div>\n                    <button\n                        className={`lobby-btn ${(this.state.ready) ? `lobby-exit-btn` : `lobby-join-btn`}`}\n                        onClick={this.toggleReady}\n                    />\n                </div>\n            </OnsPage>\n        );\n    }\n}\n\nexport default Lobby;\n\n\n\n"]},"metadata":{},"sourceType":"module"}