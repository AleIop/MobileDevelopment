{"ast":null,"code":"var _jsxFileName = \"/Users/Alessandro/Documents/GitHub/mobut-project/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { createFakeLobby, setPlayerReadyStatus, ListenToPlayersInLobby, addPlayerToLobby, removePlayerFromLobby, addPlayerToNewGame, getPlayersInLobby, createNewGame, stopListeningToLobby, ListenToPlayersInGame } from \"./components/firebase-database.component\";\nimport { signIn, initFirebaseAuth, signOut } from \"./components/firebase-authentication.component\";\nimport Lobby from './components/Lobby.js';\nimport Home from './components/Home.js';\nimport MapView from './components/MapView.js';\nimport { Toast } from 'react-onsenui';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport PubNubReact from 'pubnub-react';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.publishMyLocation = loc => {\n      console.log('this.props :>> ', this.state);\n      console.log('loc :>> ', loc);\n      this.pubnub.publish({\n        message: {\n          user: this.state.user,\n          userLocation: {\n            lat: loc.coords.latitude,\n            lng: loc.coords.longitude\n          }\n        },\n        channel: 'positionChannel'\n      });\n    };\n\n    this.state = {\n      playersInLobby: [],\n      lobbyPropsUpdate: false,\n      toast: {\n        open: false,\n        timeout: 2500,\n        message: ''\n      },\n      myLocation: {\n        lat: 0,\n        lng: 0\n      },\n      targetLocation: {\n        lat: 0,\n        lng: 0\n      },\n      user: {},\n      redirect: false,\n      path: \"/\"\n    };\n\n    this.authStateObserver = user => {\n      if (user) {\n        // User is signed in!,\n        this.setState({\n          user: this.getUserProps(user),\n          redirect: true,\n          path: '/lobby'\n        }); // console.log({ user }, ' signed in');\n      } else {\n        // User is signed out!\n        this.setState({\n          user: {}\n        }); // console.log({ user }, ' signed out');\n      }\n    };\n\n    this.getUserIndex = list => {\n      for (let i = 0; i < list.length; i++) {\n        const player = list[i];\n\n        if (player.id === this.state.user.id) {\n          return i;\n        }\n      }\n    };\n\n    this.getUserProps = user => {\n      // console.log('Current user: ', { user });\n      return {\n        email: user.email,\n        playerId: user.uid,\n        playerName: this.formatDisplayName(user.displayName),\n        imgURL: user.photoURL\n      };\n    };\n\n    this.formatDisplayName = name => {\n      let maxLength = 8;\n      let firstName = this.getFirstName(name);\n\n      if (firstName.length > maxLength) {\n        return `${firstName.slice(0, maxLength)}...`;\n      } else {\n        return firstName;\n      }\n    };\n\n    this.getFirstName = name => {\n      return name.split(\" \")[0];\n    };\n\n    this.playerInLobby = id => {\n      const allPlayers = this.state.playersInLobby;\n      let player;\n\n      for (let i = 0; i < allPlayers.length; i++) {\n        player = allPlayers[i];\n\n        if (player.playerId === id) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    this.updateToastMessage = message => {\n      let toast = this.state.toast;\n      toast[\"message\"] = message;\n      this.setState({\n        toast: toast\n      });\n    };\n\n    this.openToast = () => {\n      let toast = this.state.toast;\n      toast[\"open\"] = true;\n      this.setState({\n        toast: toast\n      });\n      setTimeout(() => {\n        toast[\"open\"] = false;\n        this.setState({\n          toast: toast\n        });\n      }, this.state.toast.timeout);\n    };\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          push: true,\n          to: {\n            pathname: this.state.path,\n            state: {}\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 20\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 20\n          }\n        });\n      }\n    };\n\n    this.signOut = () => {\n      this.setState({\n        path: '/'\n      });\n      removePlayerFromLobby(this.state.user);\n      signOut();\n    };\n\n    this.pubnub = new PubNubReact({\n      publishKey: 'pub-c-c72ffc95-6f42-4bdf-8a95-04015fd20d32',\n      subscribeKey: 'sub-c-ea26bb44-92b6-11ea-8dc6-429c98eb9bb1'\n    });\n    this.pubnub.init(this);\n  }\n\n  componentWillMount() {\n    this.pubnub.subscribe({\n      channels: ['positionChannel'],\n      withPresence: true\n    }); // Listening to 'positionChannel'\n\n    this.pubnub.getMessage('positionChannel', msg => {\n      console.log('msg :>> ', msg);\n\n      if (this.state.huntingPlayer.playerId === msg.message.user.playerId) {\n        this.setState({\n          targetLocation: msg.message.userLocation\n        });\n      }\n\n      console.log('from pubnub update this.state :>> ', this.state);\n    }); // this.pubnub.getStatus((st) => {\n    // });\n  }\n\n  componentWillUnmount() {\n    this.pubnub.unsubscribe({\n      channels: ['positionChannel']\n    });\n  }\n\n  componentDidMount() {\n    ListenToPlayersInLobby(data => {\n      this.setState({\n        playersInLobby: data,\n        lobbyPropsUpdate: !this.state.lobbyPropsUpdate\n      });\n    }); // // the way of ramtin\n    // ListenToPlayersInGame((data) => {\n    //     let userIndex = this.getUserIndex(data); //returns index in players list of current user\n    //     if (data.length >= 2) {\n    //         let chasedIndex = userIndex - 1;\n    //         let targetIndex = userIndex + 1;\n    //         if (userIndex === data.length - 1) {\n    //             targetIndex = 0;\n    //         }\n    //         if (userIndex === 0) {\n    //             chasedIndex = data.length - 1;\n    //         }\n    //         console.log('Player name: ',\n    //             this.state.user.displayName,\n    //             '\\nPlayer index: ', \n    //             {userIndex},\n    //             \"\\n He's chasing: \",\n    //             {targetIndex},\n    //             \"\\n He's chased by: \",\n    //             {chasedIndex});\n    //         this.setState({\n    //             playersInGame: data,\n    //             chasedByPlayer: data[chasedIndex],\n    //             huntingPlayer: data[targetIndex],\n    //             gamePropsUpdate: (!(this.state.gamePropsUpdate))\n    //         });\n    //     }\n    // });\n    // the way of Ale, He's so random\n\n    ListenToPlayersInGame(data => {\n      if (data.length >= 2) {\n        let targetPlayer = data[Math.floor(Math.random() * data.length)];\n\n        while (targetPlayer.playerId === this.state.user.playerId) {\n          targetPlayer = data[Math.floor(Math.random() * data.length)];\n        } // console.log('Player: ',\n        //         this.state.user,\n        //         '\\nTarget player: ', \n        //         {targetPlayer});\n\n\n        this.setState({\n          playersInGame: data,\n          // chasedByPlayer: \n          huntingPlayer: targetPlayer,\n          gamePropsUpdate: !this.state.gamePropsUpdate\n        });\n      }\n    });\n    initFirebaseAuth(this.authStateObserver);\n  }\n\n  // signIn = () => {\n  //     signIn().then(res => {\n  //         this.setState({\n  //             user: this.getUserProps(res.user),\n  //             page: 1,\n  //         })\n  //     });\n  // };\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }\n    }, this.renderRedirect(), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      render: ({\n        location\n      }) => /*#__PURE__*/React.createElement(Switch, {\n        location: location,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: [\"/lobby\"],\n        render: props => {\n          const user = this.state.user;\n          const userInLobby = this.playerInLobby(user.playerId);\n          return /*#__PURE__*/React.createElement(Lobby, {\n            user: user,\n            userInLobby: userInLobby,\n            allPlayers: this.state.playersInLobby,\n            lobbyPropsUpdate: this.state.lobbyPropsUpdate,\n            updatePlayerReadyState: setPlayerReadyStatus,\n            addPlayerToLobbyFunc: addPlayerToLobby,\n            removePlayerFromLobbyFunc: removePlayerFromLobby,\n            updateToastMessage: this.updateToastMessage,\n            openToast: this.openToast,\n            debounceToast: this.state.toast.open,\n            signOut: this.signOut,\n            addPlayerToNewGame: addPlayerToNewGame,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 41\n            }\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: [\"/map\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(MapView, {\n        user: this.state.user,\n        playersInGame: this.state.playersInGame,\n        huntingPlayer: this.state.huntingPlayer,\n        chasedByPlayer: this.state.chasedByPlayer,\n        publishMyLocation: this.publishMyLocation,\n        targetLocation: this.state.targetLocation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: [\"/\", \"/index.html\", \"/*\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Home, {\n        signIn: signIn,\n        content: /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 41\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 33\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Toast, {\n      isOpen: this.state.toast.open,\n      animation: \"fall\",\n      animationOptions: {\n        duration: 0.2,\n        delay: 0.4,\n        timing: 'ease-in'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 21\n      }\n    }, this.state.toast.message)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Alessandro/Documents/GitHub/mobut-project/src/App.js"],"names":["React","Component","createFakeLobby","setPlayerReadyStatus","ListenToPlayersInLobby","addPlayerToLobby","removePlayerFromLobby","addPlayerToNewGame","getPlayersInLobby","createNewGame","stopListeningToLobby","ListenToPlayersInGame","signIn","initFirebaseAuth","signOut","Lobby","Home","MapView","Toast","BrowserRouter","Router","Route","Switch","Redirect","PubNubReact","App","constructor","props","publishMyLocation","loc","console","log","state","pubnub","publish","message","user","userLocation","lat","coords","latitude","lng","longitude","channel","playersInLobby","lobbyPropsUpdate","toast","open","timeout","myLocation","targetLocation","redirect","path","authStateObserver","setState","getUserProps","getUserIndex","list","i","length","player","id","email","playerId","uid","playerName","formatDisplayName","displayName","imgURL","photoURL","name","maxLength","firstName","getFirstName","slice","split","playerInLobby","allPlayers","updateToastMessage","openToast","setTimeout","renderRedirect","pathname","publishKey","subscribeKey","init","componentWillMount","subscribe","channels","withPresence","getMessage","msg","huntingPlayer","componentWillUnmount","unsubscribe","componentDidMount","data","targetPlayer","Math","floor","random","playersInGame","gamePropsUpdate","render","location","userInLobby","chasedByPlayer","duration","delay","timing"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SACIC,eADJ,EAEIC,oBAFJ,EAGIC,sBAHJ,EAIIC,gBAJJ,EAKIC,qBALJ,EAMIC,kBANJ,EAOIC,iBAPJ,EAQIC,aARJ,EASIC,oBATJ,EAUIC,qBAVJ,QAWO,0CAXP;AAYA,SACIC,MADJ,EAEIC,gBAFJ,EAGIC,OAHJ,QAIO,gDAJP;AAKA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,EAAiDC,QAAjD,QAAiE,kBAAjE;AACA,OAAOC,WAAP,MAAwB,cAAxB;;AAGA,MAAMC,GAAN,SAAkBxB,SAAlB,CAA4B;AAGxByB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA+BnBC,iBA/BmB,GA+BEC,GAAD,IAAS;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,KAAKC,KAApC;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,GAAxB;AACA,WAAKI,MAAL,CAAYC,OAAZ,CAAoB;AAChBC,QAAAA,OAAO,EAAE;AACLC,UAAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWI,IADZ;AAELC,UAAAA,YAAY,EAAE;AACVC,YAAAA,GAAG,EAAET,GAAG,CAACU,MAAJ,CAAWC,QADN;AAEVC,YAAAA,GAAG,EAAEZ,GAAG,CAACU,MAAJ,CAAWG;AAFN;AAFT,SADO;AAQhBC,QAAAA,OAAO,EAAE;AARO,OAApB;AAUH,KA5CkB;;AAAA,SAqDnBX,KArDmB,GAqDX;AACJY,MAAAA,cAAc,EAAE,EADZ;AAEJC,MAAAA,gBAAgB,EAAE,KAFd;AAGJC,MAAAA,KAAK,EAAE;AACHC,QAAAA,IAAI,EAAE,KADH;AAEHC,QAAAA,OAAO,EAAE,IAFN;AAGHb,QAAAA,OAAO,EAAE;AAHN,OAHH;AAQJc,MAAAA,UAAU,EAAE;AACRX,QAAAA,GAAG,EAAE,CADG;AAERG,QAAAA,GAAG,EAAE;AAFG,OARR;AAYJS,MAAAA,cAAc,EAAE;AACZZ,QAAAA,GAAG,EAAE,CADO;AAEZG,QAAAA,GAAG,EAAE;AAFO,OAZZ;AAgBJL,MAAAA,IAAI,EAAE,EAhBF;AAiBJe,MAAAA,QAAQ,EAAE,KAjBN;AAkBJC,MAAAA,IAAI,EAAE;AAlBF,KArDW;;AAAA,SA0EnBC,iBA1EmB,GA0EEjB,IAAD,IAAU;AAC1B,UAAIA,IAAJ,EAAU;AAAE;AACR,aAAKkB,QAAL,CAAc;AACVlB,UAAAA,IAAI,EAAE,KAAKmB,YAAL,CAAkBnB,IAAlB,CADI;AAEVe,UAAAA,QAAQ,EAAE,IAFA;AAGVC,UAAAA,IAAI,EAAE;AAHI,SAAd,EADM,CAMN;AACH,OAPD,MAOO;AAAE;AACL,aAAKE,QAAL,CAAc;AACVlB,UAAAA,IAAI,EAAE;AADI,SAAd,EADG,CAIH;AACH;AACJ,KAxFkB;;AAAA,SA2JnBoB,YA3JmB,GA2JHC,IAAD,IAAU;AACrB,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAACE,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClC,cAAME,MAAM,GAAGH,IAAI,CAACC,CAAD,CAAnB;;AACA,YAAIE,MAAM,CAACC,EAAP,KAAc,KAAK7B,KAAL,CAAWI,IAAX,CAAgByB,EAAlC,EAAsC;AAClC,iBAAOH,CAAP;AACH;AACJ;AACJ,KAlKkB;;AAAA,SAoKnBH,YApKmB,GAoKHnB,IAAD,IAAU;AACrB;AACA,aAAO;AACH0B,QAAAA,KAAK,EAAE1B,IAAI,CAAC0B,KADT;AAEHC,QAAAA,QAAQ,EAAE3B,IAAI,CAAC4B,GAFZ;AAGHC,QAAAA,UAAU,EAAE,KAAKC,iBAAL,CAAuB9B,IAAI,CAAC+B,WAA5B,CAHT;AAIHC,QAAAA,MAAM,EAAEhC,IAAI,CAACiC;AAJV,OAAP;AAMH,KA5KkB;;AAAA,SA8KnBH,iBA9KmB,GA8KEI,IAAD,IAAU;AAC1B,UAAIC,SAAS,GAAG,CAAhB;AACA,UAAIC,SAAS,GAAG,KAAKC,YAAL,CAAkBH,IAAlB,CAAhB;;AACA,UAAIE,SAAS,CAACb,MAAV,GAAmBY,SAAvB,EAAkC;AAC9B,eAAQ,GAAEC,SAAS,CAACE,KAAV,CAAgB,CAAhB,EAAmBH,SAAnB,CAA8B,KAAxC;AACH,OAFD,MAEO;AACH,eAAOC,SAAP;AACH;AACJ,KAtLkB;;AAAA,SAwLnBC,YAxLmB,GAwLHH,IAAD,IAAU;AACrB,aAAQA,IAAI,CAACK,KAAL,CAAW,GAAX,CAAD,CAAkB,CAAlB,CAAP;AACH,KA1LkB;;AAAA,SA4LnBC,aA5LmB,GA4LFf,EAAD,IAAQ;AACpB,YAAMgB,UAAU,GAAG,KAAK7C,KAAL,CAAWY,cAA9B;AACA,UAAIgB,MAAJ;;AACA,WAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmB,UAAU,CAAClB,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxCE,QAAAA,MAAM,GAAGiB,UAAU,CAACnB,CAAD,CAAnB;;AACA,YAAIE,MAAM,CAACG,QAAP,KAAoBF,EAAxB,EAA4B;AACxB,iBAAO,IAAP;AACH;AACJ;;AACD,aAAO,KAAP;AACH,KAtMkB;;AAAA,SAwMnBiB,kBAxMmB,GAwMG3C,OAAD,IAAa;AAC9B,UAAIW,KAAK,GAAG,KAAKd,KAAL,CAAWc,KAAvB;AACAA,MAAAA,KAAK,CAAC,SAAD,CAAL,GAAmBX,OAAnB;AACA,WAAKmB,QAAL,CAAc;AACVR,QAAAA,KAAK,EAAEA;AADG,OAAd;AAGH,KA9MkB;;AAAA,SAgNnBiC,SAhNmB,GAgNP,MAAM;AACd,UAAIjC,KAAK,GAAG,KAAKd,KAAL,CAAWc,KAAvB;AACAA,MAAAA,KAAK,CAAC,MAAD,CAAL,GAAgB,IAAhB;AACA,WAAKQ,QAAL,CAAc;AACVR,QAAAA,KAAK,EAAEA;AADG,OAAd;AAGAkC,MAAAA,UAAU,CAAC,MAAM;AACblC,QAAAA,KAAK,CAAC,MAAD,CAAL,GAAgB,KAAhB;AACA,aAAKQ,QAAL,CAAc;AACVR,UAAAA,KAAK,EAAEA;AADG,SAAd;AAGH,OALS,EAKP,KAAKd,KAAL,CAAWc,KAAX,CAAiBE,OALV,CAAV;AAMH,KA5NkB;;AAAA,SA8NnBiC,cA9NmB,GA8NF,MAAM;AACnB,UAAI,KAAKjD,KAAL,CAAWmB,QAAf,EAAyB;AACrB,4BAAO,oBAAC,QAAD;AAAU,UAAA,IAAI,MAAd;AAAe,UAAA,EAAE,EAAE;AACtB+B,YAAAA,QAAQ,EAAE,KAAKlD,KAAL,CAAWoB,IADC;AAEtBpB,YAAAA,KAAK,EAAE;AAFe,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAMH,OAPD,MAOO;AACH,4BAAO,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;AACJ,KAzOkB;;AAAA,SA4OnBlB,OA5OmB,GA4OT,MAAM;AACZ,WAAKwC,QAAL,CAAc;AACVF,QAAAA,IAAI,EAAE;AADI,OAAd;AAGA9C,MAAAA,qBAAqB,CAAC,KAAK0B,KAAL,CAAWI,IAAZ,CAArB;AACAtB,MAAAA,OAAO;AACV,KAlPkB;;AAEf,SAAKmB,MAAL,GAAc,IAAIT,WAAJ,CAAgB;AAC1B2D,MAAAA,UAAU,EAAE,4CADc;AAE1BC,MAAAA,YAAY,EAAE;AAFY,KAAhB,CAAd;AAIA,SAAKnD,MAAL,CAAYoD,IAAZ,CAAiB,IAAjB;AACH;;AAEDC,EAAAA,kBAAkB,GAAG;AACjB,SAAKrD,MAAL,CAAYsD,SAAZ,CAAsB;AAClBC,MAAAA,QAAQ,EAAE,CAAC,iBAAD,CADQ;AAElBC,MAAAA,YAAY,EAAE;AAFI,KAAtB,EADiB,CAMjB;;AACA,SAAKxD,MAAL,CAAYyD,UAAZ,CAAuB,iBAAvB,EAA2CC,GAAD,IAAS;AAC/C7D,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB4D,GAAxB;;AACA,UAAI,KAAK3D,KAAL,CAAW4D,aAAX,CAAyB7B,QAAzB,KAAsC4B,GAAG,CAACxD,OAAJ,CAAYC,IAAZ,CAAiB2B,QAA3D,EAAqE;AACjE,aAAKT,QAAL,CAAc;AACVJ,UAAAA,cAAc,EAAEyC,GAAG,CAACxD,OAAJ,CAAYE;AADlB,SAAd;AAGH;;AACDP,MAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkD,KAAKC,KAAvD;AACH,KARD,EAPiB,CAiBjB;AACA;AACH;;AAkBD6D,EAAAA,oBAAoB,GAAG;AACnB,SAAK5D,MAAL,CAAY6D,WAAZ,CAAwB;AACpBN,MAAAA,QAAQ,EAAE,CAAC,iBAAD;AADU,KAAxB;AAGH;;AAwCDO,EAAAA,iBAAiB,GAAG;AAChB3F,IAAAA,sBAAsB,CAAE4F,IAAD,IAAU;AAC7B,WAAK1C,QAAL,CAAc;AACVV,QAAAA,cAAc,EAAEoD,IADN;AAEVnD,QAAAA,gBAAgB,EAAG,CAAE,KAAKb,KAAL,CAAWa;AAFtB,OAAd;AAIH,KALqB,CAAtB,CADgB,CAQhB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACAlC,IAAAA,qBAAqB,CAAEqF,IAAD,IAAU;AAC5B,UAAIA,IAAI,CAACrC,MAAL,IAAe,CAAnB,EAAsB;AAClB,YAAIsC,YAAY,GAAGD,IAAI,CAACE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,IAAI,CAACrC,MAAhC,CAAD,CAAvB;;AACA,eAAOsC,YAAY,CAAClC,QAAb,KAA0B,KAAK/B,KAAL,CAAWI,IAAX,CAAgB2B,QAAjD,EAA2D;AACvDkC,UAAAA,YAAY,GAAGD,IAAI,CAACE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,IAAI,CAACrC,MAAhC,CAAD,CAAnB;AACH,SAJiB,CAMlB;AACA;AACA;AACA;;;AAEA,aAAKL,QAAL,CAAc;AACV+C,UAAAA,aAAa,EAAEL,IADL;AAEV;AACAJ,UAAAA,aAAa,EAAEK,YAHL;AAIVK,UAAAA,eAAe,EAAG,CAAE,KAAKtE,KAAL,CAAWsE;AAJrB,SAAd;AAMH;AACJ,KAnBoB,CAArB;AAqBAzF,IAAAA,gBAAgB,CAAC,KAAKwC,iBAAN,CAAhB;AACH;;AA2FD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAkD,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKtB,cAAL,EADL,eAEI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,MAAM,EAAE,CAAC;AAAEuB,QAAAA;AAAF,OAAD,kBACjB,oBAAC,MAAD;AAAQ,QAAA,QAAQ,EAAEA,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAE,CAAC,QAAD,CAAnB;AAA+B,QAAA,MAAM,EAAE7E,KAAK,IAAI;AAC5C,gBAAMS,IAAI,GAAG,KAAKJ,KAAL,CAAWI,IAAxB;AACA,gBAAMqE,WAAW,GAAG,KAAK7B,aAAL,CAAmBxC,IAAI,CAAC2B,QAAxB,CAApB;AACA,8BAAQ,oBAAC,KAAD;AACJ,YAAA,IAAI,EAAE3B,IADF;AAEJ,YAAA,WAAW,EAAEqE,WAFT;AAGJ,YAAA,UAAU,EAAE,KAAKzE,KAAL,CAAWY,cAHnB;AAIJ,YAAA,gBAAgB,EAAE,KAAKZ,KAAL,CAAWa,gBAJzB;AAKJ,YAAA,sBAAsB,EAAE1C,oBALpB;AAMJ,YAAA,oBAAoB,EAAEE,gBANlB;AAOJ,YAAA,yBAAyB,EAAEC,qBAPvB;AAQJ,YAAA,kBAAkB,EAAE,KAAKwE,kBARrB;AASJ,YAAA,SAAS,EAAE,KAAKC,SATZ;AAUJ,YAAA,aAAa,EAAE,KAAK/C,KAAL,CAAWc,KAAX,CAAiBC,IAV5B;AAWJ,YAAA,OAAO,EAAE,KAAKjC,OAXV;AAYJ,YAAA,kBAAkB,EAAEP,kBAZhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAcH,SAjBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAmBI,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAE,CAAC,MAAD,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,OAAD;AACI,QAAA,IAAI,EAAE,KAAKyB,KAAL,CAAWI,IADrB;AAEI,QAAA,aAAa,EAAE,KAAKJ,KAAL,CAAWqE,aAF9B;AAGI,QAAA,aAAa,EAAE,KAAKrE,KAAL,CAAW4D,aAH9B;AAII,QAAA,cAAc,EAAE,KAAK5D,KAAL,CAAW0E,cAJ/B;AAKI,QAAA,iBAAiB,EAAE,KAAK9E,iBAL5B;AAMI,QAAA,cAAc,EAAE,KAAKI,KAAL,CAAWkB,cAN/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAnBJ,eA6BI,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAE,CAAC,GAAD,EAAM,aAAN,EAAqB,IAArB,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD;AACI,QAAA,MAAM,EAAEtC,MADZ;AAEI,QAAA,OAAO,eACH,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CA7BJ,CADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,eA6CI,oBAAC,KAAD;AACI,MAAA,MAAM,EAAE,KAAKoB,KAAL,CAAWc,KAAX,CAAiBC,IAD7B;AAEI,MAAA,SAAS,EAAE,MAFf;AAGI,MAAA,gBAAgB,EAAE;AAAE4D,QAAAA,QAAQ,EAAE,GAAZ;AAAiBC,QAAAA,KAAK,EAAE,GAAxB;AAA6BC,QAAAA,MAAM,EAAE;AAArC,OAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAK7E,KAAL,CAAWc,KAAX,CAAiBX,OAAxB,CALJ,CA7CJ,CADJ;AAuDH;;AAxTuB;;AA2T5B,eAAeV,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport {\n    createFakeLobby,\n    setPlayerReadyStatus,\n    ListenToPlayersInLobby,\n    addPlayerToLobby,\n    removePlayerFromLobby,\n    addPlayerToNewGame,\n    getPlayersInLobby,\n    createNewGame,\n    stopListeningToLobby,\n    ListenToPlayersInGame,\n} from \"./components/firebase-database.component\";\nimport {\n    signIn,\n    initFirebaseAuth,\n    signOut\n} from \"./components/firebase-authentication.component\";\nimport Lobby from './components/Lobby.js';\nimport Home from './components/Home.js';\nimport MapView from './components/MapView.js';\nimport { Toast } from 'react-onsenui';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport PubNubReact from 'pubnub-react';\n\n\nclass App extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.pubnub = new PubNubReact({\n            publishKey: 'pub-c-c72ffc95-6f42-4bdf-8a95-04015fd20d32',\n            subscribeKey: 'sub-c-ea26bb44-92b6-11ea-8dc6-429c98eb9bb1'\n        });\n        this.pubnub.init(this);\n    }\n\n    componentWillMount() {\n        this.pubnub.subscribe({\n            channels: ['positionChannel'],\n            withPresence: true\n        });\n\n        // Listening to 'positionChannel'\n        this.pubnub.getMessage('positionChannel', (msg) => {\n            console.log('msg :>> ', msg);\n            if (this.state.huntingPlayer.playerId === msg.message.user.playerId) {\n                this.setState({\n                    targetLocation: msg.message.userLocation,\n                })\n            }\n            console.log('from pubnub update this.state :>> ', this.state);\n        });\n\n        // this.pubnub.getStatus((st) => {\n        // });\n    }\n\n\n    publishMyLocation = (loc) => {\n        console.log('this.props :>> ', this.state);\n        console.log('loc :>> ', loc);\n        this.pubnub.publish({\n            message: {\n                user: this.state.user,\n                userLocation: {\n                    lat: loc.coords.latitude,\n                    lng: loc.coords.longitude\n                }\n            },\n            channel: 'positionChannel'\n        });\n    }\n\n    componentWillUnmount() {\n        this.pubnub.unsubscribe({\n            channels: ['positionChannel']\n        });\n    }\n\n\n    state = {\n        playersInLobby: [],\n        lobbyPropsUpdate: false,\n        toast: {\n            open: false,\n            timeout: 2500,\n            message: ''\n        },\n        myLocation: {\n            lat: 0,\n            lng: 0\n        },\n        targetLocation: {\n            lat: 0,\n            lng: 0\n        },\n        user: {},\n        redirect: false,\n        path: \"/\",\n    };\n\n    authStateObserver = (user) => {\n        if (user) { // User is signed in!,\n            this.setState({\n                user: this.getUserProps(user),\n                redirect: true,\n                path: '/lobby'\n            });\n            // console.log({ user }, ' signed in');\n        } else { // User is signed out!\n            this.setState({\n                user: {},\n            });\n            // console.log({ user }, ' signed out');\n        }\n    };\n\n    componentDidMount() {\n        ListenToPlayersInLobby((data) => {\n            this.setState({\n                playersInLobby: data,\n                lobbyPropsUpdate: (!(this.state.lobbyPropsUpdate))\n            });\n        });\n\n        // // the way of ramtin\n        // ListenToPlayersInGame((data) => {\n\n        //     let userIndex = this.getUserIndex(data); //returns index in players list of current user\n        //     if (data.length >= 2) {\n        //         let chasedIndex = userIndex - 1;\n        //         let targetIndex = userIndex + 1;\n        //         if (userIndex === data.length - 1) {\n        //             targetIndex = 0;\n        //         }\n        //         if (userIndex === 0) {\n        //             chasedIndex = data.length - 1;\n        //         }\n\n        //         console.log('Player name: ',\n        //             this.state.user.displayName,\n        //             '\\nPlayer index: ', \n        //             {userIndex},\n        //             \"\\n He's chasing: \",\n        //             {targetIndex},\n        //             \"\\n He's chased by: \",\n        //             {chasedIndex});\n\n        //         this.setState({\n        //             playersInGame: data,\n        //             chasedByPlayer: data[chasedIndex],\n        //             huntingPlayer: data[targetIndex],\n        //             gamePropsUpdate: (!(this.state.gamePropsUpdate))\n        //         });\n        //     }\n        // });\n\n        // the way of Ale, He's so random\n        ListenToPlayersInGame((data) => {\n            if (data.length >= 2) {\n                let targetPlayer = data[Math.floor(Math.random() * data.length)];\n                while (targetPlayer.playerId === this.state.user.playerId) {\n                    targetPlayer = data[Math.floor(Math.random() * data.length)];\n                }\n\n                // console.log('Player: ',\n                //         this.state.user,\n                //         '\\nTarget player: ', \n                //         {targetPlayer});\n\n                this.setState({\n                    playersInGame: data,\n                    // chasedByPlayer: \n                    huntingPlayer: targetPlayer,\n                    gamePropsUpdate: (!(this.state.gamePropsUpdate))\n                });\n            }\n        });\n\n        initFirebaseAuth(this.authStateObserver);\n    }\n\n    getUserIndex = (list) => {\n        for (let i = 0; i < list.length; i++) {\n            const player = list[i];\n            if (player.id === this.state.user.id) {\n                return i;\n            }\n        }\n    }\n\n    getUserProps = (user) => {\n        // console.log('Current user: ', { user });\n        return {\n            email: user.email,\n            playerId: user.uid,\n            playerName: this.formatDisplayName(user.displayName),\n            imgURL: user.photoURL,\n        };\n    };\n\n    formatDisplayName = (name) => {\n        let maxLength = 8;\n        let firstName = this.getFirstName(name);\n        if (firstName.length > maxLength) {\n            return `${firstName.slice(0, maxLength)}...`;\n        } else {\n            return firstName;\n        }\n    };\n\n    getFirstName = (name) => {\n        return (name.split(\" \"))[0];\n    };\n\n    playerInLobby = (id) => {\n        const allPlayers = this.state.playersInLobby;\n        let player;\n        for (let i = 0; i < allPlayers.length; i++) {\n            player = allPlayers[i];\n            if (player.playerId === id) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    updateToastMessage = (message) => {\n        let toast = this.state.toast;\n        toast[\"message\"] = message;\n        this.setState({\n            toast: toast\n        })\n    };\n\n    openToast = () => {\n        let toast = this.state.toast;\n        toast[\"open\"] = true;\n        this.setState({\n            toast: toast\n        });\n        setTimeout(() => {\n            toast[\"open\"] = false;\n            this.setState({\n                toast: toast\n            });\n        }, this.state.toast.timeout)\n    };\n\n    renderRedirect = () => {\n        if (this.state.redirect) {\n            return <Redirect push to={{\n                pathname: this.state.path,\n                state: {\n\n                }\n            }} />\n        } else {\n            return <React.Fragment />\n        }\n    };\n\n    // Maybe not needed with the authStateObserver in componentDidMount\n    signOut = () => {\n        this.setState({\n            path: '/'\n        });\n        removePlayerFromLobby(this.state.user);\n        signOut();\n    };\n\n    // signIn = () => {\n    //     signIn().then(res => {\n    //         this.setState({\n    //             user: this.getUserProps(res.user),\n    //             page: 1,\n    //         })\n    //     });\n    // };\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Router>\n                    {this.renderRedirect()}\n                    <Route exact render={({ location }) => (\n                        <Switch location={location}>\n                            <Route exact path={[\"/lobby\"]} render={props => {\n                                const user = this.state.user;\n                                const userInLobby = this.playerInLobby(user.playerId)\n                                return (<Lobby\n                                    user={user}\n                                    userInLobby={userInLobby}\n                                    allPlayers={this.state.playersInLobby}\n                                    lobbyPropsUpdate={this.state.lobbyPropsUpdate}\n                                    updatePlayerReadyState={setPlayerReadyStatus}\n                                    addPlayerToLobbyFunc={addPlayerToLobby}\n                                    removePlayerFromLobbyFunc={removePlayerFromLobby}\n                                    updateToastMessage={this.updateToastMessage}\n                                    openToast={this.openToast}\n                                    debounceToast={this.state.toast.open}\n                                    signOut={this.signOut}\n                                    addPlayerToNewGame={addPlayerToNewGame}\n                                />);\n                            }} />\n                            <Route exact path={[\"/map\"]}>\n                                <MapView\n                                    user={this.state.user}\n                                    playersInGame={this.state.playersInGame}\n                                    huntingPlayer={this.state.huntingPlayer}\n                                    chasedByPlayer={this.state.chasedByPlayer}\n                                    publishMyLocation={this.publishMyLocation}\n                                    targetLocation={this.state.targetLocation}\n                                />\n                            </Route>\n                            <Route exact path={[\"/\", \"/index.html\", \"/*\"]}>\n                                <Home\n                                    signIn={signIn}\n                                    content={\n                                        <React.Fragment>\n                                        </React.Fragment>\n                                    }\n                                />\n                            </Route>\n                        </Switch>\n                    )} />\n                </Router>\n                <Toast\n                    isOpen={this.state.toast.open}\n                    animation={\"fall\"}\n                    animationOptions={{ duration: 0.2, delay: 0.4, timing: 'ease-in' }}\n                >\n                    <span>{this.state.toast.message}</span>\n                </Toast>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}