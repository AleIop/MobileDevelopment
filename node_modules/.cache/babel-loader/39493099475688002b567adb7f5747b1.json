{"ast":null,"code":"import _classCallCheck from\"/Users/Alessandro/Documents/GitHub/mobut-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Alessandro/Documents/GitHub/mobut-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/Alessandro/Documents/GitHub/mobut-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/Alessandro/Documents/GitHub/mobut-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import'./Lobby.css';import Player from'./Player.js';import{Page as OnsPage}from'react-onsenui';import LobbyToolbar from'./LobbyToolbar';import{Redirect}from'react-router-dom';var COUNT_DOWN=5;var Lobby=/*#__PURE__*/function(_Component){_inherits(Lobby,_Component);var _super=_createSuper(Lobby);function Lobby(){var _this;_classCallCheck(this,Lobby);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.countDown=COUNT_DOWN;_this.state={redirect:false};_this.displayToast=function(message){_this.props.updateToastMessage(message);if(!_this.props.debounceToast){_this.props.openToast();}};_this.toggleReady=function(){if(!_this.props.userInLobby){// console.log('this.props.userInLobby :>> ', this.props.userInLobby);\n_this.props.addPlayerToLobbyFunc(_this.props.user);_this.displayToast(\"You joined the current game session\");}else{// console.log('this.props.userInLobby :>> ', this.props.userInLobby);\n_this.props.removePlayerFromLobbyFunc(_this.props.user);_this.displayToast(\"You exited the current game session\");}};_this.renderRedirect=function(){if(_this.state.redirect){return/*#__PURE__*/React.createElement(Redirect,{push:true,to:{pathname:'/map',state:{}}});}else{return/*#__PURE__*/React.createElement(React.Fragment,null);}};return _this;}_createClass(Lobby,[{key:\"componentWillUnmount\",value:function componentWillUnmount(){}},{key:\"startCountDown\",value:function startCountDown(){var _this2=this;// console.log('start countdown');\n// this.displayToast(this.countDown + 5 + \" seconds to start of the game\");\nif(this.countDownInterval){// restart counter if intervall is already active and gets started again\nthis.countDown=COUNT_DOWN;}this.countDownInterval=setInterval(function(){if(_this2.countDown<=0){_this2.stopCountDown();_this2.props.addPlayerToNewGame(_this2.props.user,function(){_this2.setState({redirect:true});});_this2.displayToast(\"Game is starting!\");}else{_this2.displayToast(_this2.countDown+\" seconds to start of the game\");}_this2.countDown=_this2.countDown-5;},5000);}},{key:\"stopCountDown\",value:function stopCountDown(){if(this.countDownInterval){// stop the countdown if too few players\n// console.log('stop countdown');\nclearInterval(this.countDownInterval);this.countDownInterval=null;this.countDown=COUNT_DOWN;}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){//console.log('this.state.allPlayers :>> ', this.props.allPlayers);\nif(prevProps.allPlayers.length!==this.props.allPlayers.length){// number of players in the lobby changed\nif(this.props.allPlayers.length>=2&&this.props.userInLobby){console.log('2 players or more');this.startCountDown();}else{this.stopCountDown();}}}},{key:\"render\",value:function render(){var _this3=this;var allPlayers=this.props.allPlayers;return/*#__PURE__*/React.createElement(React.Fragment,null,this.renderRedirect(),/*#__PURE__*/React.createElement(OnsPage,{className:'lobby-component',renderToolbar:function renderToolbar(){return/*#__PURE__*/React.createElement(LobbyToolbar,{title:'Lobby',user:_this3.props.user,signOut:_this3.props.signOut});},style:{backgroundColor:'red',backgroundSize:0}},/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:60,marginBottom:20}}),allPlayers.map(function(player){return/*#__PURE__*/React.createElement(Player,{className:\"player-item\",key:player.playerId,id:player.playerId,style:{marginTop:20},player:player});}),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{className:\"lobby-btn \".concat(this.props.userInLobby?\"lobby-exit-btn\":\"lobby-join-btn\"),onClick:this.toggleReady}))));}}]);return Lobby;}(Component);export default Lobby;","map":{"version":3,"sources":["/Users/Alessandro/Documents/GitHub/mobut-project/src/components/Lobby.js"],"names":["React","Component","Player","Page","OnsPage","LobbyToolbar","Redirect","COUNT_DOWN","Lobby","countDown","state","redirect","displayToast","message","props","updateToastMessage","debounceToast","openToast","toggleReady","userInLobby","addPlayerToLobbyFunc","user","removePlayerFromLobbyFunc","renderRedirect","pathname","countDownInterval","setInterval","stopCountDown","addPlayerToNewGame","setState","clearInterval","prevProps","allPlayers","length","console","log","startCountDown","signOut","backgroundColor","backgroundSize","marginTop","marginBottom","map","player","playerId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Lobby.css';\nimport Player from './Player.js';\nimport { Page as OnsPage } from 'react-onsenui';\nimport LobbyToolbar from './LobbyToolbar'\nimport { Redirect } from 'react-router-dom';\n\n\n\n\nconst COUNT_DOWN = 5;\nclass Lobby extends Component {\n    countDown = COUNT_DOWN;\n    countDownInterval;\n\n    state = {\n        redirect: false,\n    }\n\n    componentWillUnmount () {\n    }\n\n    startCountDown() {\n        // console.log('start countdown');\n        // this.displayToast(this.countDown + 5 + \" seconds to start of the game\");\n        if (this.countDownInterval) { // restart counter if intervall is already active and gets started again\n            this.countDown = COUNT_DOWN;\n        }\n        this.countDownInterval = setInterval(() => {\n            if (this.countDown <= 0) {\n                this.stopCountDown();\n                this.props.addPlayerToNewGame(this.props.user, ()=>{\n                    this.setState({\n                        redirect: true,\n                    })\n                });\n                this.displayToast(\"Game is starting!\");\n            } else {\n                this.displayToast(this.countDown + \" seconds to start of the game\");\n            }\n            this.countDown = this.countDown - 5;\n        }, 5000);\n    }\n\n    stopCountDown() {\n        if (this.countDownInterval) {\n            // stop the countdown if too few players\n            // console.log('stop countdown');\n            clearInterval(this.countDownInterval);\n            this.countDownInterval = null;\n            this.countDown = COUNT_DOWN;\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        //console.log('this.state.allPlayers :>> ', this.props.allPlayers);\n\n\n        if (prevProps.allPlayers.length !== this.props.allPlayers.length) { // number of players in the lobby changed\n            if (this.props.allPlayers.length >= 2 && this.props.userInLobby) {\n                console.log('2 players or more');\n                this.startCountDown();\n            } else {\n                this.stopCountDown();\n            }\n        }\n    }\n\n    displayToast = (message) => {\n        this.props.updateToastMessage(message);\n        if (!(this.props.debounceToast)) {\n            this.props.openToast();\n        }\n    };\n\n    toggleReady = () => {\n\n        if (!this.props.userInLobby) {\n            // console.log('this.props.userInLobby :>> ', this.props.userInLobby);\n            this.props.addPlayerToLobbyFunc(this.props.user);\n            this.displayToast(\"You joined the current game session\");\n        } else {\n            // console.log('this.props.userInLobby :>> ', this.props.userInLobby);\n            this.props.removePlayerFromLobbyFunc(this.props.user);\n            this.displayToast(\"You exited the current game session\");\n        }\n    };\n\n    renderRedirect = () => {\n        if (this.state.redirect) {\n            return <Redirect push to={{\n                pathname: '/map',\n                state: {\n\n                }\n            }} />\n        } else {\n            return <React.Fragment />\n        }\n    };\n\n    render() {\n\n        const allPlayers = this.props.allPlayers;\n        return (\n            <React.Fragment>\n                {this.renderRedirect()}\n                <OnsPage\n                    className={'lobby-component'}\n                    renderToolbar={() => {\n                        return (\n                            <LobbyToolbar\n                                title={'Lobby'}\n                                user={this.props.user}\n                                signOut={this.props.signOut}\n                            />)\n                    }}\n                    style={{\n                        backgroundColor: 'red',\n                        backgroundSize: 0,\n\n                    }}\n                >\n                    <div\n                        style={{\n                            marginTop: 60,\n                            marginBottom: 20\n                        }}>\n\n                    </div>\n                    {allPlayers.map((player) => {\n\n                        return (\n                            <Player\n                                className=\"player-item\"\n                                key={player.playerId}\n                                id={player.playerId}\n                                style={{\n                                    marginTop: 20,\n\n                                }}\n                                player={player} />)\n                    })}\n                    <div>\n                        <button\n                            className={`lobby-btn ${(this.props.userInLobby) ? `lobby-exit-btn` : `lobby-join-btn`}`}\n                            onClick={this.toggleReady}\n                        />\n                    </div>\n                </OnsPage>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Lobby;\n\n\n\n"]},"metadata":{},"sourceType":"module"}