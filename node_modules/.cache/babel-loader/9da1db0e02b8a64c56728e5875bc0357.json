{"ast":null,"code":"var _jsxFileName = \"/Users/Alessandro/Documents/GitHub/mobut-project/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { createFakeLobby, setPlayerReadyStatus, ListenToPlayersInLobby, getPlayersInLobby, createNewGame, addPlayerToLobby, stopListeningToLobby } from \"./components/firebase-database.component\";\nimport { signIn, initFirebaseAuth, signOut, getUserProps } from \"./components/firebase-authentication.component\";\nimport Lobby from './components/Lobby.js';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      playersInLobby: [],\n      lobbyPropsUpdate: false,\n      appRender: false,\n      booleanThatRamtinWants: false\n    };\n\n    this.updatePlayerReadyState = (id, readyState) => {\n      this.setState({\n        allPlayers: this.state.allPlayers.map(player => {\n          if (player.id === id) {\n            player.ready = readyState;\n          }\n\n          return player;\n        })\n      });\n    };\n\n    this.getPlayerById = id => {\n      const allPlayers = this.state.playersInLobby;\n      let player;\n\n      for (let i = 0; i < allPlayers.length; i++) {\n        player = allPlayers[i];\n\n        if (player.playerId === id) {\n          return player;\n        }\n      }\n\n      return {\n        id: id,\n        name: '',\n        ready: false,\n        imgURL: ''\n      };\n    };\n  }\n\n  componentDidMount() {\n    createFakeLobby();\n    ListenToPlayersInLobby(data => {\n      this.setState({\n        playersInLobby: data,\n        lobbyPropsUpdate: !this.state.lobbyPropsUpdate\n      });\n    }); //if (!localStorage.getItem('you')) localStorage.setItem('you', uuidv4());\n    //this.setState({youID: localStorage.getItem('you')});\n    //console.log('in mount: ', this.state);\n\n    initFirebaseAuth(this.authStateObserver);\n    signIn().then(() => {\n      this.setState({\n        appRender: !this.state.appRender,\n        booleanThatRamtinWants: true\n      });\n      console.log(getUserProps());\n    });\n  } // Triggers when the auth state change for instance when the user signs-in or signs-out.\n\n\n  authStateObserver(user) {\n    if (user) {\n      // User is signed in!\n      console.log({\n        user\n      }, ' signed in');\n      console.log('In observer', getUserProps());\n    } else {\n      // User is signed out!\n      console.log({\n        user\n      }, ' signed out');\n    }\n  }\n\n  render() {\n    //console.log('in render: ', this.state); \n    let you = getUserProps();\n    console.log({\n      you\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Lobby, {\n      you: this.getPlayerById('Bengt'),\n      allPlayers: this.state.playersInLobby,\n      lobbyPropsUpdate: this.state.lobbyPropsUpdate,\n      updatePlayerReadyState: setPlayerReadyStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Alessandro/Documents/GitHub/mobut-project/src/App.js"],"names":["React","Component","createFakeLobby","setPlayerReadyStatus","ListenToPlayersInLobby","getPlayersInLobby","createNewGame","addPlayerToLobby","stopListeningToLobby","signIn","initFirebaseAuth","signOut","getUserProps","Lobby","v4","uuidv4","App","state","playersInLobby","lobbyPropsUpdate","appRender","booleanThatRamtinWants","updatePlayerReadyState","id","readyState","setState","allPlayers","map","player","ready","getPlayerById","i","length","playerId","name","imgURL","componentDidMount","data","authStateObserver","then","console","log","user","render","you"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport {\n  createFakeLobby,\n  setPlayerReadyStatus,\n  ListenToPlayersInLobby,\n  getPlayersInLobby,\n  createNewGame,\n  addPlayerToLobby,\n  stopListeningToLobby\n} from \"./components/firebase-database.component\";\nimport {\n  signIn,\n  initFirebaseAuth,\n  signOut,\n  getUserProps\n} from \"./components/firebase-authentication.component\";\nimport Lobby from './components/Lobby.js';\nimport { v4 as uuidv4 } from 'uuid';\n\n\nclass App extends Component {\n\n  state = {\n    playersInLobby: [],\n    lobbyPropsUpdate: false,\n    appRender: false,\n    booleanThatRamtinWants: false,\n  };\n\n  componentDidMount() {\n    createFakeLobby();\n    ListenToPlayersInLobby((data) => {\n        this.setState({\n            playersInLobby: data,\n            lobbyPropsUpdate: (!(this.state.lobbyPropsUpdate))\n        });\n    });\n\n    //if (!localStorage.getItem('you')) localStorage.setItem('you', uuidv4());\n    //this.setState({youID: localStorage.getItem('you')});\n    //console.log('in mount: ', this.state);\n\n    initFirebaseAuth(this.authStateObserver);\n    signIn().then(() => {\n      this.setState({appRender: !this.state.appRender, booleanThatRamtinWants: true});\n      console.log(getUserProps());\n    });\n  }\n\n  // Triggers when the auth state change for instance when the user signs-in or signs-out.\n  authStateObserver(user) {\n    if (user) { // User is signed in!\n      console.log({user}, ' signed in');\n      console.log('In observer', getUserProps());\n    } else { // User is signed out!\n      console.log({user}, ' signed out');\n    }\n  }\n\n  updatePlayerReadyState = (id, readyState) => {\n    this.setState({\n      allPlayers: (\n        this.state.allPlayers.map((player) => {\n          if (player.id === id) {\n            player.ready = readyState;\n          }\n          return player;\n        })\n      )\n    });\n  };\n\n  getPlayerById = (id) => {\n    const allPlayers = this.state.playersInLobby;\n    let player;\n    for (let i = 0; i < allPlayers.length; i++) {\n      player = allPlayers[i];\n      if (player.playerId === id) {\n        return player;\n      }\n    }\n    return {\n      id: id,\n      name: '',\n      ready: false,\n      imgURL: ''\n    }\n  };\n\n\n  render() {\n    //console.log('in render: ', this.state); \n\n    let you = getUserProps();\n    console.log({you});\n\n    return (\n        <div className=\"App\">\n          <Lobby\n            you={this.getPlayerById('Bengt')}\n            allPlayers={this.state.playersInLobby}\n            lobbyPropsUpdate={this.state.lobbyPropsUpdate}\n            updatePlayerReadyState={setPlayerReadyStatus}\n          />\n        </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}