{"ast":null,"code":"var _jsxFileName = \"/Users/Alessandro/Documents/GitHub/mobut-project/src/components/MapView.js\";\nimport React from 'react';\nimport { Map, Marker, InfoWindow, GoogleApiWrapper } from 'google-maps-react';\nimport PlayerMarker from './PlayerMarker.js';\nimport './MapView.css';\nimport PubNubReact from 'pubnub-react';\nimport { Redirect } from 'react-router-dom';\nexport class MapView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      myLocation: {\n        lat: 0,\n        lng: 0\n      },\n      targetLocation: {\n        lat: 0,\n        lng: 0\n      },\n      redirect: false\n    };\n    this.target = null;\n\n    this.publishMyLocation = loc => {\n      //console.log('this.props :>> ', this.state);\n      //console.log('loc :>> ', loc);\n      this.pubnub.publish({\n        message: {\n          user: this.props.user,\n          userLocation: loc\n        },\n        channel: 'positionChannel'\n      });\n    };\n\n    this.displayToast = message => {\n      this.props.updateToastMessage(message);\n\n      if (!this.props.debounceToast) {\n        this.props.openToast();\n      }\n    };\n\n    this.pubnub = new PubNubReact({\n      publishKey: 'pub-c-c72ffc95-6f42-4bdf-8a95-04015fd20d32',\n      subscribeKey: 'sub-c-ea26bb44-92b6-11ea-8dc6-429c98eb9bb1'\n    });\n    this.pubnub.init(this);\n  }\n\n  componentDidMount() {\n    //ALE'S BRILLIANT IDEA\n    if (this.state.targetLocation.lat === 0 && this.state.targetLocation.lng === 0) this.props.setModal(true);else this.props.setModal(false);\n\n    window.onunload = () => {\n      this.props.removePlayerFromGame(this.state.user); //TODO redirect to another component\n      //enable user to get back in the game\n    };\n\n    window.onpopstate = () => {\n      this.props.removePlayerFromGame(this.state.user);\n    };\n\n    this.pubnub.subscribe({\n      channels: ['positionChannel'],\n      withPresence: true\n    }); // Listening to 'positionChannel'\n\n    this.pubnub.getMessage('positionChannel', msg => {\n      console.log('msg :>> ', msg, '\\nstate :>> ', this.state, '\\nProps: ', this.props);\n\n      if (this.props.huntingPlayer.playerId === msg.message.user.playerId) {\n        this.setState({\n          targetLocation: msg.message.userLocation\n        });\n      }\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.targetLocation.lat !== prevState.targetLocation.lat || this.state.targetLocation.lng !== prevState.targetLocation.lng) {\n      if (this.state.targetLocation.lat === 0 && this.state.targetLocation.lng === 0) this.props.setModal(true);else this.props.setModal(false);\n    }\n\n    if (this.props.playerInGame !== prevProps.playerInGame) {\n      if (!this.props.playerInGame) {\n        this.displayToast(\"You lost!!!\");\n        this.props.endGame();\n      }\n    }\n\n    if (prevProps.huntingPlayer !== this.props.huntingPlayer) console.log('Current props: ', this.props);\n  }\n\n  componentWillUnmount() {\n    this.props.removePlayerFromGame(this.props.user);\n  }\n\n  render() {\n    if (!this.props.loaded) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, \"Loading...\");\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    }, this.props.renderRedirect(), /*#__PURE__*/React.createElement(Map, {\n      google: this.props.google,\n      zoom: 14,\n      initialCenter: {\n        lat: 59.329323,\n        lng: 18.068581\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Marker, Object.assign({}, this.props, {\n      ref: element => {\n        if (element) this.target = element.marker;\n      },\n      name: 'Target',\n      position: this.state.targetLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(PlayerMarker, {\n      targetLocation: this.state.targetLocation,\n      publishMyLocation: this.publishMyLocation,\n      endGame: this.endGame,\n      displayToast: this.displayToast,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyD-HO6pALPiY9nrniME6UmHy3P3YUCv2Eg'\n})(MapView);","map":{"version":3,"sources":["/Users/Alessandro/Documents/GitHub/mobut-project/src/components/MapView.js"],"names":["React","Map","Marker","InfoWindow","GoogleApiWrapper","PlayerMarker","PubNubReact","Redirect","MapView","Component","constructor","props","state","myLocation","lat","lng","targetLocation","redirect","target","publishMyLocation","loc","pubnub","publish","message","user","userLocation","channel","displayToast","updateToastMessage","debounceToast","openToast","publishKey","subscribeKey","init","componentDidMount","setModal","window","onunload","removePlayerFromGame","onpopstate","subscribe","channels","withPresence","getMessage","msg","console","log","huntingPlayer","playerId","setState","componentDidUpdate","prevProps","prevState","playerInGame","endGame","componentWillUnmount","render","loaded","renderRedirect","google","element","marker","apiKey"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Map, Marker, InfoWindow, GoogleApiWrapper } from 'google-maps-react';\nimport PlayerMarker from './PlayerMarker.js';\nimport './MapView.css';\nimport PubNubReact from 'pubnub-react';\nimport { Redirect } from 'react-router-dom';\n\n\nexport class MapView extends React.Component {\n\n  state = {\n    myLocation: {\n      lat: 0,\n      lng: 0\n    },\n    targetLocation: {\n      lat: 0,\n      lng: 0\n    },\n    redirect: false,\n  }\n  target = null;\n\n  constructor(props) {\n    super(props);\n    this.pubnub = new PubNubReact({\n      publishKey: 'pub-c-c72ffc95-6f42-4bdf-8a95-04015fd20d32',\n      subscribeKey: 'sub-c-ea26bb44-92b6-11ea-8dc6-429c98eb9bb1'\n    });\n    this.pubnub.init(this);\n  }\n\n  componentDidMount(){\n    //ALE'S BRILLIANT IDEA\n    if (this.state.targetLocation.lat === 0 && this.state.targetLocation.lng === 0)\n        this.props.setModal(true);\n      else\n        this.props.setModal(false);\n\n    window.onunload = () => {\n      this.props.removePlayerFromGame(this.state.user);\n      //TODO redirect to another component\n      //enable user to get back in the game\n    };\n    window.onpopstate = () => {\n        this.props.removePlayerFromGame(this.state.user);\n    };\n\n    this.pubnub.subscribe({\n        channels: ['positionChannel'],\n        withPresence: true\n    });\n\n    // Listening to 'positionChannel'\n    this.pubnub.getMessage('positionChannel', (msg) => {\n        console.log('msg :>> ',\n            msg,\n            '\\nstate :>> ',\n            this.state,\n            '\\nProps: ',\n            this.props);\n        if (this.props.huntingPlayer.playerId === msg.message.user.playerId) {\n            this.setState({\n                targetLocation: msg.message.userLocation,\n            });\n        }\n    });\n  }\n\n  publishMyLocation = (loc) => {\n    //console.log('this.props :>> ', this.state);\n    //console.log('loc :>> ', loc);\n    this.pubnub.publish({\n      message: {\n        user: this.props.user,\n        userLocation: loc\n      },\n      channel: 'positionChannel'\n    });\n  }\n\n  displayToast = (message) => {\n    this.props.updateToastMessage(message);\n    if (!(this.props.debounceToast)) {\n      this.props.openToast();\n    }\n  };\n\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.targetLocation.lat !== prevState.targetLocation.lat || this.state.targetLocation.lng !== prevState.targetLocation.lng) {\n      if (this.state.targetLocation.lat === 0 && this.state.targetLocation.lng === 0)\n        this.props.setModal(true);\n      else\n        this.props.setModal(false);\n    }\n\n    if(this.props.playerInGame !== prevProps.playerInGame){\n        if (!this.props.playerInGame) {\n            this.displayToast(\"You lost!!!\");\n            this.props.endGame();\n        }\n    }\n    if (prevProps.huntingPlayer !== this.props.huntingPlayer) console.log('Current props: ', this.props);\n  }\n\n  componentWillUnmount() {\n    this.props.removePlayerFromGame(this.props.user);\n  }\n\n  render() {\n    if (!this.props.loaded)\n      return (\n        <div>Loading...</div>\n      );\n\n    return (\n      <React.Fragment>\n        {this.props.renderRedirect()}\n        <Map\n          google={this.props.google}\n          zoom={14}\n          initialCenter={{\n            lat: 59.329323,\n            lng: 18.068581\n          }}\n        >\n          <Marker {...this.props}\n            ref={element => {\n              if (element)\n                this.target = element.marker;\n            }}\n            name={'Target'}\n            position={this.state.targetLocation}\n          />\n          <PlayerMarker\n            targetLocation={this.state.targetLocation}\n            publishMyLocation={this.publishMyLocation}\n            endGame={this.endGame}\n            displayToast={this.displayToast}\n          />\n        </Map>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: ('AIzaSyD-HO6pALPiY9nrniME6UmHy3P3YUCv2Eg')\n})(MapView)\n"]},"metadata":{},"sourceType":"module"}