{"ast":null,"code":"var _jsxFileName = \"/Users/Alessandro/Documents/GitHub/mobut-project/src/components/PlayerMarker.js\";\nimport React from 'react';\nimport { Marker } from 'google-maps-react';\nimport getDistance from 'geolib/es/getDistance';\nimport './MapView.css';\nexport class PlayerMarker extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.props = {\n      targetLocation: {}\n    };\n    this.state = {\n      location: {}\n    };\n  }\n\n  updateLocation(loc) {\n    this.setState({\n      location: {\n        lat: loc.coords.latitude,\n        lng: loc.coords.longitude\n      }\n    });\n    this.props.map.panTo({\n      lat: loc.coords.latitude,\n      lng: loc.coords.longitude\n    }); //this.onLocationUpdate(loc);\n  }\n\n  onErrorGettingLocation(err) {\n    console.log('Unable to get location', err);\n  }\n\n  project(loc) {\n    let google = this.props.google;\n    let sinY = Math.sin(loc.lat * Math.PI / 180);\n    sinY = Math.min(Math.max(sinY, -0.9999), 0.9999);\n    return new google.maps.Point(256 * (0.5 + loc.lng / 360), 256 * (0.5 - Math.log((1 + sinY) / (1 - sinY)) / (4 * Math.PI)));\n  }\n\n  get directionToTarget() {\n    let pos = this.project(this.state.location);\n    let targetPos = this.project(this.props.targetLocation);\n    return Math.atan2(targetPos.y - pos.y, targetPos.x - pos.x) * 180 / Math.PI;\n  }\n\n  get distanceToTarget() {\n    return getDistance({\n      latitude: '' + this.state.location.lat,\n      longitude: '' + this.state.location.lng\n    }, {\n      latitude: '' + this.props.targetLocation.lat,\n      longitude: '' + this.props.targetLocation.lng\n    });\n  }\n\n  componentDidMount() {\n    let gl = navigator.geolocation;\n    const glOptions = {\n      enableHighAccuracy: true,\n      timeout: 15000,\n      maximumAge: 0\n    };\n    gl.watchPosition(this.updateLocation.bind(this), this.onErrorGettingLocation.bind(this), glOptions);\n  }\n\n  render() {\n    let google = this.props.google;\n    console.log(this.distanceToTarget);\n    return /*#__PURE__*/React.createElement(Marker, Object.assign({}, this.props, {\n      name: 'Player',\n      position: this.state.location,\n      icon: {\n        path: 'M42,21.002L16.043,0v11.55H0v18.9h16.043V42L42,21.002L42,21.002z',\n        anchor: new google.maps.Point(21, 21),\n        scale: 2,\n        strokeWeight: 6,\n        fillColor: '#fc0',\n        fillOpacity: 1,\n        rotation: this.directionToTarget\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\nexport default PlayerMarker;","map":{"version":3,"sources":["/Users/Alessandro/Documents/GitHub/mobut-project/src/components/PlayerMarker.js"],"names":["React","Marker","getDistance","PlayerMarker","Component","props","targetLocation","state","location","updateLocation","loc","setState","lat","coords","latitude","lng","longitude","map","panTo","onErrorGettingLocation","err","console","log","project","google","sinY","Math","sin","PI","min","max","maps","Point","directionToTarget","pos","targetPos","atan2","y","x","distanceToTarget","componentDidMount","gl","navigator","geolocation","glOptions","enableHighAccuracy","timeout","maximumAge","watchPosition","bind","render","path","anchor","scale","strokeWeight","fillColor","fillOpacity","rotation"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Marker} from 'google-maps-react';\nimport getDistance from 'geolib/es/getDistance';\nimport './MapView.css';\n\nexport class PlayerMarker extends React.Component {\n  props = {\n    targetLocation: {}\n  };\n\n  state = {\n    location: {}\n  };\n\n  updateLocation(loc) {\n    this.setState({\n      location: {\n        lat: loc.coords.latitude,\n        lng: loc.coords.longitude\n      }\n    });\n    this.props.map.panTo({\n      lat: loc.coords.latitude,\n      lng: loc.coords.longitude\n    });\n    //this.onLocationUpdate(loc);\n  }\n\n  onErrorGettingLocation(err) {\n    console.log('Unable to get location', err);\n  }\n\n  project(loc) {\n    let google = this.props.google;\n\n    let sinY = Math.sin(loc.lat * Math.PI / 180);\n    sinY = Math.min(Math.max(sinY, -0.9999), 0.9999);\n\n    return new google.maps.Point(\n      256 * (0.5 + loc.lng / 360),\n      256 * (0.5 - Math.log((1 + sinY) / (1 - sinY)) / (4 * Math.PI))\n    );\n  }\n\n  get directionToTarget() {\n    let pos = this.project(this.state.location);\n    let targetPos = this.project(this.props.targetLocation);\n    return Math.atan2(targetPos.y - pos.y, targetPos.x - pos.x) * 180 / Math.PI;\n  }\n\n  get distanceToTarget() {\n    return getDistance({\n      latitude: '' + this.state.location.lat,\n      longitude: '' + this.state.location.lng\n    }, {\n      latitude: '' + this.props.targetLocation.lat,\n      longitude: '' + this.props.targetLocation.lng\n    });\n  }\n\n  componentDidMount() {\n    let gl = navigator.geolocation;\n    const glOptions = {\n      enableHighAccuracy: true,\n      timeout: 15000,\n      maximumAge: 0\n    };\n    gl.watchPosition(\n      this.updateLocation.bind(this),\n      this.onErrorGettingLocation.bind(this),\n      glOptions\n    );\n  }\n\n  render() {\n    let google = this.props.google;\n    console.log(this.distanceToTarget);\n    return (\n      <Marker {...this.props}\n        name={'Player'}\n        position={this.state.location}\n        icon={{\n          path: 'M42,21.002L16.043,0v11.55H0v18.9h16.043V42L42,21.002L42,21.002z',\n          anchor: new google.maps.Point(21,21),\n          scale: 2,\n          strokeWeight: 6,\n          fillColor: '#fc0',\n          fillOpacity: 1,\n          rotation: this.directionToTarget\n        }}\n      />\n    );\n  }\n}\n\nexport default PlayerMarker;\n"]},"metadata":{},"sourceType":"module"}