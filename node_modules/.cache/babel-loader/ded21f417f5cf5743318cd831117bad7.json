{"ast":null,"code":"var _jsxFileName = \"/Users/Alessandro/Documents/GitHub/mobut-project/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { createFakeLobby, setPlayerReadyStatus, ListenToPlayersInLobby, addPlayerToLobby, removePlayerFromLobby, addPlayerToNewGame, getPlayersInLobby, createNewGame, stopListeningToLobby, ListenToPlayersInGame } from \"./components/firebase-database.component\";\nimport { signIn, initFirebaseAuth, signOut } from \"./components/firebase-authentication.component\";\nimport Lobby from './components/Lobby.js';\nimport Home from './components/Home.js';\nimport MapView from './components/MapView.js';\nimport { Toast } from 'react-onsenui';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      playersInLobby: [],\n      lobbyPropsUpdate: false,\n      toast: {\n        open: false,\n        timeout: 2500,\n        message: ''\n      },\n      user: {},\n      redirect: false,\n      path: \"/\"\n    };\n\n    this.authStateObserver = user => {\n      if (user) {\n        // User is signed in!,\n        this.setState({\n          user: this.getUserProps(user),\n          redirect: true,\n          path: '/lobby'\n        });\n        console.log({\n          user\n        }, ' signed in');\n      } else {\n        // User is signed out!\n        this.setState({\n          user: {}\n        });\n        console.log({\n          user\n        }, ' signed out');\n      }\n    };\n\n    this.getUserIndex = list => {\n      for (let i = 0; i < list.length; i++) {\n        const player = list[i];\n\n        if (player.id === this.state.user.id) {\n          return i;\n        }\n      }\n    };\n\n    this.getUserProps = user => {\n      console.log('Current user: ', {\n        user\n      });\n      return {\n        email: user.email,\n        playerId: user.uid,\n        playerName: this.formatDisplayName(user.displayName),\n        imgURL: user.photoURL\n      };\n    };\n\n    this.formatDisplayName = name => {\n      let maxLength = 8;\n      let firstName = this.getFirstName(name);\n\n      if (firstName.length > maxLength) {\n        return `${firstName.slice(0, maxLength)}...`;\n      } else {\n        return firstName;\n      }\n    };\n\n    this.getFirstName = name => {\n      return name.split(\" \")[0];\n    };\n\n    this.playerInLobby = id => {\n      const allPlayers = this.state.playersInLobby;\n      let player;\n\n      for (let i = 0; i < allPlayers.length; i++) {\n        player = allPlayers[i];\n\n        if (player.playerId === id) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    this.updateToastMessage = message => {\n      let toast = this.state.toast;\n      toast[\"message\"] = message;\n      this.setState({\n        toast: toast\n      });\n    };\n\n    this.openToast = () => {\n      let toast = this.state.toast;\n      toast[\"open\"] = true;\n      this.setState({\n        toast: toast\n      });\n      setTimeout(() => {\n        toast[\"open\"] = false;\n        this.setState({\n          toast: toast\n        });\n      }, this.state.toast.timeout);\n    };\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          push: true,\n          to: {\n            pathname: this.state.path,\n            state: {}\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 20\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 20\n          }\n        });\n      }\n    };\n\n    this.signOut = () => {\n      this.setState({\n        path: '/'\n      });\n      removePlayerFromLobby(this.state.user);\n      signOut();\n    };\n  }\n\n  componentDidMount() {\n    ListenToPlayersInLobby(data => {\n      this.setState({\n        playersInLobby: data,\n        lobbyPropsUpdate: !this.state.lobbyPropsUpdate\n      });\n    }); // the way of ramtin\n\n    ListenToPlayersInGame(data => {\n      console.log('Data listened: ', {\n        data\n      });\n      let userIndex = this.getUserIndex(data);\n\n      if (data.length >= 2) {\n        let chasedIndex = userIndex - 1;\n        let targetIndex = userIndex + 1;\n\n        if (userIndex === data.length - 1) {\n          targetIndex = 0;\n        }\n\n        if (userIndex === 0) {\n          chasedIndex = data.length - 1;\n        }\n\n        this.setState({\n          playersInGame: data,\n          chasedByPlayer: data[chasedIndex],\n          huntingPlayer: data[targetIndex],\n          gamePropsUpdate: !this.state.gamePropsUpdate\n        });\n      }\n    }); // // the way of Ale, He's so random\n    // ListenToPlayersInGame((data) => {\n    //     let targetPlayer = data[Math.floor(Math.random() * data.length)];\n    //     while (targetPlayer.playerId === this.state.user.playerId) {\n    //         targetPlayer = data[Math.floor(Math.random() * data.length)];\n    //     }\n    //     this.setState({\n    //         playersInGame: data,\n    //         // chasedByPlayer: \n    //         huntingPlayer: targetPlayer,\n    //         gamePropsUpdate: (!(this.state.gamePropsUpdate))\n    //     });\n    // });\n\n    initFirebaseAuth(this.authStateObserver);\n  }\n\n  // signIn = () => {\n  //     signIn().then(res => {\n  //         this.setState({\n  //             user: this.getUserProps(res.user),\n  //             page: 1,\n  //         })\n  //     });\n  // };\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }\n    }, this.renderRedirect(), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      render: ({\n        location\n      }) => /*#__PURE__*/React.createElement(Switch, {\n        location: location,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: [\"/lobby\"],\n        render: props => {\n          const user = this.state.user;\n          const userInLobby = this.playerInLobby(user.playerId);\n          return /*#__PURE__*/React.createElement(Lobby, {\n            user: user,\n            userInLobby: userInLobby,\n            allPlayers: this.state.playersInLobby,\n            lobbyPropsUpdate: this.state.lobbyPropsUpdate,\n            updatePlayerReadyState: setPlayerReadyStatus,\n            addPlayerToLobbyFunc: addPlayerToLobby,\n            removePlayerFromLobbyFunc: removePlayerFromLobby,\n            updateToastMessage: this.updateToastMessage,\n            openToast: this.openToast,\n            debounceToast: this.state.toast.open,\n            signOut: this.signOut,\n            addPlayerToNewGame: addPlayerToNewGame,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 41\n            }\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: [\"/map\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(MapView, {\n        user: this.state.user,\n        playersInGame: this.state.playersInGame,\n        huntingPlayer: this.state.huntingPlayer,\n        chasedByPlayer: this.state.chasedByPlayer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: [\"/\", \"/index.html\", \"/*\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Home, {\n        signIn: signIn,\n        content: /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 41\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 33\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Toast, {\n      isOpen: this.state.toast.open,\n      animation: \"fall\",\n      animationOptions: {\n        duration: 0.2,\n        delay: 0.4,\n        timing: 'ease-in'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }\n    }, this.state.toast.message)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Alessandro/Documents/GitHub/mobut-project/src/App.js"],"names":["React","Component","createFakeLobby","setPlayerReadyStatus","ListenToPlayersInLobby","addPlayerToLobby","removePlayerFromLobby","addPlayerToNewGame","getPlayersInLobby","createNewGame","stopListeningToLobby","ListenToPlayersInGame","signIn","initFirebaseAuth","signOut","Lobby","Home","MapView","Toast","BrowserRouter","Router","Route","Switch","Redirect","App","state","playersInLobby","lobbyPropsUpdate","toast","open","timeout","message","user","redirect","path","authStateObserver","setState","getUserProps","console","log","getUserIndex","list","i","length","player","id","email","playerId","uid","playerName","formatDisplayName","displayName","imgURL","photoURL","name","maxLength","firstName","getFirstName","slice","split","playerInLobby","allPlayers","updateToastMessage","openToast","setTimeout","renderRedirect","pathname","componentDidMount","data","userIndex","chasedIndex","targetIndex","playersInGame","chasedByPlayer","huntingPlayer","gamePropsUpdate","render","location","props","userInLobby","duration","delay","timing"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport {\n    createFakeLobby,\n    setPlayerReadyStatus,\n    ListenToPlayersInLobby,\n    addPlayerToLobby,\n    removePlayerFromLobby,\n    addPlayerToNewGame,\n    getPlayersInLobby,\n    createNewGame,\n    stopListeningToLobby,\n    ListenToPlayersInGame,\n} from \"./components/firebase-database.component\";\nimport {\n    signIn,\n    initFirebaseAuth,\n    signOut\n} from \"./components/firebase-authentication.component\";\nimport Lobby from './components/Lobby.js';\nimport Home from './components/Home.js';\nimport MapView from './components/MapView.js';\nimport { Toast } from 'react-onsenui';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\n\n\nclass App extends Component {\n\n    state = {\n        playersInLobby: [],\n        lobbyPropsUpdate: false,\n        toast: {\n            open: false,\n            timeout: 2500,\n            message: ''\n        },\n        user: {},\n        redirect: false,\n        path: \"/\",\n    };\n\n    authStateObserver = (user) => {\n        if (user) { // User is signed in!,\n            this.setState({\n                user: this.getUserProps(user),\n                redirect: true,\n                path: '/lobby'\n            });\n            console.log({ user }, ' signed in');\n        } else { // User is signed out!\n            this.setState({\n                user: {},\n            });\n            console.log({ user }, ' signed out');\n        }\n    };\n\n    componentDidMount() {\n        ListenToPlayersInLobby((data) => {\n            this.setState({\n                playersInLobby: data,\n                lobbyPropsUpdate: (!(this.state.lobbyPropsUpdate))\n            });\n        });\n\n        // the way of ramtin\n        ListenToPlayersInGame((data) => {\n            console.log('Data listened: ', {data});\n\n            let userIndex = this.getUserIndex(data);\n            if (data.length >= 2) {\n                let chasedIndex = userIndex - 1;\n                let targetIndex = userIndex + 1;\n                if (userIndex === data.length - 1) {\n                    targetIndex = 0;\n                }\n                if (userIndex === 0) {\n                    chasedIndex = data.length - 1;\n                }\n                this.setState({\n                    playersInGame: data,\n                    chasedByPlayer: data[chasedIndex],\n                    huntingPlayer: data[targetIndex],\n                    gamePropsUpdate: (!(this.state.gamePropsUpdate))\n                });\n            }\n        });\n\n        // // the way of Ale, He's so random\n        // ListenToPlayersInGame((data) => {\n        //     let targetPlayer = data[Math.floor(Math.random() * data.length)];\n        //     while (targetPlayer.playerId === this.state.user.playerId) {\n        //         targetPlayer = data[Math.floor(Math.random() * data.length)];\n        //     }\n        //     this.setState({\n        //         playersInGame: data,\n        //         // chasedByPlayer: \n        //         huntingPlayer: targetPlayer,\n        //         gamePropsUpdate: (!(this.state.gamePropsUpdate))\n        //     });\n        // });\n\n        initFirebaseAuth(this.authStateObserver);\n    }\n\n    getUserIndex = (list) => {\n        for (let i = 0; i < list.length; i++) {\n            const player = list[i];\n            if (player.id === this.state.user.id) {\n                return i;\n            }\n        }\n    }\n\n    getUserProps = (user) => {\n        console.log('Current user: ', { user });\n        return {\n            email: user.email,\n            playerId: user.uid,\n            playerName: this.formatDisplayName(user.displayName),\n            imgURL: user.photoURL,\n        };\n    };\n\n    formatDisplayName = (name) => {\n        let maxLength = 8;\n        let firstName = this.getFirstName(name);\n        if (firstName.length > maxLength) {\n            return `${firstName.slice(0, maxLength)}...`;\n        } else {\n            return firstName;\n        }\n    };\n\n    getFirstName = (name) => {\n        return (name.split(\" \"))[0];\n    };\n\n    playerInLobby = (id) => {\n        const allPlayers = this.state.playersInLobby;\n        let player;\n        for (let i = 0; i < allPlayers.length; i++) {\n            player = allPlayers[i];\n            if (player.playerId === id) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    updateToastMessage = (message) => {\n        let toast = this.state.toast;\n        toast[\"message\"] = message;\n        this.setState({\n            toast: toast\n        })\n    };\n\n    openToast = () => {\n        let toast = this.state.toast;\n        toast[\"open\"] = true;\n        this.setState({\n            toast: toast\n        });\n        setTimeout(() => {\n            toast[\"open\"] = false;\n            this.setState({\n                toast: toast\n            });\n        }, this.state.toast.timeout)\n    };\n\n    renderRedirect = () => {\n        if (this.state.redirect) {\n            return <Redirect push to={{\n                pathname: this.state.path,\n                state: {\n\n                }\n            }} />\n        } else {\n            return <React.Fragment />\n        }\n    };\n\n    // Maybe not needed with the authStateObserver in componentDidMount\n    signOut = () => {\n        this.setState({\n            path: '/'\n        });\n        removePlayerFromLobby(this.state.user);\n        signOut();\n    };\n\n    // signIn = () => {\n    //     signIn().then(res => {\n    //         this.setState({\n    //             user: this.getUserProps(res.user),\n    //             page: 1,\n    //         })\n    //     });\n    // };\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Router>\n                    {this.renderRedirect()}\n                    <Route exact render={({ location }) => (\n                        <Switch location={location}>\n                            <Route exact path={[\"/lobby\"]} render={props => {\n                                const user = this.state.user;\n                                const userInLobby = this.playerInLobby(user.playerId)\n                                return (<Lobby\n                                    user={user}\n                                    userInLobby={userInLobby}\n                                    allPlayers={this.state.playersInLobby}\n                                    lobbyPropsUpdate={this.state.lobbyPropsUpdate}\n                                    updatePlayerReadyState={setPlayerReadyStatus}\n                                    addPlayerToLobbyFunc={addPlayerToLobby}\n                                    removePlayerFromLobbyFunc={removePlayerFromLobby}\n                                    updateToastMessage={this.updateToastMessage}\n                                    openToast={this.openToast}\n                                    debounceToast={this.state.toast.open}\n                                    signOut={this.signOut}\n                                    addPlayerToNewGame={addPlayerToNewGame}\n                                />);\n                            }} />\n                            <Route exact path={[\"/map\"]}>\n                                <MapView\n                                    user={this.state.user}\n                                    playersInGame={this.state.playersInGame}\n                                    huntingPlayer={this.state.huntingPlayer}\n                                    chasedByPlayer={this.state.chasedByPlayer}\n                                />\n                            </Route>\n                            <Route exact path={[\"/\", \"/index.html\", \"/*\"]}>\n                                <Home\n                                    signIn={signIn}\n                                    content={\n                                        <React.Fragment>\n                                        </React.Fragment>\n                                    }\n                                />\n                            </Route>\n                        </Switch>\n                    )} />\n                </Router>\n                <Toast\n                    isOpen={this.state.toast.open}\n                    animation={\"fall\"}\n                    animationOptions={{ duration: 0.2, delay: 0.4, timing: 'ease-in' }}\n                >\n                    <span>{this.state.toast.message}</span>\n                </Toast>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}