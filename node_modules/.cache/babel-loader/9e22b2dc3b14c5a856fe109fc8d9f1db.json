{"ast":null,"code":"var _jsxFileName = \"/Users/Alessandro/Documents/GitHub/mobut-project/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { createFakeLobby, setPlayerReadyStatus, ListenToPlayersInLobby, addPlayerToLobby, removePlayerFromLobby, getPlayersInLobby, createNewGame, stopListeningToLobby } from \"./components/firebase-database.component\";\nimport { signIn, initFirebaseAuth, signOut } from \"./components/firebase-authentication.component\";\nimport Lobby from './components/Lobby.js';\nimport Home from './components/Home.js';\nimport MapView from './components/MapView.js';\nimport { Toast } from 'react-onsenui';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      playersInLobby: [],\n      lobbyPropsUpdate: false,\n      toast: {\n        open: false,\n        timeout: 2500,\n        message: ''\n      },\n      redirect: false,\n      path: \"/\"\n    };\n\n    this.authStateObserver = user => {\n      if (user) {\n        // User is signed in!,\n        this.setState({\n          user: this.getUserProps(user),\n          redirect: true,\n          path: '/lobby'\n        });\n        console.log({\n          user\n        }, ' signed in');\n      } else {\n        // User is signed out!\n        this.setState({\n          user: {}\n        });\n        console.log({\n          user\n        }, ' signed out');\n      }\n    };\n\n    this.getUserProps = user => {\n      console.log('Current user: ', {\n        user\n      });\n      return {\n        email: user.email,\n        playerId: user.uid,\n        playerName: this.formatDisplayName(user.displayName),\n        imgURL: user.photoURL\n      };\n    };\n\n    this.formatDisplayName = name => {\n      let maxLength = 8;\n      let firstName = this.getFirstName(name);\n\n      if (firstName.length > maxLength) {\n        return `${firstName.slice(0, maxLength)}...`;\n      } else {\n        return firstName;\n      }\n    };\n\n    this.getFirstName = name => {\n      return name.split(\" \")[0];\n    };\n\n    this.playerInLobby = id => {\n      const allPlayers = this.state.playersInLobby;\n      let player;\n\n      for (let i = 0; i < allPlayers.length; i++) {\n        player = allPlayers[i];\n\n        if (player.playerId === id) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    this.updateToastMessage = message => {\n      let toast = this.state.toast;\n      toast[\"message\"] = message;\n      this.setState({\n        toast: toast\n      });\n    };\n\n    this.openToast = () => {\n      let toast = this.state.toast;\n      toast[\"open\"] = true;\n      this.setState({\n        toast: toast\n      });\n      setTimeout(() => {\n        toast[\"open\"] = false;\n        this.setState({\n          toast: toast\n        });\n      }, this.state.toast.timeout);\n    };\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          push: true,\n          to: {\n            pathname: this.state.path,\n            state: {}\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 20\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 20\n          }\n        });\n      }\n    };\n\n    this.signOut = () => {\n      this.setState({\n        path: '/'\n      });\n      signOut();\n    };\n  }\n\n  componentDidMount() {\n    ListenToPlayersInLobby(data => {\n      this.setState({\n        playersInLobby: data,\n        lobbyPropsUpdate: !this.state.lobbyPropsUpdate\n      });\n    });\n    initFirebaseAuth(this.authStateObserver);\n  }\n\n  // signIn = () => {\n  //     signIn().then(res => {\n  //         this.setState({\n  //             user: this.getUserProps(res.user),\n  //             page: 1,\n  //         })\n  //     });\n  // };\n  render() {\n    console.log(\"Render App.js\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }, this.renderRedirect(), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      render: ({\n        location\n      }) => /*#__PURE__*/React.createElement(Switch, {\n        location: location,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: [\"/lobby\"],\n        render: props => {\n          const user = this.state.user;\n          user[\"ready\"] = this.playerInLobby(user.playerId);\n          return /*#__PURE__*/React.createElement(Lobby, {\n            user: user,\n            allPlayers: this.state.playersInLobby,\n            lobbyPropsUpdate: this.state.lobbyPropsUpdate,\n            updatePlayerReadyState: setPlayerReadyStatus,\n            addPlayerToLobbyFunc: addPlayerToLobby,\n            removePlayerFromLobbyFunc: removePlayerFromLobby,\n            updateToastMessage: this.updateToastMessage,\n            openToast: this.openToast,\n            debounceToast: this.state.toast.open,\n            signOut: this.signOut,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 41\n            }\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: [\"/map\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(MapView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: [\"/\", \"/index.html\", \"/*\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Home, {\n        signIn: signIn,\n        content: /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 41\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 33\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Toast, {\n      isOpen: this.state.toast.open,\n      animation: \"fall\",\n      animationOptions: {\n        duration: 0.2,\n        delay: 0.4,\n        timing: 'ease-in'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }\n    }, this.state.toast.message)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Alessandro/Documents/GitHub/mobut-project/src/App.js"],"names":["React","Component","createFakeLobby","setPlayerReadyStatus","ListenToPlayersInLobby","addPlayerToLobby","removePlayerFromLobby","getPlayersInLobby","createNewGame","stopListeningToLobby","signIn","initFirebaseAuth","signOut","Lobby","Home","MapView","Toast","BrowserRouter","Router","Route","Switch","Redirect","App","state","playersInLobby","lobbyPropsUpdate","toast","open","timeout","message","redirect","path","authStateObserver","user","setState","getUserProps","console","log","email","playerId","uid","playerName","formatDisplayName","displayName","imgURL","photoURL","name","maxLength","firstName","getFirstName","length","slice","split","playerInLobby","id","allPlayers","player","i","updateToastMessage","openToast","setTimeout","renderRedirect","pathname","componentDidMount","data","render","location","props","duration","delay","timing"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport {\n    createFakeLobby,\n    setPlayerReadyStatus,\n    ListenToPlayersInLobby,\n    addPlayerToLobby,\n    removePlayerFromLobby,\n    getPlayersInLobby,\n    createNewGame,\n    stopListeningToLobby,\n} from \"./components/firebase-database.component\";\nimport {\n    signIn,\n    initFirebaseAuth,\n    signOut\n} from \"./components/firebase-authentication.component\";\nimport Lobby from './components/Lobby.js';\nimport Home from './components/Home.js';\nimport MapView from './components/MapView.js';\nimport { Toast } from 'react-onsenui';\nimport { BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\n\n\nclass App extends Component {\n\n    state = {\n        playersInLobby: [],\n        lobbyPropsUpdate: false,\n        toast: {\n            open: false,\n            timeout: 2500,\n            message: ''\n        },\n        redirect: false,\n        path: \"/\",\n    };\n\n    authStateObserver = (user) => {\n        if (user) { // User is signed in!,\n            this.setState({\n                user: this.getUserProps(user),\n                redirect: true,\n                path: '/lobby'\n            });\n            console.log({ user }, ' signed in');\n        } else { // User is signed out!\n            this.setState({\n                user: {},\n            });\n            console.log({ user }, ' signed out');\n        }\n    };\n\n    componentDidMount() {\n        ListenToPlayersInLobby((data) => {\n            this.setState({\n                playersInLobby: data,\n                lobbyPropsUpdate: (!(this.state.lobbyPropsUpdate))\n            });\n        });\n        initFirebaseAuth(this.authStateObserver);\n    }\n\n    getUserProps = (user) => {\n        console.log('Current user: ', { user });\n        return {\n            email: user.email,\n            playerId: user.uid,\n            playerName: this.formatDisplayName(user.displayName),\n            imgURL: user.photoURL,\n        };\n    };\n\n    formatDisplayName = (name) => {\n        let maxLength = 8;\n        let firstName = this.getFirstName(name);\n        if (firstName.length > maxLength) {\n            return `${firstName.slice(0, maxLength)}...`;\n        } else {\n            return firstName;\n        }\n    };\n\n    getFirstName = (name) => {\n        return (name.split(\" \"))[0];\n    };\n\n    playerInLobby = (id) => {\n        const allPlayers = this.state.playersInLobby;\n        let player;\n        for (let i = 0; i < allPlayers.length; i++) {\n            player = allPlayers[i];\n            if (player.playerId === id) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    updateToastMessage = (message) => {\n        let toast = this.state.toast;\n        toast[\"message\"] = message;\n        this.setState({\n            toast: toast\n        })\n    };\n\n    openToast = () => {\n        let toast = this.state.toast;\n        toast[\"open\"] = true;\n        this.setState({\n            toast: toast\n        });\n        setTimeout(() => {\n            toast[\"open\"] = false;\n            this.setState({\n                toast: toast\n            });\n        }, this.state.toast.timeout)\n    };\n\n    renderRedirect = () => {\n        if (this.state.redirect) {\n            return <Redirect push to={{\n                pathname: this.state.path,\n                state: {\n\n                }\n            }} />\n        }else{\n            return <React.Fragment/>\n        }\n    };\n\n    // Maybe not needed with the authStateObserver in componentDidMount\n    signOut = () => {\n        this.setState({\n            path: '/'\n        });\n        signOut();\n    };\n\n    // signIn = () => {\n    //     signIn().then(res => {\n    //         this.setState({\n    //             user: this.getUserProps(res.user),\n    //             page: 1,\n    //         })\n    //     });\n    // };\n\n    render() {\n        console.log(\"Render App.js\");\n        return (\n            <div className=\"App\">\n                <Router>\n                    {this.renderRedirect()}\n                    <Route exact render={({location}) => (\n                        <Switch location={location}>\n                            <Route exact path={[\"/lobby\"]} render={props => {\n                                const user = this.state.user;\n                                user[\"ready\"] = this.playerInLobby(user.playerId);\n                                return (<Lobby\n                                    user={user}\n                                    allPlayers={this.state.playersInLobby}\n                                    lobbyPropsUpdate={this.state.lobbyPropsUpdate}\n                                    updatePlayerReadyState={setPlayerReadyStatus}\n                                    addPlayerToLobbyFunc={addPlayerToLobby}\n                                    removePlayerFromLobbyFunc={removePlayerFromLobby}\n                                    updateToastMessage={this.updateToastMessage}\n                                    openToast={this.openToast}\n                                    debounceToast={this.state.toast.open}\n                                    signOut={this.signOut}\n                                />);\n                            }}/>\n                            <Route exact path={[\"/map\"]}>\n                                <MapView/>\n                            </Route>\n                            <Route exact path={[\"/\", \"/index.html\", \"/*\"]}>\n                                <Home\n                                    signIn={signIn}\n                                    content={\n                                        <React.Fragment>\n                                        </React.Fragment>\n                                    }\n                                />\n                            </Route>\n                        </Switch>\n                    )}/>\n                </Router>\n                <Toast\n                    isOpen={this.state.toast.open}\n                    animation={\"fall\"}\n                    animationOptions={{ duration: 0.2, delay: 0.4, timing: 'ease-in' }}\n                >\n                    <span>{this.state.toast.message}</span>\n                </Toast>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}