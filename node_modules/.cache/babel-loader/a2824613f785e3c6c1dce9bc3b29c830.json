{"ast":null,"code":"var _jsxFileName = \"/Users/Alessandro/Documents/GitHub/mobut-project/src/components/Lobby.js\";\nimport React, { Component } from 'react';\nimport './Lobby.css';\nimport Player from './Player.js';\nimport { Page as OnsPage } from 'react-onsenui';\nimport LobbyToolbar from './LobbyToolbar';\n\nclass Lobby extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: 0,\n      ready: false,\n      name: '',\n      imgURL: '',\n      allPlayers: []\n    };\n\n    this.displayToast = message => {\n      this.props.updateToastMessage(message);\n\n      if (!this.props.debounceToast) {\n        this.props.openToast();\n      }\n    };\n\n    this.toggleReady = () => {\n      const readyState = !this.state.ready;\n      const id = this.state.id;\n      this.setState({\n        ready: readyState\n      });\n\n      if (readyState) {\n        this.props.addPlayerToLobbyFunc(this.props.user);\n        this.displayToast(\"You joined the current game session\");\n      } else {\n        this.props.removePlayerFromLobbyFunc(this.props.user);\n        this.displayToast(\"You exited the current game session\");\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      id: this.props.user.playerId,\n      imgURL: this.props.user.imgURL,\n      name: this.props.user.playerName,\n      ready: this.props.user.ready,\n      allPlayers: this.props.allPlayers\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.lobbyPropsUpdate !== this.props.lobbyPropsUpdate) {\n      this.setState({\n        id: this.props.user.playerId,\n        imgURL: this.props.user.imgURL,\n        name: this.props.user.playerName,\n        ready: this.props.user.ready,\n        allPlayers: this.props.allPlayers\n      });\n    }\n  }\n\n  render() {\n    const allPlayers = this.state.allPlayers;\n    return /*#__PURE__*/React.createElement(OnsPage, {\n      className: 'lobby-component',\n      renderToolbar: () => {\n        return /*#__PURE__*/React.createElement(LobbyToolbar, {\n          title: 'Lobby',\n          user: this.props.user,\n          signOut: this.props.signOut,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }\n        });\n      },\n      style: {\n        backgroundColor: 'red',\n        backgroundSize: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Player, {\n      className: \"player-item\",\n      key: this.state.playerId,\n      style: {\n        marginTop: this.state.ready ? 80 : 0,\n        marginBottom: this.state.ready ? 20 : 60\n      },\n      ready: this.state.ready,\n      player: this.props.user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }), allPlayers.map(player => {\n      if (player.ready === true && player.playerId !== this.state.id) {\n        return /*#__PURE__*/React.createElement(Player, {\n          className: \"player-item\",\n          key: player.playerId,\n          id: player.playerId,\n          style: {\n            marginTop: 20\n          },\n          player: player,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }\n        });\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: `lobby-btn ${this.state.ready ? `lobby-exit-btn` : `lobby-join-btn`}`,\n      onClick: this.toggleReady,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default Lobby;","map":{"version":3,"sources":["/Users/Alessandro/Documents/GitHub/mobut-project/src/components/Lobby.js"],"names":["React","Component","Player","Page","OnsPage","LobbyToolbar","Lobby","state","id","ready","name","imgURL","allPlayers","displayToast","message","props","updateToastMessage","debounceToast","openToast","toggleReady","readyState","setState","addPlayerToLobbyFunc","user","removePlayerFromLobbyFunc","componentDidMount","playerId","playerName","componentDidUpdate","prevProps","lobbyPropsUpdate","render","signOut","backgroundColor","backgroundSize","marginTop","marginBottom","map","player"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './Lobby.css';\nimport Player from './Player.js';\nimport {Page as OnsPage} from 'react-onsenui';\nimport LobbyToolbar from './LobbyToolbar'\n\n\nclass Lobby extends Component{\n\n    state = {\n        id: 0,\n        ready: false,\n        name: '',\n        imgURL: '',\n        allPlayers: [],\n    };\n    componentDidMount(){\n        this.setState({\n            id: this.props.user.playerId,\n            imgURL: this.props.user.imgURL,\n            name: this.props.user.playerName,\n            ready: this.props.user.ready,\n            allPlayers: this.props.allPlayers\n        })\n    }\n\n    componentDidUpdate(prevProps){\n        if(prevProps.lobbyPropsUpdate !== this.props.lobbyPropsUpdate){\n            this.setState({\n                id: this.props.user.playerId,\n                imgURL: this.props.user.imgURL,\n                name: this.props.user.playerName,\n                ready: this.props.user.ready,\n                allPlayers: this.props.allPlayers\n            })\n        }\n    }\n\n    displayToast = (message) => {\n        this.props.updateToastMessage(message);\n        if(!(this.props.debounceToast)){\n            this.props.openToast();\n        }\n    };\n\n    toggleReady = () => {\n        const readyState = !(this.state.ready);\n        const id = this.state.id;\n        this.setState({ready: readyState});\n        if(readyState){\n            this.props.addPlayerToLobbyFunc(this.props.user);\n            this.displayToast(\"You joined the current game session\");\n        }else{\n            this.props.removePlayerFromLobbyFunc(this.props.user);\n            this.displayToast(\"You exited the current game session\");\n        }\n    };\n\n    render() {\n        const allPlayers = this.state.allPlayers;\n        return (\n            <OnsPage\n                className={'lobby-component'}\n                renderToolbar={() => {\n                    return (\n                        <LobbyToolbar\n                            title={'Lobby'}\n                            user={this.props.user}\n                            signOut={this.props.signOut}\n                        />)\n                }}\n                style={{\n                    backgroundColor: 'red',\n                    backgroundSize: 0,\n\n                }}\n            >\n                <Player\n                    className=\"player-item\"\n                    key={this.state.playerId}\n                    style={{\n                        marginTop: (this.state.ready) ? 80 : 0,\n                        marginBottom: (this.state.ready) ? 20 : 60\n                    }}\n                    ready={this.state.ready}\n                    player={this.props.user}\n                />\n                {allPlayers.map((player) => {\n                    if(player.ready === true && player.playerId !== this.state.id){\n                        return (\n                            <Player\n                                className=\"player-item\"\n                                key={player.playerId}\n                                id={player.playerId}\n                                style={{\n                                    marginTop: 20,\n                                }}\n                                player={player}/>)}\n                })}\n                <div>\n                    <button\n                        className={`lobby-btn ${(this.state.ready) ? `lobby-exit-btn` : `lobby-join-btn`}`}\n                        onClick={this.toggleReady}\n                    />\n                </div>\n            </OnsPage>\n        );\n    }\n}\n\nexport default Lobby;\n\n\n\n"]},"metadata":{},"sourceType":"module"}