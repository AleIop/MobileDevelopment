{"ast":null,"code":"var _jsxFileName = \"/Users/Alessandro/Documents/GitHub/mobut-project/src/components/MapView.js\";\nimport React from 'react';\nimport { Map, Marker, InfoWindow, GoogleApiWrapper } from 'google-maps-react';\nimport PlayerMarker from './PlayerMarker.js';\nimport './MapView.css';\nimport PubNubReact from 'pubnub-react';\nexport class MapView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      myLocation: {\n        lat: 0,\n        lng: 0\n      },\n      targetLocation: {\n        lat: 0,\n        lng: 0\n      }\n    };\n    this.target = null;\n\n    this.publishMyLocation = loc => {\n      //console.log('this.props :>> ', this.state);\n      //console.log('loc :>> ', loc);\n      this.pubnub.publish({\n        message: {\n          user: this.props.user,\n          userLocation: loc\n        },\n        channel: 'positionChannel'\n      });\n    };\n\n    this.pubnub = new PubNubReact({\n      publishKey: 'pub-c-c72ffc95-6f42-4bdf-8a95-04015fd20d32',\n      subscribeKey: 'sub-c-ea26bb44-92b6-11ea-8dc6-429c98eb9bb1'\n    });\n    this.pubnub.init(this);\n  }\n\n  componentDidMount() {\n    console.log(\"MapView did mount\");\n    this.pubnub.subscribe({\n      channels: ['positionChannel'],\n      withPresence: true\n    }); // Listening to 'positionChannel'\n\n    this.pubnub.getMessage('positionChannel', msg => {\n      console.log('msg :>> ', msg, '\\nstate :>> ', this.state, '\\nProps: ', this.props);\n\n      if (this.props.huntingPlayer.playerId === msg.message.user.playerId) {\n        this.setState({\n          targetLocation: msg.message.userLocation\n        });\n      }\n\n      console.log('from pubnub update this.state :>> ', this.state);\n    });\n  }\n\n  componentDidUpdate(previousProps) {\n    if (previousProps.huntingPlayer !== this.props.huntingPlayer) console.log('Current props: ', this.props);\n  }\n\n  componentWillUnmount() {\n    this.props.removePlayerFromGame(this.props.user);\n  }\n\n  render() {\n    if (!this.props.loaded) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, \"Loading...\");\n    return /*#__PURE__*/React.createElement(Map, {\n      google: this.props.google,\n      zoom: 14,\n      initialCenter: {\n        lat: 59.329323,\n        lng: 18.068581\n      },\n      onClick: (props, map, e) => {\n        this.setState({\n          targetLocation: {\n            lat: e.latLng.lat(),\n            lng: e.latLng.lng()\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Marker, Object.assign({}, this.props, {\n      ref: element => {\n        if (element) this.target = element.marker;\n      },\n      name: 'Target',\n      position: this.state.targetLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(PlayerMarker, Object.assign({}, this.props, {\n      targetLocation: this.state.targetLocation,\n      publishMyLocation: this.publishMyLocation // onChange={this.eventhandler}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyD-HO6pALPiY9nrniME6UmHy3P3YUCv2Eg'\n})(MapView);","map":{"version":3,"sources":["/Users/Alessandro/Documents/GitHub/mobut-project/src/components/MapView.js"],"names":["React","Map","Marker","InfoWindow","GoogleApiWrapper","PlayerMarker","PubNubReact","MapView","Component","constructor","props","state","myLocation","lat","lng","targetLocation","target","publishMyLocation","loc","pubnub","publish","message","user","userLocation","channel","publishKey","subscribeKey","init","componentDidMount","console","log","subscribe","channels","withPresence","getMessage","msg","huntingPlayer","playerId","setState","componentDidUpdate","previousProps","componentWillUnmount","removePlayerFromGame","render","loaded","google","map","e","latLng","element","marker","apiKey"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Map, Marker, InfoWindow, GoogleApiWrapper } from 'google-maps-react';\nimport PlayerMarker from './PlayerMarker.js';\nimport './MapView.css';\nimport PubNubReact from 'pubnub-react';\n\n\nexport class MapView extends React.Component {\n\n  state = {\n    myLocation: {\n      lat: 0,\n      lng: 0\n    },\n    targetLocation: {\n      lat: 0,\n      lng: 0\n    }\n  }\n  target = null;\n\n    constructor(props) {\n        super(props);\n        this.pubnub = new PubNubReact({\n            publishKey: 'pub-c-c72ffc95-6f42-4bdf-8a95-04015fd20d32',\n            subscribeKey: 'sub-c-ea26bb44-92b6-11ea-8dc6-429c98eb9bb1'\n        });\n        this.pubnub.init(this);\n    }\n\n  componentDidMount(){\n    console.log(\"MapView did mount\")\n      this.pubnub.subscribe({\n          channels: ['positionChannel'],\n          withPresence: true\n      });\n\n      // Listening to 'positionChannel'\n      this.pubnub.getMessage('positionChannel', (msg) => {\n          console.log('msg :>> ',\n              msg,\n              '\\nstate :>> ',\n              this.state,\n              '\\nProps: ',\n              this.props);\n          if (this.props.huntingPlayer.playerId === msg.message.user.playerId) {\n              this.setState({\n                  targetLocation: msg.message.userLocation,\n              })\n          }\n          console.log('from pubnub update this.state :>> ', this.state);\n      });\n  }\n\n    publishMyLocation = (loc) => {\n        //console.log('this.props :>> ', this.state);\n        //console.log('loc :>> ', loc);\n        this.pubnub.publish({\n            message: {\n                user: this.props.user,\n                userLocation: loc\n            },\n            channel: 'positionChannel'\n        });\n    }\n\n  componentDidUpdate(previousProps) {\n\n    if (previousProps.huntingPlayer !== this.props.huntingPlayer) console.log('Current props: ', this.props);\n  }\n\n  componentWillUnmount(){\n    this.props.removePlayerFromGame(this.props.user);\n  }\n\n  render() {\n    if (!this.props.loaded)\n      return (\n        <div>Loading...</div>\n      );\n\n    return (\n      <Map\n        google={this.props.google}\n        zoom={14}\n        initialCenter={{\n          lat: 59.329323,\n          lng: 18.068581\n        }}\n        onClick={(props, map, e) => {\n          this.setState({\n            targetLocation: {\n              lat: e.latLng.lat(),\n              lng: e.latLng.lng()\n            }\n          });\n        }}\n      >\n        <Marker {...this.props}\n          ref={element => {\n            if (element)\n              this.target = element.marker;\n          }}\n          name={'Target'}\n          position={this.state.targetLocation}\n        />\n        <PlayerMarker {...this.props}\n          targetLocation={this.state.targetLocation}\n          publishMyLocation={this.publishMyLocation}\n          // onChange={this.eventhandler}\n        />\n      </Map>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: ('AIzaSyD-HO6pALPiY9nrniME6UmHy3P3YUCv2Eg')\n})(MapView)\n"]},"metadata":{},"sourceType":"module"}