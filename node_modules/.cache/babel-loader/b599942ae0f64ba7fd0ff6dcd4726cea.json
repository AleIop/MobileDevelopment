{"ast":null,"code":"import*as firebase from\"firebase/app\";import\"firebase/auth\";function signIn(){// Sign into Firebase using popup auth & Google as the identity provider.\nreturn firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL).then(function(){var provider=new firebase.auth.GoogleAuthProvider();// In memory persistence will be applied to the signed in Google user\n// even though the persistence was set to 'none' and a page redirect\n// occurred.\nreturn firebase.auth().signInWithPopup(provider);}).catch(function(error){// Handle Errors here.\nvar errorCode=error.code;var errorMessage=error.message;});}// Signs-out of Friendly Chat.\nfunction signOut(){// Sign out of Firebase.\nfirebase.auth().signOut();}// Initiate Firebase Auth.\nfunction initFirebaseAuth(authStateObserver){// Listen to auth state changes.\nfirebase.auth().onAuthStateChanged(authStateObserver);}// Triggers when the auth state change for instance when the user signs-in or signs-out.\nexport{signIn,signOut,initFirebaseAuth};","map":{"version":3,"sources":["/Users/Alessandro/Documents/GitHub/mobut-project/src/components/firebase-authentication.component.js"],"names":["firebase","signIn","auth","setPersistence","Auth","Persistence","LOCAL","then","provider","GoogleAuthProvider","signInWithPopup","catch","error","errorCode","code","errorMessage","message","signOut","initFirebaseAuth","authStateObserver","onAuthStateChanged"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,QAAZ,KAA0B,cAA1B,CACA,MAAO,eAAP,CAEA,QAASC,CAAAA,MAAT,EAAkB,CACd;AAEA,MAAOD,CAAAA,QAAQ,CAACE,IAAT,GAAgBC,cAAhB,CAA+BH,QAAQ,CAACE,IAAT,CAAcE,IAAd,CAAmBC,WAAnB,CAA+BC,KAA9D,EAAqEC,IAArE,CAA0E,UAAW,CACxF,GAAIC,CAAAA,QAAQ,CAAG,GAAIR,CAAAA,QAAQ,CAACE,IAAT,CAAcO,kBAAlB,EAAf,CACA;AACA;AACA;AACA,MAAOT,CAAAA,QAAQ,CAACE,IAAT,GAAgBQ,eAAhB,CAAgCF,QAAhC,CAAP,CACH,CANM,EAMJG,KANI,CAME,SAASC,KAAT,CAAgB,CACrB;AACA,GAAIC,CAAAA,SAAS,CAAGD,KAAK,CAACE,IAAtB,CACA,GAAIC,CAAAA,YAAY,CAAGH,KAAK,CAACI,OAAzB,CACC,CAVE,CAAP,CAWH,CAED;AACA,QAASC,CAAAA,OAAT,EAAmB,CACf;AACAjB,QAAQ,CAACE,IAAT,GAAgBe,OAAhB,GACH,CAED;AACA,QAASC,CAAAA,gBAAT,CAA0BC,iBAA1B,CAA6C,CACzC;AACHnB,QAAQ,CAACE,IAAT,GAAgBkB,kBAAhB,CAAmCD,iBAAnC,EACA,CAED;AAGA,OACClB,MADD,CAEIgB,OAFJ,CAGCC,gBAHD","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nfunction signIn() {\n    // Sign into Firebase using popup auth & Google as the identity provider.\n    \n    return firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL).then(function() {\n        var provider = new firebase.auth.GoogleAuthProvider();\n        // In memory persistence will be applied to the signed in Google user\n        // even though the persistence was set to 'none' and a page redirect\n        // occurred.\n        return firebase.auth().signInWithPopup(provider);\n    }).catch(function(error) {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        });\n}\n\n// Signs-out of Friendly Chat.\nfunction signOut() {\n    // Sign out of Firebase.\n    firebase.auth().signOut();\n}\n\n// Initiate Firebase Auth.\nfunction initFirebaseAuth(authStateObserver) {\n    // Listen to auth state changes.\n\tfirebase.auth().onAuthStateChanged(authStateObserver);\n}\n\n// Triggers when the auth state change for instance when the user signs-in or signs-out.\n\n\nexport {\n\tsignIn,\n    signOut,\n\tinitFirebaseAuth\n};"]},"metadata":{},"sourceType":"module"}