{"ast":null,"code":"var _jsxFileName = \"/Users/Alessandro/Documents/GitHub/mobut-project/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { createFakeLobby, setPlayerReadyStatus, ListenToPlayersInLobby, addPlayerToLobby, removePlayerFromLobby, removePlayerFromGame, addPlayerToNewGame, getPlayersInLobby, createNewGame, stopListeningToLobby, ListenToPlayersInGame } from \"./components/firebase-database.component\";\nimport { signIn, initFirebaseAuth, signOut } from \"./components/firebase-authentication.component\";\nimport Lobby from './components/Lobby.js';\nimport Home from './components/Home.js';\nimport MapView from './components/MapView.js';\nimport { Toast, Modal } from 'react-onsenui';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      playersInGame: [],\n      playersInLobby: [],\n      lobbyPropsUpdate: false,\n      toast: {\n        open: false,\n        timeout: 2500,\n        message: ''\n      },\n      myLocation: {\n        lat: 0,\n        lng: 0\n      },\n      targetLocation: {\n        lat: 0,\n        lng: 0\n      },\n      user: {},\n      redirect: false,\n      path: \"/\",\n      huntingPlayer: null,\n      modalIsOpen: false\n    };\n\n    this.authStateObserver = user => {\n      if (user) {\n        // User is signed in!,\n        this.setState({\n          user: this.getUserProps(user),\n          redirect: true,\n          path: '/lobby'\n        }); // console.log({ user }, ' signed in');\n      } else {\n        // User is signed out!\n        this.setState({\n          user: {}\n        }); // console.log({ user }, ' signed out');\n      }\n    };\n\n    this.getUserIndex = list => {\n      for (let i = 0; i < list.length; i++) {\n        const player = list[i];\n\n        if (player.id === this.state.user.id) {\n          return i;\n        }\n      }\n    };\n\n    this.displayToast = message => {\n      this.updateToastMessage(message);\n      this.openToast();\n    };\n\n    this.getUserProps = user => {\n      // console.log('Current user: ', { user });\n      return {\n        email: user.email,\n        playerId: user.uid,\n        playerName: this.formatDisplayName(user.displayName),\n        imgURL: user.photoURL\n      };\n    };\n\n    this.formatDisplayName = name => {\n      let maxLength = 8;\n      let firstName = this.getFirstName(name);\n\n      if (firstName.length > maxLength) {\n        return `${firstName.slice(0, maxLength)}...`;\n      } else {\n        return firstName;\n      }\n    };\n\n    this.getFirstName = name => {\n      return name.split(\" \")[0];\n    };\n\n    this.playerInLobby = id => {\n      const allPlayers = this.state.playersInLobby;\n      let player;\n\n      for (let i = 0; i < allPlayers.length; i++) {\n        player = allPlayers[i];\n\n        if (player.playerId === id) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    this.playerInGame = id => {\n      const allPlayers = this.state.playersInGame;\n\n      if (allPlayers) {\n        let player;\n\n        for (let i = 0; i < allPlayers.length; i++) {\n          player = allPlayers[i];\n\n          if (player.playerId === id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    };\n\n    this.updateToastMessage = message => {\n      let toast = this.state.toast;\n      toast[\"message\"] = message;\n      this.setState({\n        toast: toast\n      });\n    };\n\n    this.openToast = () => {\n      let toast = this.state.toast;\n      toast[\"open\"] = true;\n      this.setState({\n        toast: toast\n      });\n      setTimeout(() => {\n        toast[\"open\"] = false;\n        this.setState({\n          toast: toast\n        });\n      }, this.state.toast.timeout);\n    };\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          push: true,\n          to: {\n            pathname: this.state.path,\n            state: {}\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 20\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 20\n          }\n        });\n      }\n    };\n\n    this.signOut = () => {\n      this.setState({\n        path: '/'\n      });\n      removePlayerFromLobby(this.state.user);\n      signOut();\n    };\n\n    this.clearState = () => {\n      this.setState({\n        huntingPlayer: null\n      });\n    };\n\n    this.setOpenModal = bool => {\n      this.setState({\n        modalIsOpen: bool\n      });\n    };\n\n    this.endGame = () => {\n      this.setState({\n        redirect: true,\n        path: '/lobby'\n      });\n    };\n  }\n\n  componentWillUnmount() {\n    this.pubnub.unsubscribe({\n      channels: ['positionChannel']\n    });\n  }\n\n  componentDidMount() {\n    this.clearState();\n    ListenToPlayersInLobby(data => {\n      this.setState({\n        playersInLobby: data,\n        lobbyPropsUpdate: !this.state.lobbyPropsUpdate\n      });\n    }); // the way of Ale, He's so random\n\n    ListenToPlayersInGame(data => {\n      if (this.state.playersInGame.length >= 2 && data.length < 2) {\n        // Somebody won!\n        this.setState({\n          playersInGame: data,\n          // chasedByPlayer:\n          huntingPlayer: {},\n          gamePropsUpdate: !this.state.gamePropsUpdate\n        });\n        this.endGame();\n        this.displayToast();\n      }\n\n      if (data.length >= 2) {\n        let targetPlayer = data[Math.floor(Math.random() * data.length)];\n\n        while (targetPlayer.playerId === this.state.user.playerId) {\n          targetPlayer = data[Math.floor(Math.random() * data.length)];\n        } // console.log('Player: ',\n        //         this.state.user,\n        //         '\\nTarget player: ',\n        //         {targetPlayer});\n\n\n        this.setState({\n          playersInGame: data,\n          // chasedByPlayer:\n          huntingPlayer: targetPlayer,\n          gamePropsUpdate: !this.state.gamePropsUpdate\n        });\n      } //console.log('object :>> ', data);\n\n    });\n    initFirebaseAuth(this.authStateObserver);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }\n    }, this.renderRedirect(), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      render: ({\n        location\n      }) => /*#__PURE__*/React.createElement(Switch, {\n        location: location,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: [\"/lobby\"],\n        render: props => {\n          const user = this.state.user;\n          const userInLobby = this.playerInLobby(user.playerId);\n          return /*#__PURE__*/React.createElement(Lobby, {\n            user: user,\n            userInLobby: userInLobby,\n            allPlayers: this.state.playersInLobby,\n            lobbyPropsUpdate: this.state.lobbyPropsUpdate,\n            updatePlayerReadyState: setPlayerReadyStatus,\n            addPlayerToLobbyFunc: addPlayerToLobby,\n            removePlayerFromLobbyFunc: removePlayerFromLobby,\n            updateToastMessage: this.updateToastMessage,\n            openToast: this.openToast,\n            debounceToast: this.state.toast.open,\n            signOut: this.signOut,\n            addPlayerToNewGame: addPlayerToNewGame,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 41\n            }\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: [\"/map\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(MapView, {\n        user: this.state.user,\n        playersInGame: this.state.playersInGame,\n        huntingPlayer: this.state.huntingPlayer,\n        chasedByPlayer: this.state.chasedByPlayer,\n        publishMyLocation: this.publishMyLocation,\n        targetLocation: this.state.targetLocation,\n        openToast: this.openToast,\n        updateToastMessage: this.updateToastMessage,\n        debounceToast: this.state.toast.open,\n        playerInGame: this.playerInGame(this.state.user.playerId),\n        removePlayerFromGame: removePlayerFromGame,\n        setModal: this.setOpenModal,\n        renderRedirect: this.renderRedirect,\n        endGame: this.endGame,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: [\"/\", \"/index.html\", \"/*\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Home, {\n        signIn: signIn,\n        content: /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 41\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 33\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.modalIsOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 17\n      }\n    }, \"This game is loading\"), /*#__PURE__*/React.createElement(Toast, {\n      isOpen: this.state.toast.open,\n      animation: \"fall\",\n      animationOptions: {\n        duration: 0.2,\n        delay: 0.4,\n        timing: 'ease-in'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 21\n      }\n    }, this.state.toast.message)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Alessandro/Documents/GitHub/mobut-project/src/App.js"],"names":["React","Component","createFakeLobby","setPlayerReadyStatus","ListenToPlayersInLobby","addPlayerToLobby","removePlayerFromLobby","removePlayerFromGame","addPlayerToNewGame","getPlayersInLobby","createNewGame","stopListeningToLobby","ListenToPlayersInGame","signIn","initFirebaseAuth","signOut","Lobby","Home","MapView","Toast","Modal","BrowserRouter","Router","Route","Switch","Redirect","App","state","playersInGame","playersInLobby","lobbyPropsUpdate","toast","open","timeout","message","myLocation","lat","lng","targetLocation","user","redirect","path","huntingPlayer","modalIsOpen","authStateObserver","setState","getUserProps","getUserIndex","list","i","length","player","id","displayToast","updateToastMessage","openToast","email","playerId","uid","playerName","formatDisplayName","displayName","imgURL","photoURL","name","maxLength","firstName","getFirstName","slice","split","playerInLobby","allPlayers","playerInGame","setTimeout","renderRedirect","pathname","clearState","setOpenModal","bool","endGame","componentWillUnmount","pubnub","unsubscribe","channels","componentDidMount","data","gamePropsUpdate","targetPlayer","Math","floor","random","render","location","props","userInLobby","chasedByPlayer","publishMyLocation","duration","delay","timing"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport {\n    createFakeLobby,\n    setPlayerReadyStatus,\n    ListenToPlayersInLobby,\n    addPlayerToLobby,\n    removePlayerFromLobby,\n    removePlayerFromGame,\n    addPlayerToNewGame,\n    getPlayersInLobby,\n    createNewGame,\n    stopListeningToLobby,\n    ListenToPlayersInGame,\n} from \"./components/firebase-database.component\";\nimport {\n    signIn,\n    initFirebaseAuth,\n    signOut\n} from \"./components/firebase-authentication.component\";\nimport Lobby from './components/Lobby.js';\nimport Home from './components/Home.js';\nimport MapView from './components/MapView.js';\nimport { Toast, Modal } from 'react-onsenui';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\n\n\nclass App extends Component {\n\n\n\n    componentWillUnmount() {\n        this.pubnub.unsubscribe({\n            channels: ['positionChannel']\n        });\n    }\n\n\n    state = {\n        playersInGame: [],\n        playersInLobby: [],\n        lobbyPropsUpdate: false,\n        toast: {\n            open: false,\n            timeout: 2500,\n            message: ''\n        },\n        myLocation: {\n            lat: 0,\n            lng: 0\n        },\n        targetLocation: {\n            lat: 0,\n            lng: 0\n        },\n        user: {},\n        redirect: false,\n        path: \"/\",\n        huntingPlayer: null,\n        modalIsOpen: false\n    };\n\n    authStateObserver = (user) => {\n        if (user) { // User is signed in!,\n            this.setState({\n                user: this.getUserProps(user),\n                redirect: true,\n                path: '/lobby'\n            });\n            // console.log({ user }, ' signed in');\n        } else { // User is signed out!\n            this.setState({\n                user: {},\n            });\n            // console.log({ user }, ' signed out');\n        }\n    };\n\n    componentDidMount() {\n        this.clearState();\n\n        ListenToPlayersInLobby((data) => {\n            this.setState({\n                playersInLobby: data,\n                lobbyPropsUpdate: (!(this.state.lobbyPropsUpdate))\n            });\n        });\n\n        // the way of Ale, He's so random\n        ListenToPlayersInGame((data) => {\n            if (this.state.playersInGame.length >= 2 && data.length < 2) {\n                // Somebody won!\n                this.setState({\n                    playersInGame: data,\n                    // chasedByPlayer:\n                    huntingPlayer: {},\n                    gamePropsUpdate: (!(this.state.gamePropsUpdate))\n                });\n\n                this.endGame();\n                this.displayToast();\n            }\n            if (data.length >= 2) {\n                let targetPlayer = data[Math.floor(Math.random() * data.length)];\n                while (targetPlayer.playerId === this.state.user.playerId) {\n                    targetPlayer = data[Math.floor(Math.random() * data.length)];\n                }\n\n                // console.log('Player: ',\n                //         this.state.user,\n                //         '\\nTarget player: ',\n                //         {targetPlayer});\n                this.setState({\n                    playersInGame: data,\n                    // chasedByPlayer:\n                    huntingPlayer: targetPlayer,\n                    gamePropsUpdate: (!(this.state.gamePropsUpdate))\n                });\n            }\n            //console.log('object :>> ', data);\n        });\n\n        initFirebaseAuth(this.authStateObserver);\n    }\n\n    getUserIndex = (list) => {\n        for (let i = 0; i < list.length; i++) {\n            const player = list[i];\n            if (player.id === this.state.user.id) {\n                return i;\n            }\n        }\n    };\n\n    displayToast = (message) => {\n        this.updateToastMessage(message);\n        this.openToast();\n    };\n\n    getUserProps = (user) => {\n        // console.log('Current user: ', { user });\n        return {\n            email: user.email,\n            playerId: user.uid,\n            playerName: this.formatDisplayName(user.displayName),\n            imgURL: user.photoURL,\n        };\n    };\n\n    formatDisplayName = (name) => {\n        let maxLength = 8;\n        let firstName = this.getFirstName(name);\n        if (firstName.length > maxLength) {\n            return `${firstName.slice(0, maxLength)}...`;\n        } else {\n            return firstName;\n        }\n    };\n\n    getFirstName = (name) => {\n        return (name.split(\" \"))[0];\n    };\n\n    playerInLobby = (id) => {\n        const allPlayers = this.state.playersInLobby;\n        let player;\n        for (let i = 0; i < allPlayers.length; i++) {\n            player = allPlayers[i];\n            if (player.playerId === id) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    playerInGame = (id) => {\n        const allPlayers = this.state.playersInGame;\n        if (allPlayers) {\n            let player;\n            for (let i = 0; i < allPlayers.length; i++) {\n                player = allPlayers[i];\n                if (player.playerId === id) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n\n\n    updateToastMessage = (message) => {\n        let toast = this.state.toast;\n        toast[\"message\"] = message;\n        this.setState({\n            toast: toast\n        })\n    };\n\n    openToast = () => {\n        let toast = this.state.toast;\n        toast[\"open\"] = true;\n        this.setState({\n            toast: toast\n        });\n        setTimeout(() => {\n            toast[\"open\"] = false;\n            this.setState({\n                toast: toast\n            });\n        }, this.state.toast.timeout)\n    };\n\n    renderRedirect = () => {\n        if (this.state.redirect) {\n            return <Redirect push to={{\n                pathname: this.state.path,\n                state: {\n\n                }\n            }} />\n        } else {\n            return <React.Fragment />\n        }\n    };\n\n    // Maybe not needed with the authStateObserver in componentDidMount\n    signOut = () => {\n        this.setState({\n            path: '/'\n        });\n        removePlayerFromLobby(this.state.user);\n        signOut();\n    };\n\n    // signIn = () => {\n    //     signIn().then(res => {\n    //         this.setState({\n    //             user: this.getUserProps(res.user),\n    //             page: 1,\n    //         })\n    //     });\n    // };\n\n    clearState = () => {\n        this.setState({\n            huntingPlayer: null,\n        })\n    };\n\n    setOpenModal = (bool) => {\n        this.setState({\n            modalIsOpen: bool\n        });\n    }\n\n    endGame = () =>{\n        this.setState({ \n            redirect: true, \n            path: '/lobby'\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Router>\n                    {this.renderRedirect()}\n                    <Route exact render={({ location }) => (\n                        <Switch location={location}>\n                            <Route exact path={[\"/lobby\"]} render={props => {\n                                const user = this.state.user;\n                                const userInLobby = this.playerInLobby(user.playerId)\n                                return (<Lobby\n                                    user={user}\n                                    userInLobby={userInLobby}\n                                    allPlayers={this.state.playersInLobby}\n                                    lobbyPropsUpdate={this.state.lobbyPropsUpdate}\n                                    updatePlayerReadyState={setPlayerReadyStatus}\n                                    addPlayerToLobbyFunc={addPlayerToLobby}\n                                    removePlayerFromLobbyFunc={removePlayerFromLobby}\n                                    updateToastMessage={this.updateToastMessage}\n                                    openToast={this.openToast}\n                                    debounceToast={this.state.toast.open}\n                                    signOut={this.signOut}\n                                    addPlayerToNewGame={addPlayerToNewGame}\n                                />);\n                            }} />\n                            <Route exact path={[\"/map\"]}>\n                                <MapView\n                                    user={this.state.user}\n                                    playersInGame={this.state.playersInGame}\n                                    huntingPlayer={this.state.huntingPlayer}\n                                    chasedByPlayer={this.state.chasedByPlayer}\n                                    publishMyLocation={this.publishMyLocation}\n                                    targetLocation={this.state.targetLocation}\n                                    openToast={this.openToast}\n                                    updateToastMessage={this.updateToastMessage}\n                                    debounceToast={this.state.toast.open}\n                                    playerInGame={this.playerInGame(this.state.user.playerId)}\n                                    removePlayerFromGame={removePlayerFromGame}\n                                    setModal = {this.setOpenModal}\n                                    renderRedirect = {this.renderRedirect}\n                                    endGame = {this.endGame}\n                                />\n                            </Route>\n                            <Route exact path={[\"/\", \"/index.html\", \"/*\"]}>\n                                <Home\n                                    signIn={signIn}\n                                    content={\n                                        <React.Fragment>\n                                        </React.Fragment>\n                                    }\n                                />\n                            </Route>\n                        </Switch>\n                    )} />\n                </Router>\n                <Modal isOpen={this.state.modalIsOpen}>\n                    This game is loading\n                </Modal>\n                <Toast\n                    isOpen={this.state.toast.open}\n                    animation={\"fall\"}\n                    animationOptions={{ duration: 0.2, delay: 0.4, timing: 'ease-in' }}\n                >\n                    <span>{this.state.toast.message}</span>\n                </Toast>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}