{"ast":null,"code":"import * as firebase from \"firebase/app\";\nimport \"firebase/auth\"; // Signs-in Friendly Chat.\n\nfunction signIn() {\n  // Sign into Firebase using popup auth & Google as the identity provider.\n  firebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION).then(function () {\n    var provider = new firebase.auth.GoogleAuthProvider(); // In memory persistence will be applied to the signed in Google user\n    // even though the persistence was set to 'none' and a page redirect\n    // occurred.\n\n    return firebase.auth().signInWithPopup(provider);\n  }).catch(function (error) {\n    // Handle Errors here.\n    var errorCode = error.code;\n    var errorMessage = error.message;\n  });\n} // Signs-out of Friendly Chat.\n\n\nfunction signOut() {\n  // Sign out of Firebase.\n  firebase.auth().signOut();\n} // Initiate Firebase Auth.\n\n\nfunction initFirebaseAuth() {\n  // Listen to auth state changes.\n  let r = firebase.auth().onAuthStateChanged(authStateObserver);\n  console.log('r: ', {\n    r\n  });\n} // Triggers when the auth state change for instance when the user signs-in or signs-out.\n\n\nfunction authStateObserver(user) {\n  if (user) {\n    // User is signed in!\n    console.log({\n      user\n    }, ' signed in');\n    return user;\n  } else {\n    // User is signed out!\n    console.log({\n      user\n    }, ' signed out');\n  }\n}\n\nexport { signIn, signOut, initFirebaseAuth };","map":{"version":3,"sources":["/Users/Alessandro/Documents/GitHub/mobut-project/src/components/firebase-authentication.component.js"],"names":["firebase","signIn","auth","setPersistence","Auth","Persistence","SESSION","then","provider","GoogleAuthProvider","signInWithPopup","catch","error","errorCode","code","errorMessage","message","signOut","initFirebaseAuth","r","onAuthStateChanged","authStateObserver","console","log","user"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,cAA1B;AACA,OAAO,eAAP,C,CAEA;;AACA,SAASC,MAAT,GAAkB;AACd;AAEAD,EAAAA,QAAQ,CAACE,IAAT,GAAgBC,cAAhB,CAA+BH,QAAQ,CAACE,IAAT,CAAcE,IAAd,CAAmBC,WAAnB,CAA+BC,OAA9D,EAAuEC,IAAvE,CAA4E,YAAW;AACnF,QAAIC,QAAQ,GAAG,IAAIR,QAAQ,CAACE,IAAT,CAAcO,kBAAlB,EAAf,CADmF,CAEnF;AACA;AACA;;AACA,WAAOT,QAAQ,CAACE,IAAT,GAAgBQ,eAAhB,CAAgCF,QAAhC,CAAP;AACH,GAND,EAMGG,KANH,CAMS,UAASC,KAAT,EAAgB;AACrB;AACA,QAAIC,SAAS,GAAGD,KAAK,CAACE,IAAtB;AACA,QAAIC,YAAY,GAAGH,KAAK,CAACI,OAAzB;AACC,GAVL;AAWH,C,CAED;;;AACA,SAASC,OAAT,GAAmB;AACf;AACAjB,EAAAA,QAAQ,CAACE,IAAT,GAAgBe,OAAhB;AACH,C,CAED;;;AACA,SAASC,gBAAT,GAA4B;AACxB;AACA,MAAIC,CAAC,GAAGnB,QAAQ,CAACE,IAAT,GAAgBkB,kBAAhB,CAAmCC,iBAAnC,CAAR;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmB;AAACJ,IAAAA;AAAD,GAAnB;AACH,C,CAED;;;AACA,SAASE,iBAAT,CAA2BG,IAA3B,EAAiC;AAC7B,MAAIA,IAAJ,EAAU;AAAE;AACRF,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACC,MAAAA;AAAD,KAAZ,EAAoB,YAApB;AACA,WAAOA,IAAP;AACH,GAHD,MAGO;AAAE;AACLF,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACC,MAAAA;AAAD,KAAZ,EAAoB,aAApB;AACH;AACJ;;AAED,SACCvB,MADD,EAEIgB,OAFJ,EAGCC,gBAHD","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\n// Signs-in Friendly Chat.\nfunction signIn() {\n    // Sign into Firebase using popup auth & Google as the identity provider.\n    \n    firebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION).then(function() {\n        var provider = new firebase.auth.GoogleAuthProvider();\n        // In memory persistence will be applied to the signed in Google user\n        // even though the persistence was set to 'none' and a page redirect\n        // occurred.\n        return firebase.auth().signInWithPopup(provider);\n    }).catch(function(error) {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        });\n}\n\n// Signs-out of Friendly Chat.\nfunction signOut() {\n    // Sign out of Firebase.\n    firebase.auth().signOut();\n}\n\n// Initiate Firebase Auth.\nfunction initFirebaseAuth() {\n    // Listen to auth state changes.\n    let r = firebase.auth().onAuthStateChanged(authStateObserver);\n    console.log('r: ', {r});\n}\n\n// Triggers when the auth state change for instance when the user signs-in or signs-out.\nfunction authStateObserver(user) {\n    if (user) { // User is signed in!\n        console.log({user}, ' signed in');\n        return user;\n    } else { // User is signed out!\n        console.log({user}, ' signed out');\n    }\n}\n\nexport {\n\tsignIn,\n    signOut,\n\tinitFirebaseAuth\n};"]},"metadata":{},"sourceType":"module"}