{"ast":null,"code":"var _jsxFileName = \"/Users/Alessandro/Documents/GitHub/mobut-project/src/components/Lobby.js\";\nimport React, { Component } from 'react';\nimport './Lobby.css';\nimport Player from './Player.js';\nimport { Page as OnsPage } from 'react-onsenui';\nimport LobbyToolbar from './LobbyToolbar';\nimport { Redirect } from 'react-router-dom';\nconst COUNT_DOWN = 10;\n\nclass Lobby extends Component {\n  constructor(...args) {\n    super(...args);\n    this.countDown = COUNT_DOWN;\n    this.state = {\n      redirect: false\n    };\n\n    this.displayToast = message => {\n      this.props.updateToastMessage(message);\n\n      if (!this.props.debounceToast) {\n        this.props.openToast();\n      }\n    };\n\n    this.toggleReady = () => {\n      if (!this.props.userInLobby) {\n        // console.log('this.props.userInLobby :>> ', this.props.userInLobby);\n        this.props.addPlayerToLobbyFunc(this.props.user);\n        this.displayToast(\"You joined the current game session\");\n      } else {\n        // console.log('this.props.userInLobby :>> ', this.props.userInLobby);\n        this.props.removePlayerFromLobbyFunc(this.props.user);\n        this.displayToast(\"You exited the current game session\");\n      }\n    };\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          push: true,\n          to: {\n            pathname: '/map',\n            state: {}\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 20\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 20\n          }\n        });\n      }\n    };\n  }\n\n  componentWillUnmount() {\n    // this.stopCountDown();\n    console.log('Stopped countdown in componentWillUnmount');\n  }\n\n  startCountDown() {\n    console.log('Starting the countdown...', this.countDown);\n\n    if (this.countDownInterval) {\n      // restart counter if intervall is already active and gets started again\n      this.countDown = COUNT_DOWN;\n    } else {\n      const decrementSeconds = 5;\n      this.countDownInterval = setInterval(() => {\n        console.log('counting down...', this.countDown);\n\n        if (this.countDown <= 0) {\n          this.stopCountDown();\n          this.props.addPlayerToNewGame(this.props.user, () => {// this.setState({\n            //     redirect: true,\n            // });\n          });\n          this.setState({\n            redirect: true\n          });\n          this.displayToast(\"Game is starting!\");\n        } else {\n          this.displayToast(this.countDown + \" seconds to start of the game\");\n        }\n\n        this.countDown = this.countDown - decrementSeconds;\n      }, decrementSeconds * 1000);\n    }\n  }\n\n  stopCountDown() {\n    if (this.countDownInterval) {\n      // stop the countdown if too few players\n      clearInterval(this.countDownInterval);\n      this.countDownInterval = null;\n      this.countDown = COUNT_DOWN;\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    //console.log('this.state.allPlayers :>> ', this.props.allPlayers);\n    if (prevProps.allPlayers.length !== this.props.allPlayers.length) {\n      // number of players in the lobby changed\n      if (this.props.allPlayers.length >= 2 && this.props.userInLobby) {\n        console.log('2 players or more');\n        this.startCountDown();\n      } else {\n        this.stopCountDown();\n      }\n    }\n  }\n\n  render() {\n    const allPlayers = this.props.allPlayers;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, this.renderRedirect(), /*#__PURE__*/React.createElement(OnsPage, {\n      className: 'lobby-component',\n      renderToolbar: () => {\n        return /*#__PURE__*/React.createElement(LobbyToolbar, {\n          title: 'Lobby',\n          user: this.props.user,\n          signOut: this.props.signOut,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }\n        });\n      },\n      style: {\n        backgroundColor: 'red',\n        backgroundSize: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 60,\n        marginBottom: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }), allPlayers.map(player => {\n      return /*#__PURE__*/React.createElement(Player, {\n        className: \"player-item\",\n        key: player.playerId,\n        id: player.playerId,\n        style: {\n          marginTop: 20\n        },\n        player: player,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 29\n        }\n      });\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: `lobby-btn ${this.props.userInLobby ? `lobby-exit-btn` : `lobby-join-btn`}`,\n      onClick: this.toggleReady,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default Lobby;","map":{"version":3,"sources":["/Users/Alessandro/Documents/GitHub/mobut-project/src/components/Lobby.js"],"names":["React","Component","Player","Page","OnsPage","LobbyToolbar","Redirect","COUNT_DOWN","Lobby","countDown","state","redirect","displayToast","message","props","updateToastMessage","debounceToast","openToast","toggleReady","userInLobby","addPlayerToLobbyFunc","user","removePlayerFromLobbyFunc","renderRedirect","pathname","componentWillUnmount","console","log","startCountDown","countDownInterval","decrementSeconds","setInterval","stopCountDown","addPlayerToNewGame","setState","clearInterval","componentDidUpdate","prevProps","allPlayers","length","render","signOut","backgroundColor","backgroundSize","marginTop","marginBottom","map","player","playerId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Lobby.css';\nimport Player from './Player.js';\nimport { Page as OnsPage } from 'react-onsenui';\nimport LobbyToolbar from './LobbyToolbar'\nimport { Redirect } from 'react-router-dom';\n\n\n\n\nconst COUNT_DOWN = 10;\nclass Lobby extends Component {\n    countDown = COUNT_DOWN;\n    countDownInterval;\n\n    state = {\n        redirect: false,\n    }\n\n    componentWillUnmount () {\n        // this.stopCountDown();\n        console.log('Stopped countdown in componentWillUnmount');\n    }\n\n    startCountDown() {\n        console.log('Starting the countdown...', this.countDown);\n        if (this.countDownInterval) { // restart counter if intervall is already active and gets started again\n            this.countDown = COUNT_DOWN;\n        } else {\n            const decrementSeconds = 5;\n            this.countDownInterval = setInterval(() => {\n                console.log('counting down...', this.countDown);\n                if (this.countDown <= 0) {\n                    this.stopCountDown();\n                    this.props.addPlayerToNewGame(this.props.user, ()=>{\n                        // this.setState({\n                        //     redirect: true,\n                        // });\n                    });\n                    this.setState({\n                        redirect: true,\n                    });\n                    this.displayToast(\"Game is starting!\");\n                } else {\n                    this.displayToast(this.countDown + \" seconds to start of the game\");\n                }\n                this.countDown = this.countDown - decrementSeconds;\n            }, decrementSeconds * 1000);\n        }\n    }\n\n    stopCountDown() {\n        if (this.countDownInterval) {\n            // stop the countdown if too few players\n            clearInterval(this.countDownInterval);\n            this.countDownInterval = null;\n            this.countDown = COUNT_DOWN;\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        //console.log('this.state.allPlayers :>> ', this.props.allPlayers);\n\n\n        if (prevProps.allPlayers.length !== this.props.allPlayers.length) { // number of players in the lobby changed\n            if (this.props.allPlayers.length >= 2 && this.props.userInLobby) {\n                console.log('2 players or more');\n                this.startCountDown();\n            } else {\n                this.stopCountDown();\n            }\n        }\n    }\n\n    displayToast = (message) => {\n        this.props.updateToastMessage(message);\n        if (!(this.props.debounceToast)) {\n            this.props.openToast();\n        }\n    };\n\n    toggleReady = () => {\n\n        if (!this.props.userInLobby) {\n            // console.log('this.props.userInLobby :>> ', this.props.userInLobby);\n            this.props.addPlayerToLobbyFunc(this.props.user);\n            this.displayToast(\"You joined the current game session\");\n        } else {\n            // console.log('this.props.userInLobby :>> ', this.props.userInLobby);\n            this.props.removePlayerFromLobbyFunc(this.props.user);\n            this.displayToast(\"You exited the current game session\");\n        }\n    };\n\n    renderRedirect = () => {\n        if (this.state.redirect) {\n            return <Redirect push to={{\n                pathname: '/map',\n                state: {\n\n                }\n            }} />\n        } else {\n            return <React.Fragment />\n        }\n    };\n\n    render() {\n\n        const allPlayers = this.props.allPlayers;\n        return (\n            <React.Fragment>\n                {this.renderRedirect()}\n                <OnsPage\n                    className={'lobby-component'}\n                    renderToolbar={() => {\n                        return (\n                            <LobbyToolbar\n                                title={'Lobby'}\n                                user={this.props.user}\n                                signOut={this.props.signOut}\n                            />)\n                    }}\n                    style={{\n                        backgroundColor: 'red',\n                        backgroundSize: 0,\n\n                    }}\n                >\n                    <div\n                        style={{\n                            marginTop: 60,\n                            marginBottom: 20\n                        }}>\n\n                    </div>\n                    {allPlayers.map((player) => {\n\n                        return (\n                            <Player\n                                className=\"player-item\"\n                                key={player.playerId}\n                                id={player.playerId}\n                                style={{\n                                    marginTop: 20,\n\n                                }}\n                                player={player} />)\n                    })}\n                    <div>\n                        <button\n                            className={`lobby-btn ${(this.props.userInLobby) ? `lobby-exit-btn` : `lobby-join-btn`}`}\n                            onClick={this.toggleReady}\n                        />\n                    </div>\n                </OnsPage>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Lobby;\n\n\n\n"]},"metadata":{},"sourceType":"module"}