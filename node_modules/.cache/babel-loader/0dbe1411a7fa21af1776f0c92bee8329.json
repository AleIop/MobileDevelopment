{"ast":null,"code":"export default function mixColors(c1,c2,t){var reRgb=/rgb\\(\\s*([0-9]+\\.?[0-9]*)\\s*,\\s*([0-9]+\\.?[0-9]*)\\s*,\\s*([0-9]+\\.?[0-9]*)\\s*\\)/i;var reHsl=/hsl\\(\\s*([0-9]+\\.?[0-9]*)\\s*,\\s*([0-9]+\\.?[0-9]*)\\%\\s*,\\s*([0-9]+\\.?[0-9]*)\\%\\s*\\)/i;var matchRgb1=reRgb.exec(c1);var matchRgb2=reRgb.exec(c2);var matchRgb=matchRgb1&&matchRgb2;var matchHsl1=reHsl.exec(c1);var matchHsl2=reHsl.exec(c2);var matchHsl=matchHsl1&&matchHsl2;if(!matchRgb&&!matchHsl)return undefined;var match1=matchRgb1?matchRgb1:matchHsl1;var match2=matchRgb2?matchRgb2:matchHsl2;var a=Math.round((1-t)*match1[1]+t*match2[1]);var b=Math.round((1-t)*match1[2]+t*match2[2]);var c=Math.round((1-t)*match1[3]+t*match2[3]);return(matchRgb?'rgb':'hsl')+'('+a+','+b+(matchHsl?'%,':',')+c+(matchHsl?'%)':')');}","map":{"version":3,"sources":["/Users/Alessandro/Documents/GitHub/mobut-project/src/utils.js"],"names":["mixColors","c1","c2","t","reRgb","reHsl","matchRgb1","exec","matchRgb2","matchRgb","matchHsl1","matchHsl2","matchHsl","undefined","match1","match2","a","Math","round","b","c"],"mappings":"AAAA,cAAe,SAASA,CAAAA,SAAT,CAAmBC,EAAnB,CAAuBC,EAAvB,CAA2BC,CAA3B,CAA8B,CAC3C,GAAIC,CAAAA,KAAK,CAAG,iFAAZ,CACA,GAAIC,CAAAA,KAAK,CAAG,qFAAZ,CACA,GAAIC,CAAAA,SAAS,CAAGF,KAAK,CAACG,IAAN,CAAWN,EAAX,CAAhB,CACA,GAAIO,CAAAA,SAAS,CAAGJ,KAAK,CAACG,IAAN,CAAWL,EAAX,CAAhB,CACA,GAAIO,CAAAA,QAAQ,CAAGH,SAAS,EAAIE,SAA5B,CACA,GAAIE,CAAAA,SAAS,CAAGL,KAAK,CAACE,IAAN,CAAWN,EAAX,CAAhB,CACA,GAAIU,CAAAA,SAAS,CAAGN,KAAK,CAACE,IAAN,CAAWL,EAAX,CAAhB,CACA,GAAIU,CAAAA,QAAQ,CAAGF,SAAS,EAAIC,SAA5B,CAEA,GAAI,CAACF,QAAD,EAAa,CAACG,QAAlB,CACE,MAAOC,CAAAA,SAAP,CAEF,GAAIC,CAAAA,MAAM,CAAGR,SAAS,CAAGA,SAAH,CAAeI,SAArC,CACA,GAAIK,CAAAA,MAAM,CAAGP,SAAS,CAAGA,SAAH,CAAeG,SAArC,CAEA,GAAIK,CAAAA,CAAC,CAAGC,IAAI,CAACC,KAAL,CAAW,CAAC,EAAEf,CAAH,EAAMW,MAAM,CAAC,CAAD,CAAZ,CAAkBX,CAAC,CAACY,MAAM,CAAC,CAAD,CAArC,CAAR,CACA,GAAII,CAAAA,CAAC,CAAGF,IAAI,CAACC,KAAL,CAAW,CAAC,EAAEf,CAAH,EAAMW,MAAM,CAAC,CAAD,CAAZ,CAAkBX,CAAC,CAACY,MAAM,CAAC,CAAD,CAArC,CAAR,CACA,GAAIK,CAAAA,CAAC,CAAGH,IAAI,CAACC,KAAL,CAAW,CAAC,EAAEf,CAAH,EAAMW,MAAM,CAAC,CAAD,CAAZ,CAAkBX,CAAC,CAACY,MAAM,CAAC,CAAD,CAArC,CAAR,CAEA,MAAO,CAACN,QAAQ,CAAG,KAAH,CAAW,KAApB,EAA6B,GAA7B,CAAmCO,CAAnC,CAAuC,GAAvC,CAA6CG,CAA7C,EAAkDP,QAAQ,CAAG,IAAH,CAAU,GAApE,EAA2EQ,CAA3E,EAA+ER,QAAQ,CAAG,IAAH,CAAU,GAAjG,CAAP,CACD","sourcesContent":["export default function mixColors(c1, c2, t) {\n  let reRgb = /rgb\\(\\s*([0-9]+\\.?[0-9]*)\\s*,\\s*([0-9]+\\.?[0-9]*)\\s*,\\s*([0-9]+\\.?[0-9]*)\\s*\\)/i;\n  let reHsl = /hsl\\(\\s*([0-9]+\\.?[0-9]*)\\s*,\\s*([0-9]+\\.?[0-9]*)\\%\\s*,\\s*([0-9]+\\.?[0-9]*)\\%\\s*\\)/i;\n  let matchRgb1 = reRgb.exec(c1);\n  let matchRgb2 = reRgb.exec(c2);\n  let matchRgb = matchRgb1 && matchRgb2;\n  let matchHsl1 = reHsl.exec(c1);\n  let matchHsl2 = reHsl.exec(c2);\n  let matchHsl = matchHsl1 && matchHsl2;\n\n  if (!matchRgb && !matchHsl)\n    return undefined;\n\n  let match1 = matchRgb1 ? matchRgb1 : matchHsl1;\n  let match2 = matchRgb2 ? matchRgb2 : matchHsl2;\n\n  let a = Math.round((1-t)*match1[1] + t*match2[1]);\n  let b = Math.round((1-t)*match1[2] + t*match2[2]);\n  let c = Math.round((1-t)*match1[3] + t*match2[3]);\n\n  return (matchRgb ? 'rgb' : 'hsl') + '(' + a + ',' + b + (matchHsl ? '%,' : ',') + c +(matchHsl ? '%)' : ')');\n}\n"]},"metadata":{},"sourceType":"module"}