{"version":3,"sources":["components/firebase-database.component.js","components/firebase-authentication.component.js","components/svgs/User.js","components/Player.js","components/LobbyToolbar.js","components/Lobby.js","components/HomeToolbar.js","components/Home.js","components/PlayerMarker.js","utils.js","components/MapView.js","App.js","serviceWorker.js","index.js"],"names":["addPlayerToLobby","player_object","player_id","playerId","firebase","collection","doc","set","playerName","imgURL","email","ready","catch","error","console","removePlayerFromLobby","delete","then","log","removePlayerFromGame","addPlayerToNewGame","callback","docRef","setPlayerReadyStatus","status","update","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","signIn","setPersistence","Auth","Persistence","LOCAL","provider","GoogleAuthProvider","signInWithPopup","code","message","signOut","User","className","this","props","version","xmlns","style","viewBox","stroke","fill","fillRule","d","Component","Player","hasImgURL","player","undefined","key","id","color","src","width","height","border","marginTop","LobbyToolbar","getProfileJSX","user","backgroundColor","backgroundSize","display","flexDirection","flexWrap","alignItems","justifyContent","fontSize","title","onClick","Lobby","countDown","state","redirect","displayToast","updateToastMessage","debounceToast","openToast","toggleReady","userInLobby","removePlayerFromLobbyFunc","addPlayerToLobbyFunc","renderRedirect","push","to","pathname","Fragment","stopCountDown","countDownInterval","setInterval","setState","clearInterval","prevProps","allPlayers","length","startCountDown","renderToolbar","marginBottom","map","HomeToolbar","Home","content","interval","PlayerMarker","targetLocation","location","tagTarget","huntingPlayer","playersInGame","endGame","loc","lat","coords","latitude","lng","longitude","panTo","err","google","sinY","Math","sin","PI","min","max","maps","Point","navigator","geolocation","watchPosition","updateLocation","bind","onErrorGettingLocation","enableHighAccuracy","timeout","maximumAge","publishMyLocation","distanceToTarget","name","position","icon","path","anchor","scale","strokeWeight","fillColor","proximityColor","fillOpacity","rotation","directionToTarget","SymbolPath","CIRCLE","label","text","fontWeight","pos","project","targetPos","atan2","y","x","getDistance","c1","c2","t","reRgb","reHsl","matchRgb1","exec","matchRgb2","matchRgb","matchHsl1","matchHsl2","matchHsl","match1","match2","round","mixColors","sqrt","React","MapView","myLocation","target","pubnub","publish","userLocation","channel","PubNubReact","publishKey","subscribeKey","init","setModal","window","onunload","onpopstate","subscribe","channels","withPresence","getMessage","msg","prevState","playerInGame","loaded","zoom","initialCenter","ref","element","marker","GoogleApiWrapper","App","playersInLobby","lobbyPropsUpdate","toast","open","modalIsOpen","authStateObserver","getUserProps","getUserIndex","list","i","uid","formatDisplayName","displayName","photoURL","firstName","getFirstName","slice","split","playerInLobby","setTimeout","clearState","setOpenModal","bool","unsubscribe","data","onSnapshot","querySnapshot","forEach","ListenToPlayersInGame","gamePropsUpdate","targetPlayer","floor","random","onAuthStateChanged","exact","render","updatePlayerReadyState","chasedByPlayer","isOpen","animation","animationOptions","duration","delay","timing","Boolean","hostname","match","ReactDOM","document","getElementById","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.bd1ed8eb.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBXCX1Bb5S3OeJSmPsGr9B2J6iS9LVs2pQ\",\n    authDomain: \"mobut-project.firebaseapp.com\",\n    databaseURL: \"https://mobut-project.firebaseio.com\",\n    projectId: \"mobut-project\",\n    storageBucket: \"mobut-project.appspot.com\",\n    messagingSenderId: \"685766846531\",\n    appId: \"1:685766846531:web:39b5f7b9d38e6c22fdccf6\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n// Listener for the players in the lobby\nlet lobbyListener;\n\n\n\nfunction addPlayerToLobby(player_object) {\n    let player_id = player_object.playerId;\n    // player_name.replace(/\\s/g, '_');\n    return firebase.firestore().collection('lobby').doc(player_id).set({\n        playerName: player_object.playerName,\n        playerId: player_object.playerId,\n        imgURL: player_object.imgURL,\n        email: player_object.email,\n        ready: false\n    })\n        .catch(function (error) {\n            console.error('Error adding a player to the lobby', error);\n        });\n}\n\nfunction stopListeningToLobby() {\n    if (lobbyListener !== undefined) {\n        lobbyListener();\n    }\n}\n\nfunction ListenToPlayersInLobby(callback) {\n    lobbyListener = firebase.firestore().collection(\"lobby\").onSnapshot(function (querySnapshot) {\n        var playersInLobby = [];\n        querySnapshot.forEach(function (doc) {\n            playersInLobby.push(doc.data());\n        });\n        callback(playersInLobby);\n    }, function onError(error) {\n        console.error(\"Error listening to lobby: \", error);\n    });\n}\n\nfunction ListenToPlayersInGame(callback) {\n    lobbyListener = firebase.firestore().collection(\"games\").onSnapshot(function (querySnapshot) {\n        var playersInGame = [];\n        querySnapshot.forEach(function (doc) {\n            playersInGame.push(doc.data());\n        });\n        callback(playersInGame);\n    }, function onError(error) {\n        console.error(\"Error listening to lobby: \", error);\n    });\n}\n\nasync function getPlayersInLobby() {\n    var playersInLobby = [];\n    await firebase.firestore().collection(\"lobby\").get().then(querySnapshot => {\n        querySnapshot.forEach(function (doc) {\n            playersInLobby.push(doc.data());\n        });\n    });\n    console.log('Players', playersInLobby);\n    return playersInLobby;\n}\n\nfunction getPlayersInGame(game_id) {\n    return firebase.firestore().collection(\"games\").doc(game_id).get();\n}\n\nfunction removePlayerFromLobby(player_object) {\n    let player_id = player_object.playerId;\n    firebase.firestore().collection(\"lobby\").doc(player_id).delete().then(function () {\n        console.log(\"Player succesfully removed from LOBBY!\");\n    }).catch(function (error) {\n        console.error(\"Error removing lobby: \", error);\n    });\n}\n\nfunction removePlayerFromGame(player_object) {\n    let player_id = player_object.playerId;\n    firebase.firestore().collection(\"games\").doc(player_id).delete().then(function () {\n        console.log(\"Player succesfully removed from GAME!\");\n    }).catch(function (error) {\n        console.error(\"Error removing game: \", error);\n    });\n}\n\n\nfunction removePlayersInLobby(playersInLobby) {\n    playersInLobby.forEach(function (player) {\n        removePlayerFromLobby(player.playerId);\n    });\n}\n\nfunction addPlayerToNewGame(player_object, callback) {\n    let player_id = player_object.playerId;\n    firebase.firestore().collection('games').doc(player_id).set({\n        playerName: player_object.playerName,\n        playerId: player_object.playerId,\n        imgURL: player_object.imgURL,\n        email: player_object.email,\n        ready: false\n    })\n        .then(function (docRef) {\n            removePlayerFromLobby(player_object);\n            callback();\n        })\n        .catch(function (error) {\n            console.error('Error adding players to new game', error);\n        });\n}\n\nfunction removeAllPlayersInGame(playersInLobby) {\n    playersInLobby.forEach(function (player) {\n        removePlayerFromGame(player.playerId);\n    });\n}\n\nfunction addPlayersToNewGame(playersInLobby) {\n    firebase.firestore().collection('games').add({\n        players: playersInLobby\n    })\n        .then(function (docRef) {\n            console.log(\"Successfully added players to newly created game with ID: \", docRef.id);\n            return playersInLobby;\n        })\n        .catch(function (error) {\n            console.error('Error adding players to new game', error);\n        });\n}\n\nfunction createNewGame() {\n    return getPlayersInLobby()\n        .then(function (lobby) {\n            console.log('lobby :', lobby);\n            var playersInLobby = [];\n            lobby.forEach(function (doc) {\n                playersInLobby.push(doc.data());\n            });\n            console.log(\"players in lobby:\", playersInLobby);\n            return playersInLobby;\n        })\n        .then(addPlayersToNewGame)\n        .then(removePlayersInLobby)\n        .catch(function (error) {\n            console.error(\"Error creating a new game:\", error);\n        });\n\n}\n\nfunction setPlayerReadyStatus(player_id, status) {\n    firebase.firestore()\n        .collection('lobby')\n        .doc(player_id)\n        .update({\n            ready: status\n        })\n        .catch((error) => {\n            console.error('Error setting the player ready status', error);\n        });\n\n}\n\nfunction createFakeLobby() {\n    addPlayerToLobby(\"DJ COW\", 'https://vignette.wikia.nocookie.net/pewdiepieminecraft/images/0/06/MushCow2.jpeg/revision/latest?cb=20190803151753');\n    addPlayerToLobby(\"Bengt\", 'https://vignette.wikia.nocookie.net/pewdiepieminecraft/images/e/e7/4C2C755B-FB01-4351-886E-077F5B03CF16.jpeg/revision/latest?cb=20190811175416');\n    addPlayerToLobby(\"Sven\", 'https://vignette.wikia.nocookie.net/pewdiepieminecraft/images/d/dd/Sven.png/revision/latest?cb=20191130204116');\n    addPlayerToLobby(\"Sven's BF\", 'https://vignette.wikia.nocookie.net/pewdiepieminecraft/images/b/ba/SvenYellow.jpeg/revision/latest?cb=20190814205003');\n    addPlayerToLobby(\"Water Sheep\", 'https://vignette.wikia.nocookie.net/pewdiepieminecraft/images/d/db/Water_Sheep%27s_Return.png/revision/latest?cb=20191129235246');\n    addPlayerToLobby(\"Ulla Britta\", 'https://vignette.wikia.nocookie.net/pewdiepieminecraft/images/6/6d/BCBBA22C-0452-4B35-8C67-52F8345D734F.jpeg/revision/latest?cb=20190805181119');\n    addPlayerToLobby(\"Flip Flop\", 'https://vignette.wikia.nocookie.net/pewdiepieminecraft/images/c/c7/Flip_Flop.jpeg/revision/latest?cb=20190922230718');\n}\n\n// TODO: any functions to handle the end of a game?\n\nexport {\n    addPlayerToNewGame,\n    createNewGame,\n    ListenToPlayersInGame,\n    addPlayerToLobby,\n    createFakeLobby,\n    removePlayerFromLobby,\n    ListenToPlayersInLobby,\n    getPlayersInLobby,\n    setPlayerReadyStatus,\n    stopListeningToLobby,\n    removePlayerFromGame\n};\n","import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nfunction signIn() {\n    // Sign into Firebase using popup auth & Google as the identity provider.\n    \n    return firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL).then(function() {\n        var provider = new firebase.auth.GoogleAuthProvider();\n        // In memory persistence will be applied to the signed in Google user\n        // even though the persistence was set to 'none' and a page redirect\n        // occurred.\n        return firebase.auth().signInWithPopup(provider);\n    }).catch(function(error) {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        });\n}\n\n// Signs-out of Friendly Chat.\nfunction signOut() {\n    // Sign out of Firebase.\n    firebase.auth().signOut();\n}\n\n// Initiate Firebase Auth.\nfunction initFirebaseAuth(authStateObserver) {\n    // Listen to auth state changes.\n\tfirebase.auth().onAuthStateChanged(authStateObserver);\n}\n\n// Triggers when the auth state change for instance when the user signs-in or signs-out.\n\n\nexport {\n\tsignIn,\n    signOut,\n\tinitFirebaseAuth\n};","import React, {Component} from 'react';\n\nclass User extends Component{\n\n    render() {\n\n        return (\n            <svg\n                className={this.props.className}\n                version=\"1.1\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                style={this.props.style}\n                viewBox=\"0, 0, 400, 441.05960264900665\"\n            >\n                <g>\n                    <path\n                        className=\"comet-path1-svg\"\n                        stroke=\"none\"\n                        fill=\"currentColor\"\n                        fillRule=\"evenodd\"\n                        d=\"M190.800 20.834 C 183.891 21.362,173.022 23.615,167.400 25.687 C 165.640 26.335,163.390 27.143,162.400 27.481 C 155.751 29.756,140.970 38.663,134.800 44.114 C 115.033 61.576,104.610 81.026,100.417 108.274 C 99.235 115.956,100.056 133.256,101.981 141.200 C 106.833 161.230,117.725 180.606,130.469 191.877 C 131.416 192.715,132.913 194.059,133.795 194.864 C 145.296 205.359,164.037 214.639,179.776 217.632 C 188.830 219.354,204.879 219.996,211.200 218.889 C 212.630 218.639,215.510 218.141,217.600 217.784 C 256.734 211.099,289.618 178.574,297.053 139.200 C 298.837 129.755,299.441 116.019,298.390 108.806 C 297.510 102.769,296.718 98.534,295.921 95.600 C 295.473 93.950,294.968 92.060,294.798 91.400 C 287.808 64.174,262.891 37.488,234.545 26.869 C 220.435 21.583,206.386 19.645,190.800 20.834 M209.400 46.028 C 270.781 55.230,295.604 129.096,251.992 172.769 C 240.825 183.952,229.005 190.023,211.400 193.618 C 206.035 194.714,192.421 194.710,186.975 193.612 C 139.853 184.106,113.621 138.939,129.269 94.251 C 140.466 62.274,175.825 40.995,209.400 46.028 M122.600 244.795 C 118.887 245.093,116.335 245.416,110.200 246.365 C 67.951 252.899,31.675 291.233,26.013 335.328 C 24.763 345.057,24.777 385.035,26.032 389.825 C 29.167 401.797,35.493 409.656,46.262 414.958 C 49.941 416.770,50.994 417.143,55.000 418.054 C 59.253 419.021,340.763 418.850,344.800 417.877 C 357.761 414.755,368.216 404.804,372.288 391.715 L 373.382 388.200 373.521 366.400 C 373.665 343.911,373.454 338.850,372.026 330.492 C 366.021 295.344,339.398 263.402,306.071 251.359 C 304.020 250.618,302.196 249.921,302.017 249.811 C 296.975 246.695,268.488 243.417,261.000 245.092 C 259.900 245.338,257.830 245.749,256.400 246.006 C 253.442 246.536,251.459 247.066,244.400 249.208 C 223.494 255.554,217.157 256.592,199.400 256.577 C 185.424 256.566,175.206 255.358,165.600 252.581 C 164.390 252.231,162.860 251.803,162.200 251.629 C 161.540 251.456,158.570 250.557,155.600 249.632 C 152.630 248.706,149.388 247.701,148.395 247.398 C 140.939 245.119,131.033 244.120,122.600 244.795 M133.546 269.802 C 136.602 270.100,140.333 271.006,148.354 273.399 C 163.011 277.772,169.815 279.313,180.000 280.566 C 194.996 282.411,213.616 281.880,228.000 279.197 C 232.769 278.307,240.022 276.444,249.800 273.598 C 262.588 269.875,262.422 269.907,269.462 269.699 C 276.313 269.496,281.284 270.042,287.600 271.691 C 289.250 272.122,291.140 272.612,291.800 272.781 C 320.158 280.034,343.356 307.010,348.057 338.200 C 348.833 343.347,348.841 383.518,348.067 385.706 C 347.103 388.430,344.682 391.011,341.726 392.466 L 339.017 393.800 199.408 393.800 L 59.800 393.800 57.600 392.764 C 50.329 389.340,49.638 386.990,49.610 365.600 C 49.576 338.993,51.280 328.348,57.776 314.603 C 67.133 294.803,87.123 277.816,107.000 272.775 C 117.314 270.160,126.016 268.912,130.200 269.450 C 130.640 269.507,132.146 269.665,133.546 269.802 \"\n                    />\n                </g>\n            </svg>\n        );\n    }\n}\n\nUser.propTypes = {\n};\n\nexport default User;\n\n\n\n","import React, {Component} from 'react';\nimport './Player.css';\nimport UserSVG from './svgs/User.js'\n\n\n\nclass Player extends Component{\n\n    render() {\n        const hasImgURL = (this.props.player.imgURL !== \"\" && this.props.player.imgURL !== undefined && this.props.player.imgURL !== null);\n        return (\n            <div\n                className={`player-component ${this.props.className} ${'player-component-show'}`}\n                key={this.props.id}\n                style={{...this.props.style, color: 'white'}}\n            >\n                <div className={'content'}>\n                    {(hasImgURL) ?\n                        <img\n                            className={'player-img'}\n                            src={`${this.props.player.imgURL}`}\n                            style={{\n                                width: 100,\n                                height: 100,\n                            }}\n                        />:\n                        <UserSVG\n                            className ={'player-img'}\n                            style={{\n                                width: 96,\n                                height: 96,\n                                border: '2px solid white'\n                            }}\n                        />\n                    }\n                    <div\n                        style={{\n                            marginTop: 5,\n                        }}\n                    >\n                        {this.props.player.playerName}\n                    </div>\n                </div>\n\n\n            </div>\n        );\n    }\n}\n\nexport default Player;\n","import React, {Component} from 'react';\nimport 'onsenui/css/onsenui.css';\nimport 'onsenui/css/onsen-css-components.css';\nimport {Toolbar} from 'react-onsenui';\nimport './OnsToolbar.css';\nimport UserSVG from './svgs/User.js'\n\n\nclass LobbyToolbar extends Component {\n\n    getProfileJSX = () => {\n        const hasImgURL = (this.props.user.imgURL !== \"\" && this.props.user.imgURL !== undefined && this.props.user.imgURL !== null);\n        const style = {\n            width: 50,\n            height: 50,\n            color: 'white',\n        };\n\n        if(hasImgURL){\n            return (\n                <div\n                    style={style}\n                >\n                    <img\n                        src={this.props.user.imgURL}\n                        className={'toolbar-profile-img'}\n                    />\n                </div>\n            )\n        }else{\n            return (\n                <div\n                    style={style}\n                >\n                    <UserSVG\n                        className={'toolbar-profile-img'}\n                    />\n                </div>\n\n            )\n        }\n\n    };\n\n    render() {\n        return(\n            <Toolbar\n                style={{\n                    backgroundColor: '#c00',\n                    height: 104,\n                    backgroundSize: 0,\n                }}\n            >\n                <div className=\"left\"\n                     style={{\n                         // borderWidth: 2,\n                         // borderStyle: 'solid',\n                         // borderColor: 'hotpink',\n                         display: 'flex',\n                         flexDirection: 'row',\n                         flexWrap: 'wrap',\n                         alignItems: 'center',\n                         justifyContent: 'space-between',\n                         color: 'white',\n                     }}\n\n                >\n                    <section\n                        className={'left-left'}\n                    >\n                        {this.getProfileJSX()}\n                        <div>\n                            {this.props.user.playerName}\n                        </div>\n                    </section>\n                </div>\n\n                <div className=\"center\"\n                     style={{\n                         // borderWidth: 2,\n                         // borderStyle: 'solid',\n                         // borderColor: 'black',\n                         display: 'flex',\n                         flexDirection: 'row',\n                         flexWrap: 'wrap',\n                         alignItems: 'center',\n                         justifyContent: 'center',\n                         color: 'white',\n                         fontSize: 40\n                     }}\n                >\n                    {this.props.title}\n                </div>\n\n                <div className=\"right\">\n                    <button\n                        className={'sign-out-btn'}\n                        onClick={this.props.signOut}\n                    >\n                        Sign out\n                    </button>\n                </div>\n            </Toolbar>\n        )\n    }\n}\n\nexport default LobbyToolbar;\n","import React, { Component } from 'react';\nimport './Lobby.css';\nimport Player from './Player.js';\nimport { Page as OnsPage } from 'react-onsenui';\nimport LobbyToolbar from './LobbyToolbar'\nimport { Redirect } from 'react-router-dom';\n\n\n\n\nconst COUNT_DOWN = 5;\nclass Lobby extends Component {\n    countDown = COUNT_DOWN;\n    countDownInterval;\n\n    state = {\n        redirect: false,\n    }\n\n    componentWillUnmount () {\n        this.stopCountDown();\n        console.log('Stopped countdown in componentWillUnmount');\n    }\n\n    startCountDown() {\n        console.log('Starting the countdown...', this.countDown);\n        if (this.countDownInterval) { // restart counter if intervall is already active and gets started again\n            this.countDown = COUNT_DOWN;\n        } else {\n            this.countDownInterval = setInterval(() => {\n                console.log('counting down...', this.countDown);\n                if (this.countDown <= 0) {\n                    this.stopCountDown();\n                    this.props.addPlayerToNewGame(this.props.user, ()=>{\n                        this.setState({\n                            redirect: true,\n                        })\n                    });\n                    this.displayToast(\"Game is starting!\");\n                } else {\n                    this.displayToast(this.countDown + \" seconds to start of the game\");\n                }\n                this.countDown = this.countDown - 5;\n            }, 5000);\n        }\n    }\n\n    stopCountDown() {\n        if (this.countDownInterval) {\n            // stop the countdown if too few players\n            clearInterval(this.countDownInterval);\n            this.countDownInterval = null;\n            this.countDown = COUNT_DOWN;\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        //console.log('this.state.allPlayers :>> ', this.props.allPlayers);\n\n\n        if (prevProps.allPlayers.length !== this.props.allPlayers.length) { // number of players in the lobby changed\n            if (this.props.allPlayers.length >= 2 && this.props.userInLobby) {\n                console.log('2 players or more');\n                this.startCountDown();\n            } else {\n                this.stopCountDown();\n            }\n        }\n    }\n\n    displayToast = (message) => {\n        this.props.updateToastMessage(message);\n        if (!(this.props.debounceToast)) {\n            this.props.openToast();\n        }\n    };\n\n    toggleReady = () => {\n\n        if (!this.props.userInLobby) {\n            // console.log('this.props.userInLobby :>> ', this.props.userInLobby);\n            this.props.addPlayerToLobbyFunc(this.props.user);\n            this.displayToast(\"You joined the current game session\");\n        } else {\n            // console.log('this.props.userInLobby :>> ', this.props.userInLobby);\n            this.props.removePlayerFromLobbyFunc(this.props.user);\n            this.displayToast(\"You exited the current game session\");\n        }\n    };\n\n    renderRedirect = () => {\n        if (this.state.redirect) {\n            return <Redirect push to={{\n                pathname: '/map',\n                state: {\n\n                }\n            }} />\n        } else {\n            return <React.Fragment />\n        }\n    };\n\n    render() {\n\n        const allPlayers = this.props.allPlayers;\n        return (\n            <React.Fragment>\n                {this.renderRedirect()}\n                <OnsPage\n                    className={'lobby-component'}\n                    renderToolbar={() => {\n                        return (\n                            <LobbyToolbar\n                                title={'Lobby'}\n                                user={this.props.user}\n                                signOut={this.props.signOut}\n                            />)\n                    }}\n                    style={{\n                        backgroundColor: 'red',\n                        backgroundSize: 0,\n\n                    }}\n                >\n                    <div\n                        style={{\n                            marginTop: 60,\n                            marginBottom: 20\n                        }}>\n\n                    </div>\n                    {allPlayers.map((player) => {\n\n                        return (\n                            <Player\n                                className=\"player-item\"\n                                key={player.playerId}\n                                id={player.playerId}\n                                style={{\n                                    marginTop: 20,\n\n                                }}\n                                player={player} />)\n                    })}\n                    <div>\n                        <button\n                            className={`lobby-btn ${(this.props.userInLobby) ? `lobby-exit-btn` : `lobby-join-btn`}`}\n                            onClick={this.toggleReady}\n                        />\n                    </div>\n                </OnsPage>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Lobby;\n\n\n\n","import React, {Component} from 'react';\nimport 'onsenui/css/onsenui.css';\nimport 'onsenui/css/onsen-css-components.css';\nimport {Toolbar} from 'react-onsenui';\nimport './OnsToolbar.css';\n\n\nclass HomeToolbar extends Component {\n\n    render() {\n        return(\n            <Toolbar\n                style={{\n                    backgroundColor: '#c00',\n                    height: 104,\n                    backgroundSize: 0,\n                }}\n            >\n                <div className=\"center\"\n                     style={{\n                         // borderWidth: 2,\n                         // borderStyle: 'solid',\n                         // borderColor: 'black',\n                         display: 'flex',\n                         flexDirection: 'row',\n                         flexWrap: 'wrap',\n                         alignItems: 'center',\n                         justifyContent: 'center',\n                         color: 'white',\n                         fontSize: 40\n                     }}\n                >\n                    {this.props.title}\n                </div>\n                <div className=\"right\">\n                    <button\n                        className={'sign-out-btn'}\n                        onClick={this.props.signIn}\n                    >\n                        Sign in\n                    </button>\n                </div>\n            </Toolbar>\n        )\n    }\n}\n\nexport default HomeToolbar;\n","import React, {Component} from 'react';\nimport './Home.css';\nimport {Page as OnsPage} from 'react-onsenui';\nimport HomeToolbar from './HomeToolbar'\n\n\nclass Home extends Component{\n\n\n    render() {\n        return (\n            <OnsPage\n                className={'home-component'}\n                renderToolbar={() => {\n                    return (\n                        <HomeToolbar\n                            signIn = {this.props.signIn}\n                            title={'Home'}\n                        />)\n                }}\n                style={{\n                    backgroundColor: 'red',\n                    backgroundSize: 0,\n                }}\n            >\n                {\n                    this.props.content\n                }\n            </OnsPage>\n        );\n    }\n}\n\nexport default Home;\n\n\n\n","import React from 'react';\nimport { Marker } from 'google-maps-react';\nimport getDistance from 'geolib/es/getDistance';\nimport mixColors from '../utils';\nimport './MapView.css';\n\nconst COLD_COLOR = 'hsl(60,100%,100%)';\nconst WARM_COLOR = 'hsl(0,100%,50%)';\nconst COLD_DISTANCE = 5000;\nconst WARM_DISTANCE = 20;\nvar interval;\n\nexport class PlayerMarker extends React.Component {\n  props = {\n    targetLocation: {}\n  };\n\n  state = {\n    location: {}\n  };\n\n  updateLocation(loc) {\n    this.setState({\n      location: {\n        lat: loc.coords.latitude,\n        lng: loc.coords.longitude\n      }\n    });\n    this.props.map.panTo({\n      lat: loc.coords.latitude,\n      lng: loc.coords.longitude\n    });\n\n    console.log('PlayerMarker state: ', this.state,\n      '\\nPlayerMarker props: ', this.props);\n    //this.onLocationUpdate(loc);\n  }\n\n  onErrorGettingLocation(err) {\n    console.log('Unable to get location', err);\n  }\n\n  project(loc) {\n    let google = this.props.google;\n\n    let sinY = Math.sin(loc.lat * Math.PI / 180);\n    sinY = Math.min(Math.max(sinY, -0.9999), 0.9999);\n\n    return new google.maps.Point(\n      256 * (0.5 + loc.lng / 360),\n      256 * (0.5 - Math.log((1 + sinY) / (1 - sinY)) / (4 * Math.PI))\n    );\n  }\n\n  get directionToTarget() {\n    let pos = this.project(this.state.location);\n    let targetPos = this.project(this.props.targetLocation);\n    return Math.atan2(targetPos.y - pos.y, targetPos.x - pos.x) * 180 / Math.PI;\n  }\n\n  get distanceToTarget() {\n    return getDistance({\n      latitude: '' + this.state.location.lat,\n      longitude: '' + this.state.location.lng\n    }, {\n      latitude: '' + this.props.targetLocation.lat,\n      longitude: '' + this.props.targetLocation.lng\n    });\n  }\n\n  get proximityColor() {\n    let d = Math.max(Math.min(this.distanceToTarget, COLD_DISTANCE), WARM_DISTANCE);\n    let t = Math.sqrt((d - WARM_DISTANCE) / (COLD_DISTANCE - WARM_DISTANCE));\n    return mixColors(WARM_COLOR, COLD_COLOR, t);\n  }\n\n  componentDidMount() {\n    let gl = navigator.geolocation;\n    const glOptions = {\n      enableHighAccuracy: true,\n      timeout: 15000,\n      maximumAge: 0\n    };\n    gl.watchPosition(\n      this.updateLocation.bind(this),\n      this.onErrorGettingLocation.bind(this),\n      glOptions\n    );\n\n    interval = setInterval(() => {\n      if (this.state.location.lat) this.props.publishMyLocation(this.state.location);\n      console.log('My location is: ', this.state.location);\n    }, 10000);\n  }\n\n  componentWillUnmount() {\n    console.log(\"PlayerMarker.js Component did unmount\");\n    clearInterval(interval);\n  }\n\n  tagTarget = () => {\n    this.props.removePlayerFromGame(this.props.huntingPlayer);\n    if (this.props.playersInGame.length === 2) {\n      this.props.displayToast(\"Congratulation! You Won!\");\n      this.props.endGame();\n    }\n  }\n\n  render() {\n    let google = this.props.google;\n    if (this.distanceToTarget > WARM_DISTANCE)\n      return (\n        <Marker {...this.props}\n          name={'Player'}\n          position={this.state.location}\n          icon={{\n            path: 'M42,21.002L16.043,0v11.55H0v18.9h16.043V42L42,21.002L42,21.002z',\n            anchor: new google.maps.Point(21, 21),\n            scale: 1.5,\n            strokeWeight: 4,\n            fillColor: this.proximityColor,\n            fillOpacity: 1,\n            rotation: this.directionToTarget\n          }}\n        />\n      );\n    else\n      return (\n        <Marker {...this.props}\n          name={'Player'}\n          position={this.state.location}\n          icon={{\n            path: google.maps.SymbolPath.CIRCLE,\n            scale: 50,\n            strokeWeight: 6,\n            fillColor: this.proximityColor,\n            fillOpacity: 1,\n          }}\n          label={{\n            text: 'TAG',\n            fontSize: '36px',\n            fontWeight: 'bold'\n          }}\n          onClick={this.tagTarget}\n        />\n      );\n  }\n}\n\nexport default PlayerMarker;\n","export default function mixColors(c1, c2, t) {\n  let reRgb = /rgb\\(\\s*([0-9]+\\.?[0-9]*)\\s*,\\s*([0-9]+\\.?[0-9]*)\\s*,\\s*([0-9]+\\.?[0-9]*)\\s*\\)/i;\n  let reHsl = /hsl\\(\\s*([0-9]+\\.?[0-9]*)\\s*,\\s*([0-9]+\\.?[0-9]*)\\%\\s*,\\s*([0-9]+\\.?[0-9]*)\\%\\s*\\)/i;\n  let matchRgb1 = reRgb.exec(c1);\n  let matchRgb2 = reRgb.exec(c2);\n  let matchRgb = matchRgb1 && matchRgb2;\n  let matchHsl1 = reHsl.exec(c1);\n  let matchHsl2 = reHsl.exec(c2);\n  let matchHsl = matchHsl1 && matchHsl2;\n\n  if (!matchRgb && !matchHsl)\n    return undefined;\n\n  let match1 = matchRgb1 ? matchRgb1 : matchHsl1;\n  let match2 = matchRgb2 ? matchRgb2 : matchHsl2;\n\n  let a = Math.round((1-t)*match1[1] + t*match2[1]);\n  let b = Math.round((1-t)*match1[2] + t*match2[2]);\n  let c = Math.round((1-t)*match1[3] + t*match2[3]);\n\n  return (matchRgb ? 'rgb' : 'hsl') + '(' + a + ',' + b + (matchHsl ? '%,' : ',') + c +(matchHsl ? '%)' : ')');\n}\n","import React from 'react';\nimport { Map, Marker, InfoWindow, GoogleApiWrapper } from 'google-maps-react';\nimport PlayerMarker from './PlayerMarker.js';\nimport './MapView.css';\nimport PubNubReact from 'pubnub-react';\nimport { Redirect } from 'react-router-dom';\n\n\nexport class MapView extends React.Component {\n\n  state = {\n    myLocation: {\n      lat: 0,\n      lng: 0\n    },\n    targetLocation: {\n      lat: 0,\n      lng: 0\n    },\n    redirect: false,\n  }\n  target = null;\n\n  constructor(props) {\n    super(props);\n    this.pubnub = new PubNubReact({\n      publishKey: 'pub-c-c72ffc95-6f42-4bdf-8a95-04015fd20d32',\n      subscribeKey: 'sub-c-ea26bb44-92b6-11ea-8dc6-429c98eb9bb1'\n    });\n    this.pubnub.init(this);\n  }\n\n  componentDidMount(){\n    //ALE'S BRILLIANT IDEA\n    if (this.state.targetLocation.lat === 0 && this.state.targetLocation.lng === 0)\n        this.props.setModal(true);\n      else \n        this.props.setModal(false);\n\n    window.onunload = () => {\n      this.props.removePlayerFromGame(this.state.user);\n      //TODO redirect to another component\n      //enable user to get back in the game\n    };\n    window.onpopstate = () => {\n        this.props.removePlayerFromGame(this.state.user);\n    };\n\n    this.pubnub.subscribe({\n        channels: ['positionChannel'],\n        withPresence: true\n    });\n  \n    // Listening to 'positionChannel'\n    this.pubnub.getMessage('positionChannel', (msg) => {\n        console.log('msg :>> ',\n            msg,\n            '\\nstate :>> ',\n            this.state,\n            '\\nProps: ',\n            this.props);\n        if (this.props.huntingPlayer.playerId === msg.message.user.playerId) {\n            this.setState({\n                targetLocation: msg.message.userLocation,\n            });\n        }\n    });\n  }\n\n  publishMyLocation = (loc) => {\n    //console.log('this.props :>> ', this.state);\n    //console.log('loc :>> ', loc);\n    this.pubnub.publish({\n      message: {\n        user: this.props.user,\n        userLocation: loc\n      },\n      channel: 'positionChannel'\n    });\n  }\n\n  displayToast = (message) => {\n    this.props.updateToastMessage(message);\n    if (!(this.props.debounceToast)) {\n      this.props.openToast();\n    }\n  };\n\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.targetLocation.lat !== prevState.targetLocation.lat || this.state.targetLocation.lng !== prevState.targetLocation.lng) {\n      if (this.state.targetLocation.lat === 0 && this.state.targetLocation.lng === 0)\n        this.props.setModal(true);\n      else \n        this.props.setModal(false);\n    }\n\n    if (!this.props.playerInGame) {\n      this.displayToast(\"You lost!!!\");\n      this.endGame();\n    }\n    if (prevProps.huntingPlayer !== this.props.huntingPlayer) console.log('Current props: ', this.props);\n  }\n\n  componentWillUnmount() {\n    this.props.removePlayerFromGame(this.props.user);\n  }\n\n  endGame = () =>{\n    this.setState({ redirect: true });\n  }\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect push to={{\n        pathname: '/lobby',\n        state: {\n\n        }\n      }} />\n    } else {\n      return <React.Fragment />\n    }\n  };\n\n\n  render() {\n    if (!this.props.loaded)\n      return (\n        <div>Loading...</div>\n      );\n\n    return (\n      <React.Fragment>\n        {this.renderRedirect()}\n        <Map\n          google={this.props.google}\n          zoom={14}\n          initialCenter={{\n            lat: 59.329323,\n            lng: 18.068581\n          }}\n        >\n          <Marker {...this.props}\n            ref={element => {\n              if (element)\n                this.target = element.marker;\n            }}\n            name={'Target'}\n            position={this.state.targetLocation}\n          />\n          <PlayerMarker\n            targetLocation={this.state.targetLocation}\n            publishMyLocation={this.publishMyLocation}\n            endGame={this.endGame}\n            displayToast={this.displayToast}\n          />\n        </Map>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: ('AIzaSyD-HO6pALPiY9nrniME6UmHy3P3YUCv2Eg')\n})(MapView)\n","import React, { Component } from 'react';\nimport './App.css';\nimport {\n    createFakeLobby,\n    setPlayerReadyStatus,\n    ListenToPlayersInLobby,\n    addPlayerToLobby,\n    removePlayerFromLobby,\n    removePlayerFromGame,\n    addPlayerToNewGame,\n    getPlayersInLobby,\n    createNewGame,\n    stopListeningToLobby,\n    ListenToPlayersInGame,\n} from \"./components/firebase-database.component\";\nimport {\n    signIn,\n    initFirebaseAuth,\n    signOut\n} from \"./components/firebase-authentication.component\";\nimport Lobby from './components/Lobby.js';\nimport Home from './components/Home.js';\nimport MapView from './components/MapView.js';\nimport { Toast, Modal } from 'react-onsenui';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\n\n\nclass App extends Component {\n\n\n\n    componentWillUnmount() {\n        this.pubnub.unsubscribe({\n            channels: ['positionChannel']\n        });\n    }\n\n\n    state = {\n        playersInGame: [],\n        playersInLobby: [],\n        lobbyPropsUpdate: false,\n        toast: {\n            open: false,\n            timeout: 2500,\n            message: ''\n        },\n        myLocation: {\n            lat: 0,\n            lng: 0\n        },\n        targetLocation: {\n            lat: 0,\n            lng: 0\n        },\n        user: {},\n        redirect: false,\n        path: \"/\",\n        huntingPlayer: null,\n        modalIsOpen: false\n    };\n\n    authStateObserver = (user) => {\n        if (user) { // User is signed in!,\n            this.setState({\n                user: this.getUserProps(user),\n                redirect: true,\n                path: '/lobby'\n            });\n            // console.log({ user }, ' signed in');\n        } else { // User is signed out!\n            this.setState({\n                user: {},\n            });\n            // console.log({ user }, ' signed out');\n        }\n    };\n\n    componentDidMount() {\n        this.clearState();\n\n        ListenToPlayersInLobby((data) => {\n            this.setState({\n                playersInLobby: data,\n                lobbyPropsUpdate: (!(this.state.lobbyPropsUpdate))\n            });\n        });\n\n        // the way of Ale, He's so random\n        ListenToPlayersInGame((data) => {\n            if (this.state.playersInGame.length >= 2 && data.length < 2) {\n                // Somebody won!\n                this.setState({\n                    playersInGame: data,\n                    // chasedByPlayer:\n                    huntingPlayer: {},\n                    gamePropsUpdate: (!(this.state.gamePropsUpdate))\n                });\n            }\n            if (data.length >= 2) {\n                let targetPlayer = data[Math.floor(Math.random() * data.length)];\n                while (targetPlayer.playerId === this.state.user.playerId) {\n                    targetPlayer = data[Math.floor(Math.random() * data.length)];\n                }\n\n                // console.log('Player: ',\n                //         this.state.user,\n                //         '\\nTarget player: ',\n                //         {targetPlayer});\n                this.setState({\n                    playersInGame: data,\n                    // chasedByPlayer:\n                    huntingPlayer: targetPlayer,\n                    gamePropsUpdate: (!(this.state.gamePropsUpdate))\n                });\n            }\n            console.log('object :>> ', data);\n        });\n\n        initFirebaseAuth(this.authStateObserver);\n    }\n\n    getUserIndex = (list) => {\n        for (let i = 0; i < list.length; i++) {\n            const player = list[i];\n            if (player.id === this.state.user.id) {\n                return i;\n            }\n        }\n    };\n\n    getUserProps = (user) => {\n        // console.log('Current user: ', { user });\n        return {\n            email: user.email,\n            playerId: user.uid,\n            playerName: this.formatDisplayName(user.displayName),\n            imgURL: user.photoURL,\n        };\n    };\n\n    formatDisplayName = (name) => {\n        let maxLength = 8;\n        let firstName = this.getFirstName(name);\n        if (firstName.length > maxLength) {\n            return `${firstName.slice(0, maxLength)}...`;\n        } else {\n            return firstName;\n        }\n    };\n\n    getFirstName = (name) => {\n        return (name.split(\" \"))[0];\n    };\n\n    playerInLobby = (id) => {\n        const allPlayers = this.state.playersInLobby;\n        let player;\n        for (let i = 0; i < allPlayers.length; i++) {\n            player = allPlayers[i];\n            if (player.playerId === id) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    playerInGame = (id) => {\n        const allPlayers = this.state.playersInGame;\n        if (allPlayers) {\n            let player;\n            for (let i = 0; i < allPlayers.length; i++) {\n                player = allPlayers[i];\n                if (player.playerId === id) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n\n\n    updateToastMessage = (message) => {\n        let toast = this.state.toast;\n        toast[\"message\"] = message;\n        this.setState({\n            toast: toast\n        })\n    };\n\n    openToast = () => {\n        let toast = this.state.toast;\n        toast[\"open\"] = true;\n        this.setState({\n            toast: toast\n        });\n        setTimeout(() => {\n            toast[\"open\"] = false;\n            this.setState({\n                toast: toast\n            });\n        }, this.state.toast.timeout)\n    };\n\n    renderRedirect = () => {\n        if (this.state.redirect) {\n            return <Redirect push to={{\n                pathname: this.state.path,\n                state: {\n\n                }\n            }} />\n        } else {\n            return <React.Fragment />\n        }\n    };\n\n    // Maybe not needed with the authStateObserver in componentDidMount\n    signOut = () => {\n        this.setState({\n            path: '/'\n        });\n        removePlayerFromLobby(this.state.user);\n        signOut();\n    };\n\n    // signIn = () => {\n    //     signIn().then(res => {\n    //         this.setState({\n    //             user: this.getUserProps(res.user),\n    //             page: 1,\n    //         })\n    //     });\n    // };\n\n    clearState = () => {\n        this.setState({\n            huntingPlayer: null,\n        })\n    };\n\n    setOpenModal = (bool) => {\n        this.setState({\n            modalIsOpen: bool\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Router>\n                    {this.renderRedirect()}\n                    <Route exact render={({ location }) => (\n                        <Switch location={location}>\n                            <Route exact path={[\"/lobby\"]} render={props => {\n                                const user = this.state.user;\n                                const userInLobby = this.playerInLobby(user.playerId)\n                                return (<Lobby\n                                    user={user}\n                                    userInLobby={userInLobby}\n                                    allPlayers={this.state.playersInLobby}\n                                    lobbyPropsUpdate={this.state.lobbyPropsUpdate}\n                                    updatePlayerReadyState={setPlayerReadyStatus}\n                                    addPlayerToLobbyFunc={addPlayerToLobby}\n                                    removePlayerFromLobbyFunc={removePlayerFromLobby}\n                                    updateToastMessage={this.updateToastMessage}\n                                    openToast={this.openToast}\n                                    debounceToast={this.state.toast.open}\n                                    signOut={this.signOut}\n                                    addPlayerToNewGame={addPlayerToNewGame}\n                                />);\n                            }} />\n                            <Route exact path={[\"/map\"]}>\n                                <MapView\n                                    user={this.state.user}\n                                    playersInGame={this.state.playersInGame}\n                                    huntingPlayer={this.state.huntingPlayer}\n                                    chasedByPlayer={this.state.chasedByPlayer}\n                                    publishMyLocation={this.publishMyLocation}\n                                    targetLocation={this.state.targetLocation}\n                                    openToast={this.openToast}\n                                    updateToastMessage={this.updateToastMessage}\n                                    debounceToast={this.state.toast.open}\n                                    playerInGame={this.playerInGame(this.state.user.playerId)}\n                                    removePlayerFromGame={removePlayerFromGame}\n                                    setModal = {this.setOpenModal}\n                                />\n                            </Route>\n                            <Route exact path={[\"/\", \"/index.html\", \"/*\"]}>\n                                <Home\n                                    signIn={signIn}\n                                    content={\n                                        <React.Fragment>\n                                        </React.Fragment>\n                                    }\n                                />\n                            </Route>\n                        </Switch>\n                    )} />\n                </Router>\n                <Modal isOpen={this.state.modalIsOpen}>\n                    This motherfucker is loading\n                </Modal>\n                <Toast\n                    isOpen={this.state.toast.open}\n                    animation={\"fall\"}\n                    animationOptions={{ duration: 0.2, delay: 0.4, timing: 'ease-in' }}\n                >\n                    <span>{this.state.toast.message}</span>\n                </Toast>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.Fragment>\n  {/*<React.StrictMode>*/}\n        <App />\n  {/*</React.StrictMode>*/}\n    </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}